{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Esta p\u00e1gina","text":""},{"location":"#informatica","title":"Inform\u00e1tica","text":"<p>En esta p\u00e1gina web ir\u00e9 desarrollando apuntes a lo largo de los a\u00f1os seg\u00fan los distintos m\u00f3dulos que vaya impartiendo en educaci\u00f3n.  Tambi\u00e9n, se incrustar\u00e1n o enlazar\u00e1n apuntes o documentaci\u00f3n externa que ser\u00e1 referenciada en el apartado de \"referencias\", donde se dar\u00e1 cr\u00e9dito Los apuntes se complementar\u00e1n con enlaces a aula virtual o p\u00e1ginas web externas.</p> Autor: Marcos N\u00fa\u00f1ez Celeiro"},{"location":"1-intro/intro-informatica/","title":"Moverse en Windows","text":""},{"location":"1-intro/intro-informatica/#introduccion-a-la-informatica","title":"Introducci\u00f3n a la inform\u00e1tica","text":"<p>Hay muchas cosas que pueden abarcarse en una introducci\u00f3n a la inform\u00e1tica. En este caso, nos vamos a centrar en la privacidad de los navegadores, comprender tipos de ficheros que existen y sus extensiones.</p>"},{"location":"1-intro/intro-informatica/#cheatsheet-de-combinaciones-de-teclas","title":"Cheatsheet de combinaciones de teclas","text":"Acci\u00f3n Combinaci\u00f3n Abrir pesta\u00f1a del navegador CONTROL + T Cerrar pesta\u00f1a del navegador CONTROL + W Cerrar ventana ALT + F4 Hacer captura de parte de la pantalla WINDOWS + SHIFT + S Cambiar entre ventanas ALT + TAB Ver escritorio WINDOWS + D Recargar p\u00e1gina web CONTROL + R o F5 Renombrar fichero o carpeta F2 Eliminar fichero SUPR Bloquear pantalla WINDOWS + L"},{"location":"1-intro/intro-informatica/#ficheros-y-carpetas","title":"Ficheros y carpetas","text":""},{"location":"1-intro/intro-informatica/#crear-una-nueva-carpeta-en-windows-11","title":"Crear una nueva carpeta en Windows 11","text":"<p>Para crear una nueva carpeta en Windows 11 se puede pulsar en el bot\u00f3n derecho en un sitio vac\u00edo y seleccionar \"Nueva carpeta\":</p> <p></p>"},{"location":"1-intro/intro-informatica/#extensiones-de-ficheros","title":"Extensiones de ficheros","text":"<p>Si nos fijamos en la imagen anterior, el fichero \"texto1\" es un fichero de texto. Los ficheros de texto suelen tener la extensi\u00f3n \".txt\".</p> <p>El nombre de ese fichero, por lo tanto, deber\u00eda ser \"texto1.txt\". Por seguridad (para que no cambiemos la extensi\u00f3n por error a los ficheros) Windows oculta la extensi\u00f3n.</p> <p>Algunas de las extensiones de ficheros m\u00e1s comunes son las siguientes:</p> Nombre . Extensi\u00f3n Fichero de texto . txt imagen . jpg video . mp4 Documento . odt Documento . docx Ejecutable . exe Ejecutable instalable . msi Comprimido . zip Comprimido . rar <p>En los sistemas operativos Windows, por defecto, las extensiones de fichero vienen deshabilitadas (por tanto, aunque est\u00e1n ah\u00ed, no se ven). Para poder verlas debes, desde cualquier carpeta, hacer lo siguiente:</p> <p></p>"},{"location":"1-intro/intro-informatica/#comprimir-y-descomprimir-ficheros","title":"Comprimir y descomprimir ficheros","text":"<p>Los ficheros comprimidos suelen tener la extensi\u00f3n .zip o .rar (aunque existen otras: tar.gz, tgz, 7zip...).</p> <p>Para comprimir un fichero, solamente hay que pulsar bot\u00f3n derecho sobre los archivos que se desean comprimir y pulsar la opci\u00f3n deseada. Por ejemplo, si disponemos de la aplicaci\u00f3n 7zip:</p> Bot\u00f3n derecho --&gt; 7-Zip --&gt; A\u00f1adir al archivo. Nos aparecer\u00e1 una nueva ventana. Le ponemos un nombre al fichero y elegimos extensi\u00f3n zip (es la m\u00e1s com\u00fan). <p>Si en lugar de comprimir, queremos descomprimir, hacemos el mismo proceso seleccionando la opci\u00f3n de \"descomprimir\" o \"extraer\":</p> Bot\u00f3n derecho -&gt; 7-Zip -&gt; Extraer aqu\u00ed (o \"extraer ficheros\" u otras opciones que digan \"extraer\")."},{"location":"1-intro/intro-informatica/#editores-de-texto-y-procesadores-de-texto","title":"Editores de texto y procesadores de texto","text":"<p>Es importante diferenciar entre editores de texto y procesadores de texto. Mientras que un fichero editado con un editor de texto (p. ej: Bloc de Notas) solo contiene texto, uno editado con un procesador de texto contiene muchos metadatos: negritas, cursivas, m\u00e1rgenes, colores...). La extensi\u00f3n m\u00e1s t\u00edpica usada para almacenar ficheros en editores de texto es .txt mientras que en procesadores de texto son .odt y .docx.</p>"},{"location":"1-intro/intro-informatica/#navegadores-web","title":"Navegadores web","text":"<p>Los navegadores web m\u00e1s populares hoy en d\u00eda son:</p> <ul> <li>Mozilla Firefox.</li> <li>Google Chrome.</li> <li>Microsoft Edge.</li> <li>Opera.</li> </ul> <p>Todos estos navegadores funcionan muy bien hoy en d\u00eda. Nosotros utilizaremos Firefox de forma habitual ya que adem\u00e1s de funcionar muy bien es el \u00fanico de estos que es libre.</p>"},{"location":"1-intro/intro-informatica/#ejercicios","title":"Ejercicios","text":"<ol> <li>Prueba a cambiar la extensi\u00f3n de un fichero de Word o Writer a .zip (de fichero comprimido) y mira lo que ocurre. Razona por qu\u00e9 crees que pasa.</li> <li>\u00bfCu\u00e1l es la diferencia entre un editor de textos y un procesador de textos? Lo que has probado en el ejercicio anterior puede ayudarte a razonarlo.</li> <li>Busca y prueba dos procesadores de texto distintos de Word y Writer.</li> </ol>"},{"location":"1-intro/intro-sos/","title":"Introducci\u00f3n a los sistemas operativos","text":""},{"location":"1-intro/intro-sos/#sistemas-operativos","title":"Sistemas operativos","text":"<ul> <li>Sistemas operativos de prop\u00f3sito general: o de uso general, el que utilizan las personas en su casa.</li> <li>Sistemas operativos en modo servidor: orientados a dar servicios a otras personas. P. ej: alojar webs a las que se accede desde navegadores web.</li> </ul>"},{"location":"1-intro/intro-sos/#sistemas-operativos-de-proposito-general","title":"Sistemas operativos de prop\u00f3sito general","text":"<p>Podemos ordenar los sistemas operativos mas habituales actualmente en tres grupos:</p> <ul> <li>Windows</li> <li>MacOS</li> <li>GNU/Linux</li> </ul>"},{"location":"1-intro/intro-sos/#sistemas-windows","title":"Sistemas Windows","text":"<p>Tienen alrededor del 80% de la cuota de mercado en 2022. Los sistemas operativos de Microsoft nacen en 1981 con MS-DOS (el cu\u00e1l solo funciona por un terminal de texto, no tiene ventanas todav\u00eda). Para hacerlo m\u00e1s accesible para el p\u00fablico general las ventanas (la primera interfaz gr\u00e1fica de usuario o GUI) nace con Windows 1.0 en 1985. V\u00eddeo (Historia de Windows en 3 minutos)</p>"},{"location":"1-intro/intro-sos/#macos","title":"MacOS","text":"<p>MacOS (antes llamado OS X) es la l\u00ednea de sistemas operativos creada por Apple para sus ordenadores (igual que lo es la marca Windows para Microsoft). La primera versi\u00f3n tiene fecha de 1984 y fue el primer ordenador personal que inclu\u00eda una GUI (interfaz gr\u00e1fica de usuario). Apple tiene un modelo de negocio basado en la exclusividad y la diferenciaci\u00f3n con la competencia. Al contrario que Microsoft, Apple hace tanto el hardware como el software de sus productos.</p>"},{"location":"1-intro/intro-sos/#gnulinux","title":"GNU/Linux","text":"<p>GNU/Linux es la base de muchos sistemas operativos de c\u00f3digo abierto. GNU/Linux no es un sistema operativo completo, sino una serie de programas y herramientas con un n\u00facleo (kernel) que comparten muchos sistemas operativos (OpenSuse, Ubuntu, Linux Mint, Debian, etc.). Los nombres m\u00e1s importantes detr\u00e1s de GNU/Linux son Richard Stallman y Linus Torvalds.</p>"},{"location":"1-intro/intro-sos/#diferencias-principales-entre-los-sistemas-operativos","title":"Diferencias principales entre los sistemas operativos","text":""},{"location":"1-intro/intro-sos/#organizacion-de-los-ficheros-en-el-disco-duro","title":"Organizaci\u00f3n de los ficheros en el disco duro","text":"<p>El disco duro es el componente donde se almacena la informaci\u00f3n del ordenador. Internamente, los archivos se organizan en una jerarqu\u00eda de carpetas (tambi\u00e9n llamadas directorios) y ficheros. </p>"},{"location":"1-intro/intro-sos/#organizacion-de-los-datos-en-sistemas-windows","title":"Organizaci\u00f3n de los datos en sistemas Windows","text":"<p>En los sistemas Windows, tanto los discos duros como los pendrives, tarjetas SD u otros dispositivos de almacenamiento se representan con una letra (C, D, E, F, G, H...). Cada letra representa un disco f\u00edsico donde se almacena la informaci\u00f3n (a veces ese disco duro f\u00edsico se puede dividir en muchas letras y aparecer verse como si fuesen varios). Para acceder a la informaci\u00f3n de los discos en Windows puedes seguir los siguientes pasos: 1. Pulsa en el icono de Windows -&gt; Este equipo.  2. En la secci\u00f3n \"Dispositivos y unidades\" puedes ver tus discos duros y su espacio ocupado y disponible. Como ves, est\u00e1n organizados por letras. 3.  </p> <p>En Windows el disco principal (donde se guarda toda la informaci\u00f3n importante del sistema) es el disco C:/.</p>"},{"location":"1-intro/intro-sos/#organizacion-de-los-datos-en-sistemas-gnulinux","title":"Organizaci\u00f3n de los datos en sistemas GNU/Linux","text":"<p>Al contrario que en Windows, en sistemas GNU/Linux los discos f\u00edsicos donde se almacena informaci\u00f3n no aparecen como letras. En estos sistemas existe una carpeta principal (llamada ra\u00edz) donde se almacena todo. Esta carpeta es \"/\".</p> <ul> <li>En Windows, la carpeta del usuario \"Marcos\" se encontrar\u00eda (por defecto) en C:\\Usuarios\\marcos.</li> <li>En GNU/Linux, la carpeta del usuario \"Marcos\" se encuentra (por defecto) en /home/marcos.</li> <li>En Windows los discos donde se almacena la informaci\u00f3n se denotan con letras (C, D, E...).</li> <li>En GNU/Linux todo se organiza en una carpeta ra\u00edz (/) independientemente del disco en que se encuentre f\u00edsicamente.</li> </ul>"},{"location":"1-intro/intro-sos/#terminales-de-comandos","title":"Terminales de comandos","text":"<p>En GNU/Linux se usa BASH como terminal, mientras que en Windows es habitual hoy en d\u00eda utilizar PowerShell.  </p>"},{"location":"1-intro/intro-sos/#extensiones-de-ficheros","title":"Extensiones de ficheros","text":"<p>TODO: ver -&gt; extensiones de ficheros</p> <p>TODO: tiendas de aplicaciones, archivos ocultos, terminales de comandos</p>"},{"location":"1-intro/intro-sos/#archivos-y-carpetas","title":"Archivos y carpetas","text":"<p>TODO: diferencia ruta absoluta y rutas relativas, navegaci\u00f3n entre carpetas</p>"},{"location":"1-intro/intro-sos/#sistemas-de-ficheros-y-particiones","title":"Sistemas de ficheros y particiones","text":"<p>En la parte de componentes f\u00edsicos se ha hablado del almacenamiento de informaci\u00f3n en discos duros r\u00edgidos y discos en estado s\u00f3lido (SSD). Estos \u00faltimos son m\u00e1s modernos, m\u00e1s r\u00e1pidos y, por lo tanto, tambi\u00e9n m\u00e1s caros.</p> <p>A continuaci\u00f3n se muestran los distintos tipos de dispositivos de almacenamiento ordenadores de m\u00e1s r\u00e1pido a m\u00e1s lento y, a su vez, de m\u00e1s caro a m\u00e1s barato: |  | | :--: | | SSD NVMe M.2 de 1TB por 157\u20ac a 28/08/2022 (obtenido de pccomponentes) |</p> <p></p> SSD SATA3 de 2.5\" y 1TB por 157\u20ac a 28/08/2022 (obtenido de pccomponentes) <p></p> Disco duro mec\u00e1nico SATA3 de 3.5\" y 4TB por 91\u20ac a 28/08/2022 (obtenido de pccomponentes) <p>Esto nos da una idea de donde vamos a trabajar ahora (sobre estos discos/dispositivos f\u00edsicos). Los discos tienen una determinada capacidad (los dos primeros de la imaten son de 1 Terabyte o lo que es lo mismo, 1000 Gigabytes).</p> <p>TODO: particiones, sistemas de ficheros</p>"},{"location":"1-intro/intro-sos/#arranque-del-sistema","title":"Arranque del sistema","text":"<p>Respecto al arranque del sistema, existen cuatro conceptos importantes a entender: - BIOS (Sistema b\u00e1sico de entrada-salida) - UEFI (Unified Extensible Firmware Interface) - MBR - GPT</p> <p>BIOS y UEFI se refieren a dos gestores de arranque. Se encargan de iniciar los componentes de hardware e iniciar el sistema operativo. UEFI es la versi\u00f3n m\u00e1s moderna (BIOS se ha quedado obsoleta). A\u00fan as\u00ed, coloquialmente se sigue utilizando BIOS para denominar, en general, al gestor de arranque.</p> <p>MBR y GPT, por otro lado, son las tablas de particionado (GPT es la versi\u00f3n m\u00e1s moderna). Puedes consultar este enlace para m\u00e1s informaci\u00f3n.</p>"},{"location":"1-intro/intro-sos/#referencias","title":"Referencias","text":"<ul> <li>Germ\u00e1n Cocca. Windows vs MacOS vs Linux - Operating System Handbook. Freecodecamp. Obtenido de: https://www.freecodecamp.org/news/an-introduction-to-operating-systems/#thethreemainoss</li> <li>Dong Ngo. File System and Partition Explained: How to Take Control of Your Storage. Dongknows. Obtenido de: https://dongknows.com/disk-partition-and-file-system-explained/#what-is-a-partition</li> <li>Imran Afzal. Complete Linux Training Course to Get Your Dream IT Job 2022. Curso en Udemy. Obtenido de: https://www.udemy.com/course/complete-linux-training-course-to-get-your-dream-it-job/</li> <li>Pedro. MBR o GPT - \u00bfCu\u00e1l es la diferencia y cu\u00e1l es mejor?. EaseUS. Obtenido de: https://es.easeus.com/partition-manager-tips/mbr-y-gpt.html</li> </ul>"},{"location":"1-intro/mecanografia/","title":"Mecanograf\u00eda","text":""},{"location":"1-intro/mecanografia/#curso-de-mecanografia","title":"Curso de mecanograf\u00eda","text":"<p>Si te est\u00e1s iniciando en inform\u00e1tica o llevas un tiempo pero has aprendido a escribir por tu cuenta, te recomiendo que pruebes la forma recomendada de escribir con el curso de la web typingclub.</p> <p></p> <p>Una vez est\u00e9s en la p\u00e1gina, reg\u00edstrate con tu correo para que se guarden tus avances. Intenta siempre escribir de la manera correcta, colocando el dedo \u00edndice en las letras \"a\" y \"j\". Con el paso del tiempo conseguir\u00e1s escribir cualquier cosas sin mirar el teclado.</p>"},{"location":"1-intro/mecanografia/#pon-a-prueba-tus-habilidades","title":"Pon a prueba tus habilidades","text":"<p>Puedes poner a prueba tus habilidades. \u00bfC\u00f3mo eres de r\u00e1pido? \u00bfQuieres competir con amigos?</p> <p>Existe una p\u00e1gina llamada Fastfingers donde puedes medir tus tiempos escribiendo.</p> <p></p>"},{"location":"1-intro/multimedia/","title":"Multimedia","text":""},{"location":"1-intro/multimedia/#multimedia-imagen-y-video","title":"Multimedia: imagen y v\u00eddeo","text":""},{"location":"1-intro/ofimatica/","title":"Ofim\u00e1tica","text":""},{"location":"1-intro/seguridad-internet/","title":"Seguridad en internet","text":""},{"location":"1-intro/seguridad-internet/#contrasenas","title":"Contrase\u00f1as","text":"<p>Actualmente, las aplicaciones piden contrase\u00f1as normalmente complejas, \u00bfpor qu\u00e9?</p> <p>Bien, la raz\u00f3n es porque es m\u00e1s dif\u00edcil robarlas. Existen dos tipos de ataques:</p> <ul> <li>Ataque por fuerza bruta: un programa que prueba contrase\u00f1as por fuerza bruta basicamente intentar\u00eda todas las contrase\u00f1as posibles. Por ejemplo, desde la a hasta la z (may\u00fasculas y min\u00fasculas) desde 4 d\u00edgitos hasta 8. O solo num\u00e9ricas. Una contrase\u00f1a con muchos caracteres y que incluye algunos raros (* @ # &amp; %...) es computacionalmente muy dif\u00edcil (practicamente imposible) de descifrar.</li> <li>Ataque por diccionarios: se prueban los usuarios y contrase\u00f1as m\u00e1s comunes. Por ejemplo:</li> </ul> Usuario Contrase\u00f1a admin admin 1234 1234 admin 123456 ........ ........ <p>Nota</p> <p>Esto es solo un ejemplo de posibles combinaciones muy comunes. Si usas una de estas es m\u00e1s probable que alguien pueda descubrirla (incluso sin ning\u00fan tipo de aplicaci\u00f3n). Por ello, se obliga a escribir contrase\u00f1as seguras.</p> <p>Para evitar peligros con las contrase\u00f1as se recomienda cumplir ciertas normas de: complejidad de la misma (may\u00fasculas, min\u00fasculas, n\u00fameros y caracteres poco habituales), longitud (m\u00e1s de 8 caracteres) y cambiarla cada cierto tiempo.</p> <p>En empresas o p\u00e1ginas web se piden (en ocasiones) demasiados requisitos para las contrase\u00f1as, lo cu\u00e1l puede resultar problem\u00e1tico. Por ejemplo, imagina que (aparte de los anteriores requisitos) te pidan que la cambies cada 6 meses y que cada vez sea diferente (no puedes repetir las antiguas). Adem\u00e1s de esto, debes tener contrase\u00f1as diferentes para varios servicios. Estos requisitos resultan contraproducentes en muchas ocasiones, ya que implican que las contrase\u00f1as se pierdan o se apunten en papeles sobre la mesa, terminen en papeleras... lo cu\u00e1l las hace realmente m\u00e1s vulnerables a ser descubiertas.</p>"},{"location":"1-intro/seguridad-internet/#navegadores-web","title":"Navegadores web","text":"<p>Hay algunos conceptos a tener en cuenta respectoa los navegadores web:</p> <ul> <li>Historial: cuando navegas por internet queda almacenada tanto la fecha como la hora en que has accedido a cada p\u00e1gina. La lista de p\u00e1ginas a las que accedes se llama \"historial\" y, si alguien accede a tu ordenador, puede descubrir informaci\u00f3n sobre ti. Todos los navegadores tienen opci\u00f3n de borrar el historial de navegaci\u00f3n.</li> <li>Modo inc\u00f3gnito o privado: los navegadores tienen un modo privado (o inc\u00f3gnito). En este modo el historial de navegaci\u00f3n no se guarda en el historial de navegaci\u00f3n (por tanto, todo lo que haces en el modo inc\u00f3gnito es m\u00e1s privado ya que no queda almacenado).</li> <li>Cookies: las cookies son peque\u00f1as l\u00edneas de informaci\u00f3n que una p\u00e1gina (cuando entras) guarda sobre ti. De esta manera, si vuelves a entrar en ella sabe que eres la misma persona que lo ha hecho anteriormente. Una cookie puede consistir en tu login con usuario y contrase\u00f1a que, una vez hecho, queda almacenado durante un tiempo (por eso no tienes que volver a identificarte/logearte cada vez que entras a la web). Las cookies tambi\u00e9n pueden ser eliminadas y hacerlo ayuda a mitigar riesgos de privacidad y seguridad.</li> <li>Contrase\u00f1as: los navegadores web m\u00e1s comunes permiten almacenar contrase\u00f1as (p. ej: en Mozilla Firefox tienen un sistema llamado Firefox Sync, en Google Chrome ir\u00edan asociadas a tu cuenta de Google/Gmail). Almacenar contrase\u00f1as hace que estas est\u00e9n en la nube y no las pierdas (con los riesgos de se almacenan en un sitio externo). Existen malwares denominados keyloggers, estos guardan todo lo que escribes en el ordenador (lo cu\u00e1l es una manera efectiva de robar usuarios y contrase\u00f1as). Estos gestores de contrase\u00f1as te protegen ante eso, ya que no tienes que escribirlas.</li> </ul>"},{"location":"1-intro/seguridad-internet/#malware","title":"Malware","text":"<p>El malware o software maliciosoque se instala sin que el usuario lo sepa. Existen m\u00faltiples tipos, algunos son los siguientes:</p>"},{"location":"1-intro/seguridad-internet/#spam","title":"Spam","text":"<p>El spam se refiere a correos masivos con publicidad que te instan a entrar en distintas p\u00e1ginas web. En el correo electr\u00f3nico, por ejemplo, suele haber una pesta\u00f1a dedicada a correos de spam.</p>"},{"location":"1-intro/seguridad-internet/#pishing","title":"Pishing","text":"<p>El Phishing se refiere a p\u00e1ginas web falsas que suplantan a las verdaderas para que el usuario desprevenido introduzca informaci\u00f3n sensible (es com\u00fan el phishing bancario). Puede ser un mensaje que indique que te ha tocado la loter\u00eda y entres al enlace e introduzcas tus datos para cobrar el dinero.</p> <p>Otro ejemplo es un correo que te avise de que debes cambiar tus credenciales en Instagram por una brecha de seguridad (y en lugar de llevarte a la p\u00e1gina de instagram te dejan un enlace a una p\u00e1gina clon www.instagrram.com, por ejemplo). Si metes ah\u00ed tus credenciales reales se las estar\u00edas dando a otra persona desconocida.</p>"},{"location":"1-intro/seguridad-internet/#troyano","title":"Troyano","text":"<p>Malware escondido dentro de un software aparentemente bueno. Una vez lo ejecutas hacen su tarea maliciosa o se instalan sin m\u00e1s para actuar pasado cierto tiempo.</p>"},{"location":"1-intro/seguridad-internet/#keylogger","title":"Keylogger","text":"<p>Es un tipo de malware que guarda todas tus pulsaciones de teclado (y con esto pueden obtener cualquier cosa que escribas, desde contrase\u00f1as hasta otra informaci\u00f3n personal). Los navegadores web tienen autocompletado de formularios (p. ej: al registrarte en una p\u00e1gina) para que un keylogger que se pueda tener no los detecte. Tambi\u00e9n, almacenar contrase\u00f1as con un sistema como LastPass, de pago, o BitWarden, gratuito ayuda a protegerse contra este malware. Los navegadores web tambi\u00e9n almacenan contrase\u00f1as, aunque se consideran m\u00e1s inseguros que los servicios anteriores.</p>"},{"location":"1-intro/seguridad-internet/#spyware","title":"Spyware","text":"<p>El spyware intenta solo recopilar informaci\u00f3n del usuario (actividad variada, historial de navegaci\u00f3n web, etc.) para venderla posteriormente.</p>"},{"location":"1-intro/seguridad-internet/#ramsonware","title":"Ramsonware","text":"<p>Este es el que m\u00e1s sale en el cine, realmente se ve muy bien que hace con algunas escenas de series o pel\u00edculas:</p> <p>Aunque la escena presentada en el v\u00eddeo anterior es ficci\u00f3n, el ramsonware en s\u00ed es real y ah\u00ed se puede ver bastante bien lo que hace.  Este es probablemente el malware m\u00e1s peligroso que existe. La palabra Ramson significa \u201crescate\u201d. Suelen infectar equipos a trav\u00e9s de puertas traseras o troyanos y, una vez dentro, encriptan todos los ficheros que pueden contener informaci\u00f3n \u00fatil que est\u00e9n a su alcance (dentro del propio equipo o a trav\u00e9s de la red) lo que los hace muy peligrosos. Algunos famosos son CryptoLocker o WannaCry.</p> <p>La \u00fanica opci\u00f3n de recuperarse de un ataque de Ramsonware es restaurar los datos de una copia de seguridad (previa desinfecci\u00f3n). Nunca se debe pagar el rescate por dos motivos:</p> <ul> <li>Fomenta que el delincuente contin\u00fae usando este m\u00e9todo para extorsionar a otras personas.</li> <li>Nadie puede asegurar que, tras el pago, se vaya a obtener el software y la contrase\u00f1a de descifrado.</li> </ul> <p>Algunos enlaces interesantes para informarse m\u00e1s sobre este tema:</p> <ul> <li>Ataque a Telef\u00f3nica en 2017.</li> <li>Experiencia de una persona en empresa con un ataque de Ramsonware (Xataka)</li> </ul> Imagen de ordenador infectado con el ramsonware WannaCry"},{"location":"1-intro/seguridad-internet/#mineria","title":"Miner\u00eda","text":"<p>El malware de miner\u00eda de monedas utiliza sistemas para crear criptomonedas (lo que se conoce como \u201cminar\u201d) sin consentimiento ni conocimiento de las v\u00edctimas.</p> <p>Este tipo de malware ha empezado a funcionar hace pocos a\u00f1os con el auge de las criptomonedas y se ha disparado (seg\u00fan McAfee Labs) desde 2018. Solo en ese a\u00f1o se crearon 5 millones de nuevos malwares de miner\u00eda.</p>"},{"location":"1-intro/seguridad-internet/#proteccion-ante-amenazas-y-privacidad","title":"Protecci\u00f3n ante amenazas y privacidad","text":"<p>A nivel usuario, puedes protegerte de diversas formas:</p> <ul> <li>Mantener el sistema operativo y el antivirus actualizado.</li> <li>No entrar a cambiar la contrase\u00f1a desde ning\u00fan email que te hayan enviado (puede ser falso). Tampoco conf\u00edes en los mensajes de m\u00f3vil.</li> <li>No tengas la misma contrase\u00f1a siempre.</li> <li>En caso de aplicaciones m\u00f3viles, no instalar aplicaciones de fuentes desconocidas (solamente desde la Play Store). Por defecto, en Android, las aplicaciones de terceros no se pueden instalar a no ser que se active explicitamente la opci\u00f3n \"Permitir or\u00edgenes desconocidos\".</li> <li>Introduce tu correo en https://haveibeenpwned.com/ y comprueba que las contrase\u00f1as del mismo no han sido vulneradas. En esa p\u00e1gina web se almacena informaci\u00f3n sobre filtraciones de seguridad en distintas plataformas y te indican si puedes tener problemas con la tuya.</li> <li>Puedes almacenar las contrase\u00f1as en alg\u00fan gestor (LastPass, Bitwarden...). Aunque estar\u00edan almacenadas en un servidor externo (esto ya de por s\u00ed es un peligroso) ser\u00edas menos vulnerable a otros malwares como Keyloggers y podr\u00e1s tener varias diferentes sin perderlas. Suele ser un poco m\u00e1s seguro que almacenarlas en el navegador.</li> <li>Si usas cuenta de Google revisa bien en ella si hay problemas de seguridad. Si almacenas ah\u00ed contrase\u00f1as te avisar\u00e1 si hay algunas expuestas a filtraciones.</li> <li>Si usas un ordenador externo, utiliza navegaci\u00f3n privada.</li> <li>Ten cuidado con la navegaci\u00f3n sobre redes Wifi abiertas (la informaci\u00f3n no va encriptada y puede capturarse con alg\u00fan sniffer de tr\u00e1fico, p. ej: Wireshark).</li> <li>Vigila que la navegaci\u00f3n sea HTTPS (y no HTTP). La informaci\u00f3n que se pasa por HTTPS va encriptada.</li> <li>Si te preocupa mucho la seguridad puedes probar otras opciones de navegador web, como por ejemplo: Brave.</li> <li>Cuidado con almacenar contrase\u00f1as en papel y dejarlas en cualquier sitio. Guardalas de forma segura y r\u00f3mpleas si las tiras.</li> <li>Borra el historial y cookies de forma peri\u00f3dica.</li> </ul>"},{"location":"1-intro/seguridad-internet/#referencias","title":"Referencias","text":"<ul> <li>Kat Aoki. How to Increase Web Browser Security. Lifewire. Obtenido de: https://www.lifewire.com/increase-web-browser-security-4767673</li> </ul>"},{"location":"apuntes-variados/android/","title":"Android","text":""},{"location":"apuntes-variados/android/#apuntes-android","title":"Apuntes Android","text":"<p>Solo est\u00e1 la teor\u00eda, faltan pr\u00e1cticas y enlaces diversos. DESCARGAR</p>"},{"location":"apuntes-variados/control-versiones/","title":"Control versiones","text":""},{"location":"apuntes-variados/control-versiones/#git-cheatsheet-2020","title":"Git cheatsheet (2020)","text":"<p>Recordar cambiar la rama 'master' por 'main'.</p>"},{"location":"apuntes-variados/firewalling/","title":"Firewalling","text":""},{"location":"apuntes-variados/firewalling/#apuntes-muy-basicos-de-iptables-realizados-en-enero-de-2020","title":"Apuntes muy b\u00e1sicos de IPTables (realizados en Enero de 2020)","text":"<p>Actualmente probablemente sea mejor moverse directamente a nftables (adoptado ahora por defecto en Debian).</p>"},{"location":"apuntes-variados/gamedev/","title":"Gamedev","text":""},{"location":"apuntes-variados/gamedev/#apuntes-basicos-unity-2022","title":"Apuntes b\u00e1sicos Unity (2022)","text":"<p>Tambi\u00e9n, tengo unas peque\u00f1as notas con c\u00f3digo en este repositorio de Github.</p>"},{"location":"apuntes-variados/hardware/","title":"Almacenamiento, tarjetas gr\u00e1ficas y monitores","text":""},{"location":"apuntes-variados/hardware/#discos-duros-pantallas-y-tarjetas-graficas","title":"Discos duros, pantallas y tarjetas gr\u00e1ficas","text":""},{"location":"apuntes-variados/intro/","title":"Intro","text":"<p>Aqu\u00ed dejo apuntes incompletos que he creado a lo largo de los cursos en otros formatos (V\u00eddeo, Google Drive, pdfs, etc.). La mayor\u00eda est\u00e1n incompletos o necesitan refinarse.</p> <p>Estos apuntes solo ser\u00e1n actualizados si vuelvo a impartir clases relacionadas con los mismos, mientras tanto los dejo aqu\u00ed por si a alguien le ayuda su lectura!</p> <p>Dejo tambi\u00e9n un canal de youtube con contenido variado.</p>"},{"location":"apuntes-variados/programming/","title":"Programaci\u00f3n","text":""},{"location":"apuntes-variados/programming/#java-orientacion-a-objetos-ult-act-en-2019","title":"Java (orientaci\u00f3n a objetos - Ult. Act. en 2019)","text":""},{"location":"apuntes-variados/programming/#hibernate-ult-act-enero-2020","title":"Hibernate (Ult. Act. Enero 2020)","text":""},{"location":"apuntes-variados/programming/#curso-gestores-de-paqueteria-maven-ult-act-2020","title":"Curso gestores de paqueter\u00eda - Maven (Ult. Act. 2020)","text":"<p>Curso de 3-4 horas impartido en Junio de 2020.</p>"},{"location":"gnu-linux/commands-basics/","title":"Comandos b\u00e1sicos","text":""},{"location":"gnu-linux/commands-basics/#terminal-de-comandos","title":"Terminal de comandos","text":"<p>Un terminal de comandos es una interfaz en modo texto usada para controlar un ordenador (ya sea Linux o Windows).</p> <p>A continuaci\u00f3n se muestra el ejemplo de un terminal de comandos en un sistema operativo basado en Linux (Raspbian): </p> <p>No te preocupes si lo que ves te resulta extra\u00f1o ahora, ya que en pocos d\u00edas entender\u00e1s perfectamente todo lo que aparece en esa imagen.</p>"},{"location":"gnu-linux/commands-basics/#comandos-basicos-de-gnulinux","title":"Comandos b\u00e1sicos de GNU/Linux","text":"Acci\u00f3n Comando Ver manual de un comando man comandoman ls Reiniciar ordenador sudo reboot Apagar ordenador sudo shutdown -h now Ver procesos tophtoppsps -ef Probar conexi\u00f3n y latencia ping www.google.comping 151.101.133.50 Ver informaci\u00f3n de red ip address Mostrar mensaje por pantalla echo \"mensaje\". Por ejemplo:echo \"Hola mundo\" echo \"Estoy ejecut\u00e1ndome en el SHELL: $0.\""},{"location":"gnu-linux/commands-basics/#comandos-de-carpetas-y-ficheros","title":"Comandos de carpetas y ficheros","text":"<p>La ra\u00edz de todas las carpetas (tambi\u00e9n llamadas directorios) se denomina en Windows como C:. En GNU/Linux, en cambio, la ra\u00edz de todo es \u201c/\u201d. Un usuario se sit\u00faa en Windows y GNU/Linux en las siguientes carpetas:</p> <ul> <li>Windows 10:     \u2003C:/Usuarios/nombreUsuario/</li> <li>GNU/Linux:      \u2003 /home/nombreUsuario/</li> </ul> Acci\u00f3n Comando Ejemplo Ver d\u00f3nde est\u00e1s pwd pwd Listar ficheros ls -lls -lals -lh ls (muestra ficheros, pero no los ocultos)ls -l (muestra ficheros e informaci\u00f3n)ls -a (muestra ficheros, inclu\u00eddos los ocultos)ls -lh (muestra informaci\u00f3n y \"h\" de human readable) Moverse entre carpetas cd ruta_carpeta Si estoy en /home/mnceleiro puedo moverme a \"Documentos\" de dos formas:- Ruta absoluta (pongo la ruta completa)cd /home/mnceleiro/Documentos- Ruta relativa (pongo solo desde donde estoy)cd DocumentosPara volver atr\u00e1s (.. representa la carpeta superior)cd ..Estoy en /home/mnceleiro/ y quiero moverme a /home/mnceleiro/Descargas/dropbox (con ruta relativa):cd Descargas/dropboxEstoy en /home/mnceleiro/Descargas/Dropbox y quiero ir a /home/maria/misdatos (con ruta relativa):cd ../../../maria/misdatos (me estoy moviendo 3 carpetas atr\u00e1s y luego a carpeta maria/misdatos) Crear carpeta mkdir nombre_carpeta mkdir clase Crear fichero vac\u00edo touch nombre_fichero touch datos.txt Eliminar algo rmdir nombre_carpetarm nombre_fichero rm partidosrm -r MisFotosSi hay cosas dentro de una carpeta y queremos que borre la carpeta con todo el contenido de dentro hay que usar la opci\u00f3n -r . Mover carpeta Mover un fichero:mv origen destinoMover carpeta con cosas:mv -R origen destino Mover usando rutas absolutas (ruta completa)mv /home/mnceleiro/downloads/datos.txt /home/mnceleiro/documents/datos.txtMover usando rutas relativas (relativo al directorio donde te encuentras)mv datos.txt ../documents.datos.txtSi usas la opci\u00f3n -R puedes mover una carpeta y todo lo que tiene dentro. Cambiar nombre a algo mv nombre_antiguo nombre_nuevo mv datos.txt ../documents/datoscopia.txtTambi\u00e9n puede usarse para mover y con -R Ver contenido de un fichero cat cat -l  cat /etc/shells (el archivo shells tiene una lista con los shells instalados en el sistema)cat /etc/passwd (en este fichero se almacenan los datos de los usuarios del sistema)"},{"location":"gnu-linux/commands-basics/#instalacion-de-software","title":"Instalaci\u00f3n de software","text":"<p>Existen distintas tiendas de aplicaciones seg\u00fan la distribuci\u00f3n GNU/Linux usada as\u00ed como gestores de paquetes. El gestor de paquetes m\u00e1s conocido se llama APT y es usado en distribuciones basadas en Debian, por ejemplo: Ubuntu, Linux Mint, Zorin OS, Steam OS.</p> <p>Los comandos m\u00e1s interesantes a usar con la herramienta APT son los siguientes:</p> Acci\u00f3n Comando Ejemplo Instalar apt install programa sudo apt install kdenlivePara instalar sin que pida confirmaci\u00f3n:sudo apt install -y libreoffice Eliminar apt remove programa sudo apt remove gimp Actualizar apt updateapt upgrade sudo apt updatesudo apt upgrade <p>Es importante tener en cuenta que apt no es el \u00fanico gestor de software disponible. Aunque apt es probablemente la mejor forma de instalar cosas, a veces hay aplicaciones que no se encuentran aqu\u00ed. Si no encuentras la aplicaci\u00f3n en apt podr\u00edas buscar la aplicaci\u00f3n en internet y descargarla desde la p\u00e1gina oficial (tal y como har\u00edas en Windows) o incluso buscar en internet alg\u00fan tutorial de como hacerlo, por ejemplo:</p> <ul> <li>Instalar Spotify en Ubuntu (filtrando \u00faltimo a\u00f1o).</li> <li>Instalar Steam en Ubuntu (filtrando \u00faltimo a\u00f1o).</li> </ul> <p>Te recomiendo hacerlo filtrando por \"\u00faltimo a\u00f1o\" o por la versi\u00f3n de Linux que tengas. Por ejemplo: \"Instalar Spotify en Ubuntu 20.04\".</p>"},{"location":"gnu-linux/commands-basics/#gestion-de-procesos","title":"Gesti\u00f3n de procesos","text":"Acci\u00f3n Comando Descripci\u00f3n/Ejemplos Ver procesos tophtopps -ef top y htop son interactivos (htop requiere instalaci\u00f3n).Ejemplo de ps:ps -ef | grep firefox (filtra procesos con nombre firefox mediante grep) Ver procesos (en forma de \u00e1rbol) pstree ps + tree Matar procesos (por c\u00f3digo) kill [-c\u00f3digo]  Supongamos que queremos matar firefox (hay que mirar cu\u00e1l es su ID de PROCESO, puedes hacerlo usando htop o ps): <code>ps -e \\| grep firefox</code>Matar un proceso de forma normal (por defecto usa c\u00f3digo 15):<code>kill 12345</code>Matar un proceso de manera forzada (p. ej: si se queda trabado). Para matar de forma forzada el c\u00f3digo es el 9:<code>kill -9 12345</code> Matar procesos (por nombre) killall [-c\u00f3digo]  <code>killall firefox</code>Matar el proceso (forzandolo):<code>killall -9 firefox</code> <p>Puedes consultar m\u00e1s informaci\u00f3n sobre como matar procesos y env\u00edo de se\u00f1ales a procesos aqu\u00ed.</p> <p>Referencias:</p> <ul> <li>Imran Afzal. Complete Linux Bash Shell Scripting with Real Life Examples. Udemy. Disponible en: https://www.udemy.com/course/linux-bash-shell-scripting-through-real-life-examples/</li> </ul>"},{"location":"gnu-linux/disk-management/","title":"Gesti\u00f3n de discos y particiones","text":"<p>Al encender un ordenador arranca la BIOS y, despu\u00e9s de esta, arranca el sistema operativo (seg\u00fan el orden de arranque establecido en la BIOS).</p>"},{"location":"gnu-linux/disk-management/#arranque-clasico-legacy-bios-mbr","title":"Arranque cl\u00e1sico (Legacy BIOS + MBR)","text":"<ul> <li>Permite un m\u00e1ximo de 4 particiones primarias por disco (o tres primarias y una extendida). El arranque se puede instalar solo sobre particiones primarias.</li> <li>El resto de particiones deben ser extendidas. No se instala nada en una partici\u00f3n extendida, sino que esta se divide en particiones l\u00f3gicas.</li> <li>El tama\u00f1o m\u00e1ximo de partici\u00f3n es de 2TB.</li> </ul> <p>Nota</p> <p>No se puede instalar nada sobre particiones extendidas. Para hacerlo, antes estas deben subdividirse en \"particiones l\u00f3gicas\".</p> <p>El arranque cl\u00e1sico tiene completa compatibilidad con cualquier sistema. Todos los discos soportan MBR.</p>"},{"location":"gnu-linux/disk-management/#arranque-nuevo-uefi-gpt","title":"Arranque nuevo (UEFI + GPT)","text":"<p>La tabla de particiones Good Partition Table (GPT) se ha dise\u00f1ado para mejorar las limitaciones que ten\u00eda MBR. Ahora:</p> <ul> <li>En lugar de tener particiones: primaria, extendida y l\u00f3gica ahora solamente tienes vol\u00famenes (es decir, esta parte se simplifica ya que solo hay un tipo de partici\u00f3n). Puedes crear \"vol\u00famenes\" (particiones) sobre un disco sin tener que preocuparte m\u00e1s por el tipo de partici\u00f3n.</li> <li>Las nuevas BIOS son m\u00e1s seguras que las anteriores, permiten usar el rat\u00f3n y tienen interfaces m\u00e1s elaboradas. Estas nuevas BIOS se denominan UEFI.</li> <li>GPT es un formato para particionar discos duros, tiene un m\u00e1ximo de 128 particiones por disco con un m\u00e1ximo de 9.4ZB por partici\u00f3n (respecto a los 2TB que ten\u00eda MBR).</li> </ul> <p>Tambi\u00e9n, en UEFI disponemos de Fast Boot y Secure Boot: - Fast boot: se salta todo el arranque de la BIOS y va directamente al sistema operativo. - Secure boot: no se puede arrancar un sistema operativo en que se han hecho modificaciones. El secure boot firma digitalmente la partici\u00f3n.</p> <p>No es posible arrancar particiones GPT si tienes la BIOS en modo Legacy. En el modo UEFI ahora se puede arrancar desde discos duros particionados en GPT.</p>"},{"location":"gnu-linux/disk-management/#manejo-de-discos-y-particiones-en-gnulinux","title":"Manejo de discos y particiones en GNU/Linux","text":""},{"location":"gnu-linux/disk-management/#dispositivos-de-almacenamiento-en-linux","title":"Dispositivos de almacenamiento en Linux","text":"<p>Los dispositivos de almacenamiento (discos duros, SSDs, DVDs, Pendrives...) se representan como un dispositivo en el directorio /dev (devices). </p> <p>Los discos son representados con la siguiente nomenclatura:</p> <ul> <li>Discos SATA: sda, sdb, sdc, sdb...</li> <li>Particiones en discos SATA: sda1, sda2, sda3...</li> <li>Discos IDE (interfaz antigua): hda, hdb, hdc...</li> <li>Discos y particiones NVMe: nvme0, nvme0n1, nvme0n1p1, nvme0n1p1...</li> </ul> <p>El fichero donde se almacenan las particiones en linux es /etc/fstab.</p>"},{"location":"gnu-linux/disk-management/#listar-particiones","title":"Listar particiones","text":"<p>Algunos comandos para consultar la lista de discos y/o particiones son los siguientes:</p> <pre><code># Listar discos\nmount\n\n# Listar discos\nfdisk -l\n\n# Listar discos (salida m\u00e1s limpia)\nlsblk\n</code></pre>"},{"location":"gnu-linux/disk-management/#realizar-operaciones-sobre-discos-con-fdisk","title":"Realizar operaciones sobre discos con fdisk","text":"<p>Despu\u00e9s de realizar uno de los comandos anteriores para listar los discos y particiones, elegimos el disco que queremos particionar (p. ej: sdb): </p><pre><code>sudo fdisk /dev/sdb\n</code></pre> <p>Una vez entramos, tenemos varias opciones. Algunas de las m\u00e1s interesantes a recordar:</p> <ul> <li>\"m\": mostrar la ayuda.</li> <li>\"p\": print, mostrar las particiones que tenemos actualmente.</li> <li>\"n\": New, crea una nueva partici\u00f3n.</li> <li>\"w\": Write, escribe la tabla de particiones.</li> <li>\"d\": delete, elimina una partici\u00f3n.</li> </ul>"},{"location":"gnu-linux/disk-management/#ejercicio","title":"Ejercicio","text":"<ul> <li>A\u00f1ade a Virtualbox dos nuevos discos SATA de 10GB y crea en sdb dos particiones, una de 100MB y otra de 5GB usando fdisk.</li> <li>Lista las particiones.</li> <li>Borra la partici\u00f3n de 100MB.</li> <li>Crea una partici\u00f3n de 50MB.</li> </ul>"},{"location":"gnu-linux/disk-management/#realizar-operaciones-sobre-discos-con-gdisk","title":"Realizar operaciones sobre discos con gdisk","text":"<p>fdisk solo funciona sobre MBR, por lo tanto no debes intentar usarlo nunca en una tabla de particiones GPT. Para eso se usa la herramiente gdisk.</p>"},{"location":"gnu-linux/disk-management/#ejercicio_1","title":"Ejercicio","text":"<p>Usa la herramienta gdisk para particionar el disco sdc con una partici\u00f3n de 6GB y otra con el resto de espacio.</p>"},{"location":"gnu-linux/disk-management/#referencias","title":"Referencias","text":""},{"location":"gnu-linux/disk-quotes/","title":"Cuotas de disco","text":""},{"location":"gnu-linux/ejercicios-variados/","title":"Ejercicios variados","text":""},{"location":"gnu-linux/ejercicios-variados/#lista-de-ejercicios-simples","title":"Lista de ejercicios simples","text":"<ol> <li>Crea una carpeta scripts en /usr/local/sbin/ y otra en /usr/local/bin.</li> <li>Haz que cada usuario nuevo que se cree tenga en su home una carpeta \"normativa-empresa\" con un txt \"normas.txt\" dentro.</li> <li>Crea un script en la carpeta de scripts de sbin que cree usuarios nuevos (los cu\u00e1les se pasan como par\u00e1metro) y debe crearse con shell /bin/bash y un home con el mismo nombre que el del usuario. Utiliza alguna funci\u00f3n en el script. A partir de ahora practica los scripts usando funciones.</li> <li>Prueba el script anterior con varios usuarios (tres de ellos que sean \"test1\", \"test2\" y \"test3\", ya que los aprovecharemos en siguientes ejercicios). Mira si aparece la carpeta \"normativa-empresa\" en el home de os usuarios.</li> <li>Crea un script que cree una copia de seguridad de los homes de los usuarios en /var/backups/homes con formato anho-mes-dia-.tar.gz</li> <li>(Opcional) El ejercicio anterior est\u00e1 bien, pero si el disco se estropea perdemos tanto los homes como las copias de seguridad. Modifica el script anterior para que en lugar de copiarse en tu ordenador se copie en otra m\u00e1quina virtual mediante el comando scp (secure copy), quiz\u00e1 tengas que instalarlo.</li> <li>El crontab permite ejecutar comandos en un instante de tiempo que se le indique (p. ej: todos los lunes a las 7 de la ma\u00f1ana, todos los d\u00edas a las 12:00 y a las 14:00, etc.).</li> <li>Haz un cat del fichero /etc/crontab y leelo.</li> <li>Busca en internet sobre el crontab.</li> <li>Prueba los comandos crontab -l (lista las tareas configuradas) y crontab -e (comando recomendado para editar el fichero crontab).</li> <li>Vamos a testear un cronjob. Crea (usando crontab -e desde tu usuario) un cronjob que a\u00f1ada a un fichero de nombre test-cronjob.txt en tu home una l\u00ednea con el resultado del comando \"date\" de linux.</li> <li>Crea un cronjob (crontab -e) desde el usuario root para el script anterior (de backups de los homes) de manera que la copia de seguridad de los homes se realice todos los d\u00edas a una hora y minuto concreto (el que quieras).</li> <li>Revisa los logs de /var/log/syslog filtrando por \"cron\". Ah\u00ed podr\u00e1s ver informaci\u00f3n sobre la ejecuci\u00f3n de las tareas definidas en el crontab.</li> <li>Una vez verifiques que funciona, elimina la l\u00ednea del cron (ya podemos generar problemas de espacio en la vm).</li> <li>Ya disponemos de copias de seguridad automatizadas que se pasan de un servidor a otro, el problema es que no tenemos logs de lo que ocurre. Crea una carpeta backup-log en el directorio de logs de tu distribuci\u00f3n GNU/Linux. Modifica el script de backups para que escriba una l\u00ednea en el fichero de log indicando el d\u00eda y hora exacta y si la copia ha dado \"error\" o \"success\".</li> <li>Opcional: configura el logrotate para que se borre la informaci\u00f3n de ese fichero de logs cada semana o cada vez que supere los 50MB.</li> <li>Intenta ejecutar un comando con \"sudo\" con el usuario test1. \u00bfEs posible? \u00bfpor qu\u00e9?</li> <li>Revisa el fichero de grupos de Linux y mira si hay alg\u00fan usuario sudo. A\u00f1ade el usuario \"test1\" al grupo \"sudo\" (busca en internet el comando usermod). Comprueba de nuevo si puedes ejecutar comandos como sudo con test1.</li> <li>Crea un nuevo usuario benito (con useradd) y a\u00f1\u00e1delo al grupo sudo en el mismo comando.</li> <li>Cambia la contrase\u00f1a del usuario y logeate (prueba si ejecuta comandos como sudo).</li> <li>Aunque a\u00f1adir un usuario al grupo de sudo es una soluci\u00f3n, existe un fichero (/etc/sudoers) que nos da mucha m\u00e1s potencia, permiti\u00e9ndonos ejecutar solo ciertos comandos seg\u00fan usuarios o grupos. Consulta esta URL (aunque no haremos nada con esto de momento).</li> <li>Una vez le\u00eddo el art\u00edculo, elimina a test1 del grupo \"sudo\".</li> <li>Crea tres grupos nuevos: un grupo de nombre alumnado, otro profesorado y otro ies.</li> <li>A\u00f1ade al usuario test1 a profesorado y a test2 y test3 a alumnado (puedes probarlo ahora con groupadd). A\u00f1ade los tres usuarios de test al grupo ies. Usa cat y grep para filtrar estos usuarios y grupos en los ficheros del sistema donde se almacena esta informaci\u00f3n (observa los cambios).</li> <li>Cambia el nombre del grupo ies a pinguela (puedes usar groupmod, revisa el manual, u otro comando que encuentres). Filtra ahora el fichero de grupos por ies (no deber\u00eda salir nada) y por pinguela (que es el nuevo nombre) y observa como cambi\u00f3.</li> <li>A\u00f1ade a tu usuario principal al grupo pinguela (como grupo secundario, ya que el grupo principal tendr\u00e1 el mismo nombre que tu usuario).</li> </ol>"},{"location":"gnu-linux/ejercicios-variados/#ejercicio-de-documentacion-de-scripts","title":"Ejercicio de documentaci\u00f3n de scripts","text":"<p>Crea una carpeta bin en tu home y crea un fichero de nombre nuevo-script que pida los siguientes datos y, si se pulsa enter sin introducir nada use lo que hay entre corchetes.</p> <ul> <li>Nombre del script (obligatorio):</li> <li>Int\u00e9rprete de comandos [/bin/bash]:</li> <li>Autor [el nombre y apellidos de tu usuario]:</li> <li>Fecha [fecha-de-hoy]:</li> <li>Descripci\u00f3n (opcional):</li> </ul> <p>Los datos introducidos deber\u00e1n concatenarse en un comentario al inicio del fichero de la siguiente manera:</p> <pre><code>#!/bin/bash\n# Author: Nombre y apellidos\n# Date: 27/02/2024\n# Description: este script comprueba.... lo que sea\n# Modificado: 27/02/2024\nsalto de l\u00ednea\n</code></pre> <p>Una vez creado el fichero y concatenadas las l\u00edneas, el fichero debe abrirse autom\u00e1ticamente con el comando vim: vim .</p>"},{"location":"gnu-linux/ejercicios-variados/#anadiendo-mejoras","title":"A\u00f1adiendo mejoras","text":"<ul> <li>A\u00f1ade la carpeta bin de tu home al PATH de forma permanente, de manera que puedas ejecutar el script solo usando el comando \"nuevo-script\".</li> <li>Cambia el script a algo con menos texto (p. ej: en lugar de \"nuevo-script\" usar \"nscr\") y prueba si sigue funcionando (quiz\u00e1 tengas que cerrar sesi\u00f3n y abrir o recargar el .bashrc).</li> <li>Modifica el script para que solo pida el script de forma interactiva si no se pasan par\u00e1metros. En caso de pasar un par\u00e1metro este ser\u00e1 ya el nombre del script y no se preguntar\u00e1. Adem\u00e1s, si se pasa m\u00e1s de un par\u00e1metro se mostrar\u00e1 un mensaje de error y se devolver\u00e1 un c\u00f3digo 22.</li> </ul>"},{"location":"gnu-linux/examen/","title":"Examen","text":""},{"location":"gnu-linux/examen/#vagrantfile","title":"Vagrantfile","text":"<p>Descargar recursos (Vagrantfile + carpetas)</p>"},{"location":"gnu-linux/examen/#enunciado-examen","title":"Enunciado examen","text":""},{"location":"gnu-linux/files-2/","title":"Gesti\u00f3n de ficheros (II)","text":""},{"location":"gnu-linux/files-2/#comandos-avanzados-sobre-ficheros","title":"Comandos avanzados sobre ficheros","text":"<p>En este punto veremos como operar sobre los contenidos de los ficheros. Algunos de los comandos m\u00e1s interesantes son: - wc - nl - cut - grep - sed - awk</p>"},{"location":"gnu-linux/files-2/#comando-grep-filtrar","title":"Comando grep (filtrar)","text":""},{"location":"gnu-linux/files-2/#tuberias-pipes","title":"Tuber\u00edas (pipes |)","text":""},{"location":"gnu-linux/files-2/#comando-cut-cortar","title":"Comando cut (cortar)","text":""},{"location":"gnu-linux/files-2/#expresiones-regulares-regex","title":"Expresiones regulares (regex)","text":""},{"location":"gnu-linux/files-2/#aplicacion-de-expresiones-regulares-al-comando-grep","title":"Aplicaci\u00f3n de expresiones regulares al comando grep","text":""},{"location":"gnu-linux/files-2/#comando-sed","title":"Comando sed","text":""},{"location":"gnu-linux/files-2/#herramineta-awk","title":"Herramineta AWK","text":""},{"location":"gnu-linux/files/","title":"Gesti\u00f3n de ficheros","text":""},{"location":"gnu-linux/files/#manejo-de-ficheros-y-carpetas","title":"Manejo de ficheros y carpetas","text":""},{"location":"gnu-linux/files/#creacion-de-carpetas","title":"Creaci\u00f3n de carpetas","text":"<pre><code># Creamos una carpeta nueva en el directorio donde nos encontramos\nmkdir miNuevaCarpeta\n\n# Creaci\u00f3n de carpeta con nombre \"nueva\" con ruta absoluta\nmkdir /home/mnceleiro/Documentos/nueva\n\n# Creaci\u00f3n de m\u00faltiples carpetas consecutivas con un solo comando (a\u00f1adimos -p)\n# Este comando crear\u00eda todas las carpetas de la ruta que no existan\nmkdir -p Documentos/nueva/nueva2/nueva3/nueva4/nueva5/datos_empleados\n</code></pre>"},{"location":"gnu-linux/files/#eliminacion-de-carpetas","title":"Eliminaci\u00f3n de carpetas","text":"<pre><code># Elimina una carpeta vac\u00eda\nrmdir nombreCarpeta\n</code></pre>"},{"location":"gnu-linux/files/#ejercicio","title":"Ejercicio","text":"<p>Intenta ejecutar el comando con una carpeta que tenga algo dentro. \u00bfFunciona?</p> <p>Nota</p> <p>M\u00e1s adelante veremos como eliminar carpetas con todo lo de su interior con un solo comando.</p>"},{"location":"gnu-linux/files/#crear-un-fichero-de-texto","title":"Crear un fichero de texto","text":"<p>Existen muchas maneras. Vamos a ver las siguientes:</p> <ul> <li>Con un editor de texto (Vim, Nano).</li> <li>Con el comando touch.</li> <li>Con el comando echo usando \"redirecciones\".</li> </ul>"},{"location":"gnu-linux/files/#crear-fichero-con-un-editor-de-texto","title":"Crear fichero con un editor de texto","text":"<p>Los dos editores de texto m\u00e1s conocidos en GNU/Linux son: - Vim - Nano</p> <p>Teniendo el segundo una curva de aprendizaje m\u00e1s sencilla que el primero, pero siendo el primero probablemente m\u00e1s potente en general.</p>"},{"location":"gnu-linux/files/#ejercicios","title":"Ejercicios","text":"<ul> <li>Crea en tu home el fichero miPrimerFichero.txt con el editor de texto Nano y usando una ruta absoluta desde tu home.</li> <li>Crea en tu home un fichero miSegundoFichero.txt con el editor de texto Nano, situ\u00e1ndote antes en / y usando una ruta relativa.</li> <li>Crea en tu home un fichero miTercerFichero.txt con el editor de texto Vim (apt install -y vim) situ\u00e1ndote en /home y usando una ruta relativa.</li> </ul>"},{"location":"gnu-linux/files/#crear-fichero-con-el-comando-touch","title":"Crear fichero con el comando touch","text":"<p>El comando touch sirve para cambiar la informaci\u00f3n relacionada con los timestamps de un fichero (p. ej: el \u00faltimo acceso, la \u00faltima modificaci\u00f3n o la creaci\u00f3n del fichero). Adem\u00e1s de esto se usa mucho para crearlos (ya que si uso el comando en un fichero que no exista, este se crea).</p> <pre><code># Creando un fichero con touch\ntouch miPrimerFicheroConTouch.txt\nls -l miPrimerFicheroConTouch.txt\n\n# Usando touch para cambiar los tiempos del fichero\ntouch -t 201812201000 miPrimerFicheroConTouch.txt\n\n# Pero... \u00bfqu\u00e9 timestamp he cambiado? Comando stat nos ayuda\nstat miPrimerFicheroConTouch.txt\n</code></pre>"},{"location":"gnu-linux/files/#crear-fichero-con-el-comando-echo","title":"Crear fichero con el comando echo","text":"<p>El comando echo devuelve lo que le escribas a la pantalla. Es similar al comando de Java <code>System.out.println(\"Texto\")</code>. Por defecto, ese texto se muestra en pantalla, pero podemos redirigir el texto de la salida est\u00e1ndar (pantalla) a otro sitio que nosotros queramos. En este caso lo redirigiremos a un fichero.</p> <p>Prueba los siguientes comandos: </p><pre><code># Mostramos el texto \"Hola mundo\" por la salida estandar (pantalla)\necho \"Hola mundo\"\n\n# Mostramos el texto \"Hola mundo\" pero... redirigimos SU SALIDA EST\u00c1NDAR a un fichero,\n# por lo que se almacenar\u00e1 en \u00e9l y no se mostrar\u00e1 por pantalla.\n# Esto es muy pr\u00e1ctico para crear ficheros\necho \"Hola mundo\" &gt; miNuevoFichero.txt\n</code></pre> <p>TODO: Explicar redirecciones \"&gt;\" \"&lt;\" \"&gt;&gt;\" o enlazar alg\u00fan art\u00edculo externo.</p>"},{"location":"gnu-linux/files/#ejercicios_1","title":"Ejercicios","text":"<ul> <li>Prueba a ejecutar varias veces el comando anterior que redirige el \"Hola mundo\" a un fichero. \u00bfCambia algo de ejecutarlo 1 a varias veces?</li> <li>Prueba ahora el mismo comando, pero en lugar de \"&gt;\" utiliza \"&gt;&gt;\". \u00bfQu\u00e9 ocurre? \u00bfPara qu\u00e9 sirve usar dos s\u00edmbolos en lugar de 1?</li> </ul> <p>M\u00e1s informaci\u00f3n en este enlace.</p>"},{"location":"gnu-linux/files/#ver-contenido-de-los-ficheros","title":"Ver contenido de los ficheros","text":""},{"location":"gnu-linux/files/#ver-todo-el-contenido-con-cat","title":"Ver todo el contenido con cat","text":"<p>Muestra el contenido de un fichero. La sintaxis es:</p> <pre><code># Sintaxis b\u00e1sica\ncat &lt;fichero&gt;\n\n# Mostramos la informacion de los usuarios del sistema\ncat /etc/passwd\n\n# Ver contenido de fichero de grupos\ncat /etc/group\n\n# Ver contenido de contrasenhas (encriptadas) con los numeros de linea marcados (-n o --number)\ncat -n /etc/shadow\n\n# Ver contenido de un fichero mostrando un $ en los cambios de linea  (--show-ends o -E)\ncat --show-ends fichero.txt\n\n# Ver contenido de fichero incluyendo caracteres no imprimibles (--show-nonprinting o -v)\ncat -v fichero.txt\n</code></pre> <p>Nota</p> <p>Los ficheros de configuraci\u00f3n en GNU/Linux se encuentran en la carpeta /etc. Algunos interesantes son los que ver\u00e1s con los comandos anteriores.</p>"},{"location":"gnu-linux/files/#ver-contenidos-iniciales-de-un-fichero-con-head","title":"Ver contenidos iniciales de un fichero con head)","text":"<pre><code># Ver informacion del procesador (10 primeras l\u00edneas)\nhead /proc/cpuinfo\n\n# Listamos las 23 primeras lineas del fichero que tiene informacion de la memoria ([-n numero_lineas])\nhead -n 23 /proc/meminfo\n\n# Mostramos la primera l\u00ednea del fichero que tiene informacion de tiempo de encendido\nhead -n 1 /proc/uptime\n</code></pre> <p>Nota</p> <p>En la carpeta /proc podemos encontrar informaci\u00f3n \u00fatil relacionada con el hardware y los procesos del sistema.</p>"},{"location":"gnu-linux/files/#ver-contenidos-finales-de-un-fichero-con-tail","title":"Ver contenidos finales de un fichero con tail","text":"<pre><code># Ver \u00faltimas l\u00edneas de un fichero (en este caso el .bash_history situado en tu home)\ntail /home/&lt;usuario&gt;/.bashrc\n\n# Solo las 7 \u00faltimas l\u00edneas\ntail -n 7 /home/&lt;usuario&gt;/.bashrc\n\n# Mira las \u00faltimas 5 l\u00edneas del fichero syslog y lo recarga cada segundo (nos sirve por si cambia y queremos monitorizarlo)\ntail -f -n 5 /var/log/syslog\n\n# Ver las 12 ultimas lineas del fichero\n## No podemos mostrar los numeros de linea con tail/head, asi que pasamos la salida del comando cat a la entrada de tail\ncat -n .bashrc | tail -n 12\n</code></pre>"},{"location":"gnu-linux/files/#ver-contenido-de-fichero-con-more","title":"Ver contenido de fichero con more","text":"<p>Muestra informaci\u00f3n de fichero de forma interactiva, p\u00e1gina a p\u00e1gina. </p><pre><code># Ver contenido fichero de logs generico: /var/log/messages o /var/log/syslog (sistemas debian y derivados)\nmore /var/log/syslog\n\n# Se puede pasar la pagina con la barra espaciadora y salir con letra \"q\". Para mostrar esa ayuda con more -d:\nmore -d /var/log/syslog\n\n# Eliminamos lineas en blanco dejando solo una (si hay 3 saltos de linea lo deja en 1)\n\nmore -s texto.txt\n</code></pre>"},{"location":"gnu-linux/files/#ejercicio_1","title":"Ejercicio","text":"<pre><code>Prueba las opciones: -u, -p y +n\u00famero (\u00bfpara qu\u00e9 sirven?)\n</code></pre>"},{"location":"gnu-linux/files/#ver-contenido-de-fichero-con-less","title":"Ver contenido de fichero con less","text":"<p>Con el comando more la informaci\u00f3n de ficheros queda en el terminal y, en ficheros largos puede resultar bastante molesto. Con less vemos el fichero y el texto no se muestra en terminal.</p> <pre><code># Mostramos el fichero de autenticaci\u00f3n/autorizaci\u00f3n de GNU/Linux usando less\n# (auth.log en Debian y derivados, /var/log/secure en RedHat y CentOS)\nless /var/log/auth.log\n</code></pre> <p>Dentro del comando less puedes: - Buscar cadenas (igual que hacemos en el manual, con el caracter \"/\" y un texto). - Avanzar l\u00ednea a l\u00ednea (flechas abajo y arriba). - Avanzar p\u00e1gina a p\u00e1gina (barra espaciadora).</p>"},{"location":"gnu-linux/files/#ejercicio_2","title":"Ejercicio","text":"<ul> <li>Crea un fichero de 25 p\u00e1rrafos (un lorem ipsum) y busca alguna palabra con less.</li> <li>Avanza en el fichero l\u00ednea a l\u00ednea abajo y arriba.</li> <li>Avanza p\u00e1gina a p\u00e1gina (barra espaciadora).</li> <li>Busca en los logs de Linux los eventos de autenticaci\u00f3n que ocurrieron el d\u00eda de hoy.</li> <li>Consulta el fichero con \"less\" y ve directamente al final (shift + g).</li> <li>Usa el comando \"su \" para logearte en un terminal (esto abrir\u00e1 una nueva sesi\u00f3n de terminal con tu usuario). Escribe MAL la contrase\u00f1a. Despu\u00e9s, busca ese evento en los logs del sistema (auth.log y faillog).</li> </ul>"},{"location":"gnu-linux/files/#otros-ficheros-de-log-interesantes","title":"Otros ficheros de log interesantes","text":"<p>Algunos interesantes diferentes a los ya vistos son los siguientes: - /var/log/mysqld.log (RedHat, CentOS y Fedora) o /var/log/mysql.log (Debian): mensajes relacionados con MySQL. - /var/log/httpd/: Logs relacionados con Apache. Existen dos ficheros: access.log y error.log.</p>"},{"location":"gnu-linux/files/#ver-diferencias-entre-dos-ficheros-con-diff","title":"Ver diferencias entre dos ficheros con diff","text":"<p>Sintaxis: </p><pre><code>  diff &lt;fichero1&gt; &lt;fichero2&gt;\n</code></pre>"},{"location":"gnu-linux/files/#copiado-movimiento-y-renombrado-de-ficheros","title":"Copiado, movimiento y renombrado de ficheros","text":"<p>Para copiar un fichero a otro lugar se usa el comando cp (copy):</p> <pre><code>  # Copiamos el fichero miFichero.txt a la carpeta Documentos (con ruta relativa):\n  cp miFichero.txt Documentos\n\n  # Creamos varios ficheros vac\u00edos con touch (mezclamos comillas y escapados para practicar)\n  ## ESTE COMANDO TIENE UN ERROR (si haces un ls lo ver\u00e1s, corr\u00edgelo!)\n  touch \"fich 1.txt\" \"fich 2.txt\" fich \\3.txt hola.dat\n\n  # Copiamos los ficheros fich 1.txt, fich 2.txt y hola.dat a la carpeta Documentos\n  cp \"fich 1.txt\" \"fich 2.txt\" \"fich 3.txt\" hola.dat Documentos\n</code></pre> <p>Podemos pasar tantos ficheros de origen como queramos. El \u00faltimo par\u00e1metro siempre es el DESTINO.</p>"},{"location":"gnu-linux/files/#copiar-y-renombrar-al-mismo-tiempo","title":"Copiar y renombrar al mismo tiempo","text":""},{"location":"gnu-linux/files/#copia-y-renombrado","title":"Copia y renombrado","text":"<p>En el siguiente ejemplo vamos a mezclar rutas absolutas y relativas para practicar. Creamos un fichero y lo copiamos con otro nombre. </p><pre><code>  # Creamos un fichero saludo.txt con el texto \"Hola\"\n  echo \"Hola\" &gt; /home/&lt;usuario&gt;/saludo.txt\n\n  # Lo copiamos a la carpeta Documentos cambi\u00e1ndole el nombre a saludar.txt (primera con ruta absoluta, segunda relativa)\n  cp /home/&lt;usuario&gt;/saludo.txt ./Documentos/saludar.txt\n\n  # Hacemos otra copia en la misma ruta (usamos ruta relativa)\n  cp ./saludar.txt \"nuevo saludo.txt\"\n</code></pre> <p>Despu\u00e9s de esto tendremos: - Fichero saludo.txt en nuestro home (creado con echo). - Fichero saludar.txt en $HOME/Documentos (creado con el primer cp). - Fichero nuevo saludo.txt en nuestro home (creado con el segundo cp).</p> <p>Nota</p> <p>Recuerda que el caracter \".\" representa el directorio actual y el \"..\" el anterior. Por tanto el \"./\" de estos ejemplos podr\u00eda omitirse y funcionar\u00eda igualmente, pero tenemos que entenderlo porque es necesario usarlo en ocasiones m\u00e1s adelante.</p>"},{"location":"gnu-linux/files/#movimiento-y-renombrado","title":"Movimiento y renombrado","text":"<p>Para mover ficheros se usa el comando mv (move o mover). </p><pre><code>  # Movemos el fichero fich 1.txt a una nueva carpeta en /home/&lt;usuario&gt;/Documentos/misArchivos/textos\n  ## 1. Nos situamos en nuestro home (podemos usar cd /home/&lt;usuario&gt;, cd ~ o cd $HOME)\n  cd ~\n\n  ## 2. Creamos la jerarqu\u00eda de carpetas necesaria, uso ruta absoluta (si usamos -p podemos hacerlo con un solo comando)\n  mkdir -p $HOME/Documentos/misArchivos/textos\n\n  ## 3. TODO: instala el programa tree usando la herramienta APT y \u00fasalo pas\u00e1ndole la carpeta de \"Documentos\".\n  ## El comando tree nos permitir\u00e1 ver la estructura en forma de \u00e1rbol.\n  ...\n\n  ## 4. Muevo (usando ahora ruta relativa) el fichero fich 1.txt a la nueva carpeta\n  mv ~/fich \\1.txt Documentos\\misArchivos\\textos\n\n  ## 5. TODO: mueve ahora fich 2.txt a la misma carpeta pero llam\u00e1ndole: fich 2 copia.txt.\n  ## Usa solo rutas relativas y REFERENCIANDO LA CARPETA ACTUAL\n  ...\n</code></pre>"},{"location":"gnu-linux/files/#ejercicio_3","title":"Ejercicio","text":"<ul> <li>Crea una carpeta nueva en tu home llamada \"nueva\" e intenta mover \"misArchivos\" ah\u00ed con los comandos que hemos visto, \u00bffunciona?</li> <li>Intenta copiarla con cp, \u00bffunciona?</li> <li>Intenta eliminarla con rm y rmdir, \u00bffunciona?</li> </ul>"},{"location":"gnu-linux/files/#mover-copiar-y-eliminar-carpetas-enteras","title":"Mover, copiar y eliminar carpetas enteras","text":"<p>Pues no funciona. Si queremos copiar, eliminar o mover carpetas con contenido tenemos que indicarle que queremos que lo haga de forma recursiva.</p>"},{"location":"gnu-linux/files/#ejercicio_4","title":"Ejercicio","text":"<ul> <li>Busca en el manual como hacer de forma recursiva un copiado de la carpeta misArchivos a una carpeta \"copias-seguridad\" en tu home. Int\u00e9ntalo.</li> <li>Vamos a mover la carpeta original y quedarnos con la copia. Mueve la carpeta situada en $HOME/Documentos/misArchivos a tu home.</li> <li>Finalmente, vamos a borrarla. Borra la carpeta misArchivos de tu home (nos quedamos solo con la copia de seguridad).</li> </ul> <p>TODO: M\u00e1s comandos:</p> <ul> <li>wc</li> <li>nl</li> <li>tac</li> <li>hashes (definici\u00f3n y creaci\u00f3n)</li> <li>Navegaci\u00f3n historial de comandos</li> <li> </li> </ul>"},{"location":"gnu-linux/files/#aliases-y-variables-de-entorno","title":"Aliases y variables de entorno","text":""},{"location":"gnu-linux/files/#referencias","title":"Referencias","text":"<ul> <li>Cat Command in Linux/Unix with Examples. Obtenido de: javatpoint el 15/01/2024.</li> <li>12 Critical Linux Log Files You Must be Monitoring. Obtenido de Eurovps blog el 15/01/2024.</li> </ul>"},{"location":"gnu-linux/linux-desktop/","title":"Distribuciones y entornos de escritorio","text":""},{"location":"gnu-linux/linux-desktop/#arquitectura-distribuciones-y-entornos-de-escritorio","title":"Arquitectura, distribuciones y entornos de escritorio","text":"<p>GNU/Linux es la base de muchos sistemas operativos de c\u00f3digo abierto. GNU/Linux no es un sistema operativo completo, sino una serie de programas y herramientas con un n\u00facleo (kernel) que comparten muchos sistemas operativos (OpenSuse, Ubuntu, Linux Mint, Debian, etc.). Los nombres m\u00e1s importantes detr\u00e1s de GNU/Linux son Richard Stallman y Linus Torvalds.</p>"},{"location":"gnu-linux/linux-desktop/#conceptos-basicos","title":"Conceptos b\u00e1sicos","text":""},{"location":"gnu-linux/linux-desktop/#interfaces-de-usuario","title":"Interfaces de usuario","text":"<p>Existen varios t\u00e9rminos para describir interfaces gr\u00e1ficas:</p> <ul> <li>UI: User Interface (en espa\u00f1ol IU: Interfaz de Usuario). Lo que ves en tu ordenador ahora mismo se llama GUI (Interfaz gr\u00e1fica de usuario o Graphical User Interface). Los terminales de comandos.</li> <li>GUI: Graphical User Interface o interfaz gr\u00e1fica de usuario.</li> </ul> <p>La diferencia es que la G (graphical) indica que es una interfaz en modo gr\u00e1fico y no en modo texto. En sistemas basados en Linux existen diferentes interfaces gr\u00e1ficas: GNOME, KDE, XFCE, LXDE, Cinnamon, MATE...</p>"},{"location":"gnu-linux/linux-desktop/#arquitectura-del-sistema","title":"Arquitectura del sistema","text":"Imagen obtenida de: Wikipedia"},{"location":"gnu-linux/linux-desktop/#kernel-nucleo","title":"Kernel (n\u00facleo)","text":"<p>Podemos imaginarnos el kernel como un programa en la parte m\u00e1s profunda del sistema operativo y que se ocupa de la interactuaci\u00f3n con el hardware (procesador, disco duro, ram...).</p> <p>Cuando desde un terminal ejecutamos un comando, el kernel lo recibe y se ocupa de interactuar con el hardware.</p> <p>Aunque muchas veces trata a las distribuciones (Ubuntu, Fedora, Linux Mint, ArchLinux...) como \"Linux\" a secas, realmente Linux es el kernel o n\u00facleo y todos esos nombres son distribuciones diferentes que usan ese kernel.</p> <p>Cuando decimos que vamos a \"instalar un Linux\", nos solemos referir a que vamos a instalar una distribuci\u00f3n que usa el n\u00facleo creado por Linus Torvalds en 1991 (y al que denomin\u00f3 como Linux). El sistema operativo de muchos smartphones (Android) usa una versi\u00f3n modificada de Linux.</p>"},{"location":"gnu-linux/linux-desktop/#shell","title":"Shell","text":"<p>El Shell estar\u00eda, en la imagen, entre las aplicaciones y el Kernel. Un Shell hace de interfaz entre los usuarios y el sistema operativo.</p> <p>La interfaz gr\u00e1fica de Windows y las distintas disponibles en GNU/Linux son tambi\u00e9n Shells, al igual que muchas por comandos como: bash, sh, zsh...</p>"},{"location":"gnu-linux/linux-desktop/#tipos-de-shells-en-linux","title":"Tipos de shells en Linux","text":"<ul> <li>Gnome, KDE (y otras GUIs): los comandos realmente se ejecutan, pero se hace mediante clicks en diferentes sitios, arrastrando y soltando, etc. A\u00fan as\u00ed, estos son tambi\u00e9n shells.</li> <li>Shells de l\u00ednea de comandos:<ul> <li>SH (Bourne Shell): es una de las shells m\u00e1s antiguas de Linux.</li> <li>BASH (Born Again Shell): tiene muchas mejoras sobre la anterior y es la que viene por defecto en GNU/Linux.</li> <li>CSH y TCSH: no suelen utilizarse salvo que tengas mucho control sobre lenguajes de programaci\u00f3n C y C++.</li> <li>KSH (Korn Shell): muy utilizada en Solaris.</li> <li>ZSH y Fish: de las m\u00e1s interesantes hoy en d\u00eda. Si piensas usar Linux de forma habitual en escritorio mi recomendaci\u00f3n es que intentes instalar una de estas dos para mejorar la experiencia en terminal.</li> </ul> </li> </ul> <p>Si consultas el fichero /etc/shells puedes ver la lista de shells que tienes instaladas en el sistema.</p> <p> </p>"},{"location":"gnu-linux/linux-desktop/#aplicaciones","title":"Aplicaciones","text":"<p>Una aplicaci\u00f3n puede ejecutarse por interfaz gr\u00e1fica, pero tambi\u00e9n por terminal de comandos.</p> <p>Muchas aplicaciones gr\u00e1ficas lo que hacen realmente (al pulsar, por ejemplo, un bot\u00f3n) es ejecutar comandos en un shell concreto. Este shell, a su vez, interact\u00faa con el Kernel que a su vez lo hace con el hardware. As\u00ed es como se produce toda la comunicaci\u00f3n entre las capas.</p> <p>Si ejecutamos, por ejemplo, una aplicaci\u00f3n (imaginemos Steam), esa aplicaci\u00f3n se ejecuta en un Shell, el cu\u00e1l a su vez se comunica con el Kernel y este finalmente con el hardware. Hay una comunicaci\u00f3n completa desde el usuario hasta el hardware.</p>"},{"location":"gnu-linux/linux-desktop/#sistema-operativo","title":"Sistema operativo","text":"<p>La combinaci\u00f3n del Kernel, el Shell y los programas a m\u00e1s bajo nivel es lo que forma el sistema operativo.</p>"},{"location":"gnu-linux/linux-desktop/#distribuciones-gnulinux-y-entornos-de-escritorio","title":"Distribuciones GNU/Linux y entornos de escritorio","text":"<p>Existen m\u00faltiples distribuciones basadas en Linux con diferentes caracter\u00edsticas (Debian, OpenSuse, Ubuntu, Linux Mint, Zorin OS, Fedora, Archilinux, etc.). Adem\u00e1s, cada una de estas distribuciones se puede usar con diferentes entornos de escritorio (puedes imaginarte unos m\u00e1s parecidos al estilo de Windows, otros m\u00e1s parecidos a MacOS y otros diferentes a ambos). </p> <p>Las distribuciones GNU/Linux m\u00e1s habituales y m\u00e1s \u201cbeginner friendly\u201d son las basadas en Ubuntu. Las versiones m\u00e1s habituales de Ubuntu son las siguientes:</p> <ul> <li>Ubuntu con entorno de escritorio \u201cGnome\u201d (denominado como Ubuntu) .</li> <li>Ubuntu con entorno de escritorio \u201cKDE\u201d (denominado como Kubuntu).</li> </ul> <p>Para ordenadores antiguos o con muy pocos recursos:</p> <ul> <li>Ubuntu con entorno de escritorio \u201cXFCE\u201d (Xubuntu).</li> <li>Ubuntu con entorno de escritorio \u201cLXDE\u201d (Lubuntu).</li> </ul> <p>A continuaci\u00f3n se muestran im\u00e1genes de distintos sistemas operativos y entornos de escritorio:</p> Ubuntu con GNOME (Ubuntu) Ubuntu con KDE (Kubuntu) Ubuntu con LXDE (Lubuntu) Linux Mint (distribuci\u00f3n basada en Ubuntu) con entorno de escritorio Cinnamon Linux Mint con entorno de escritorio denominado MATE Zorin OS (distribuci\u00f3n basada en Ubuntu y Windows friendly). Tiene un entorno de escritorio GNOME adaptado por ellos mismos para hacerlo m\u00e1s familiar a Windows. <p>Como veis, es posible tener el mismo sistema operativo con diferente entorno de escritorio. GNOME, KDE, XFCE, Cinnamon, MATE o LXDE son entornos de escritorio diferentes.</p> <p>Iniciarse en GNU/Linux: si quieres iniciarte en GNU/Linux en uso personal usar Ubuntu o una distribuci\u00f3n basada en Ubuntu es la mejor opci\u00f3n. Mis recomendaciones para empezar: Ubuntu (el normal con Gnome), Linux Mint (Cinnamon) o Zorin OS.</p> <p>Algunos sistemas operativos o entornos de escritorio en GNU/Linux consumen muy pocos y est\u00e1n preparados para dar una segunda vida a ordenadores antiguos. Si quieres dar una segunda vida a un ordenador antiguo sigue este enlace. </p>"},{"location":"gnu-linux/linux-desktop/#gnulinux-en-servidores","title":"GNU/Linux en servidores","text":"<p>Algunos usuarios habituales de Linux son los siguientes:</p> <ul> <li>Gobierno de los Estados Unidos y algunas de sus agencias (nacional, estatal, federal e internacional).</li> <li>NASA: no solo lo utilizan para la mayor parte de su computaci\u00f3n, sino que adem\u00e1s contribuyen al c\u00f3digo.</li> <li>Hospitales</li> <li>Red de trenes de alta velocidad de Jap\u00f3n (bullet trains).</li> <li>Control de tr\u00e1fico.</li> <li>Institutos financieros.</li> <li>Liders de comercio online (Amazon, Paypal, Ebay o Walmart.</li> <li>Muchas otras compa\u00f1\u00edas (Google, IBM, Facebook, Mcdonals...).</li> </ul> <p>Dentro de las versiones de GNU/Linux en entornos empresariales destacan las siguientes:</p> <ul> <li>Redhat.</li> <li>CentOS: administrado tambi\u00e9n por Redhat y totalmente gratuito. No recibe soporte t\u00e9cnico de Redhat.</li> <li>Fedora Server: gratuito.</li> <li>Suse Linux Enterprise Server: pertenece a la compa\u00f1\u00eda Novell. VMWare utiliza Suse como entorno.</li> <li>Debian.</li> <li>Ubuntu Server.</li> </ul>"},{"location":"gnu-linux/networks/","title":"Redes en Linux","text":"<p>TODO</p>"},{"location":"gnu-linux/scripting-linux/","title":"Programaci\u00f3n de scripts","text":""},{"location":"gnu-linux/scripting-linux/#shell-scripting","title":"Shell scripting","text":"<p>Existen m\u00faltiples shells (podemos ver cu\u00e1l estamos usando mostrando con echo la variable de entorno $SHELL).</p>"},{"location":"gnu-linux/scripting-linux/#mi-primer-script","title":"Mi primer script","text":""},{"location":"gnu-linux/scripting-linux/#contenido-del-script","title":"Contenido del script","text":"<p>Para empezar, nuestro primer script mostrar\u00e1 en pantalla solamente la l\u00ednea:</p> <p><code>Hola mundo</code></p> <p>Flujo de ejecuci\u00f3n de un programa que escriba por pantalla \"Hola mundo\":</p> <pre><code>\n    flowchart LR\n    A[INICIO] --&gt; B[\"Escribir 'Hola mundo'\"] --&gt; C[FIN]\n</code></pre> <p>Para crear traducir este diagrama de flujo a un programa real editamos el script con nuestro editor preferido (p. ej: vim o nano) y a\u00f1adimos lo siguiente:</p> <pre><code>#!/bin/bash\n\necho \"Hola mundo.\"\n</code></pre> <p>La orden de escribir a pantalla se traduce en shell scripting con la orden echo.</p>"},{"location":"gnu-linux/scripting-linux/#permisos-de-ejecucion","title":"Permisos de ejecuci\u00f3n","text":"<p>Para crear un script en BASH creamos un fichero con el nombre que queramos y le damos permisos de ejecuci\u00f3n (u+x):</p> <p><code>echo \"\" &gt; helloworld.sh</code></p> <p>Esto crea un fichero helloworld.sh al que deber\u00edamos darle tambi\u00e9n permisos de ejecuci\u00f3n. Para dar permisos usamos el comando chmod y podemos hacerlo de dos maneras distintas:</p> <p><code>chmod u+x helloworld.sh</code></p> <p>o</p> <p><code>chmod 764 helloworld.sh</code></p> <p>Ejemplo de realizaci\u00f3n de la tarea de creaci\u00f3n de script y permisos de ejecuci\u00f3n para el usuario: </p>"},{"location":"gnu-linux/scripting-linux/#ejecucion","title":"Ejecuci\u00f3n","text":"<p>Para ejecutar el script podemos usar cualquiera de los siguientes comandos:</p> <p><code>./helloworld.sh</code></p> <p><code>bash helloworld.sh</code></p> <p>El resultado deber\u00eda ser el siguiente: </p>"},{"location":"gnu-linux/scripting-linux/#variables","title":"Variables","text":"<p>Una variable es un sitio en memoria para guardar informaci\u00f3n. Un ejemplo de creaci\u00f3n de una variable y asignaci\u00f3n de un n\u00famero a ella ser\u00eda el siguiente:</p> <p><code>EDAD=35</code></p> <p>Veamoslo con un script de ejemplo. Crearemos una variable llamada NOMBRE donde guardaremos el nombre de una persona. Luego el ordenador escribir\u00e1 por pantalla \"Tu nombre es (y aparecer\u00e1 el nombre guardado en la variable).\"</p> <pre><code>\n    flowchart LR\n    A[INICIO] --&gt; B[\"NOMBRE = 'Marcos'\"] --&gt; C[\"Escribir 'Tu nombre es NOMBRE'\"] --&gt; D[FIN]</code></pre> <p>Veamos ahora la traducci\u00f3n a c\u00f3digo:</p> variables.sh<pre><code># Ejercicio: crear una variable \"NOMBRE\" que almacene el nombre de una persona. Despu\u00e9s, mostrar por pantalla \"Tu nombre es ________.\"\n\n#!/bin/bash\n\nNOMBRE=\"Marcos\"\necho \"Tu nombre es: NOMBRE\"\n</code></pre> <p>Resultado de la ejecuci\u00f3n (no nos sale como queremos): </p> <p>\u00bfEs esto lo que esper\u00e1bamos? Efectivamente, el echo est\u00e1 funcionando como debe y el terminal nos muestra lo que le indicamos. Pero, \u00bfcomo podemos hacer que el echo nos interprete la variable NOMBRE e indique, por tanto, lo que hemos almacenado en la variable?</p> <p>Bien, para hacer que la palabra \"NOMBRE\" se interprete como una variable, solo tenemos que ponerle delante el caracter de DOLAR ($):</p> variables2.sh<pre><code># Ejercicio: crear una variable \"NOMBRE\" que almacene el nombre de una persona. Despu\u00e9s, mostrar por pantalla \"Tu nombre es ________.\"\n\n#!/bin/bash\n\nNOMBRE=\"Marcos\"\necho \"Tu nombre es: $NOMBRE\" # (1)!\n</code></pre> <ol> <li> El $ hace que en lugar de mostrar la palabra NOMBRE esta se interprete como una variable (y se muestre, por tanto, su contenido).</li> </ol> <p>Resultado de la ejecuci\u00f3n: </p> <p>Ahora s\u00ed funciona correctamente. El valor que le hemos asignado a la variable es \"Marcos\", pero si lo cambiamos con otro la frase tambi\u00e9n cambiar\u00e1.</p> <p>Probemos con otro ejercicio, en este vamos a hacer lo mismo que en el anterior pero a\u00f1adiremos un cambio en el nombre despu\u00e9s de 2 segundos.</p> <pre><code>\n    flowchart TB\n    A[INICIO] --&gt; B[\"NOMBRE = 'Marcos'\"] --&gt; C[\"Escribir 'Tu nombre es NOMBRE'\"] --&gt; D[\"Esperar 2 segundos\"] --&gt;E[\"NOMBRE = 'Mark'\"] --&gt; F[\"Escribir 'Ahora tu nombre es: NOMBRE'\"] --&gt; G[FIN]</code></pre> variables3.sh<pre><code># Ejercicio: crear una variable \"NOMBRE\" que almacene el nombre de una persona. Despu\u00e9s, mostrar por pantalla \"Tu nombre es ________.\" Despu\u00e9s, haz que el programa espere dos segundos y muestre: \"Te has cambiado el nombre y ahora es \"Mark\".\n\n#!/bin/bash\n\nNOMBRE=\"Marcos\"\necho \"Tu nombre es: $NOMBRE\"\n\nsleep 2\n\nNOMBRE=\"Mark\"\necho \"Ahora tu nombre es: $NOMBRE\"\n</code></pre> <p>Resultado:</p> <p></p> <p>Para saber m\u00e1s: adem\u00e1s de \"VARIABLE\" existe tambi\u00e9n la definici\u00f3n de \"CONSTANTE\". Una constante es lo mismo que una variable, solo que esta no puede volver a cambiarse a lo largo del programa.</p>"},{"location":"gnu-linux/scripting-linux/#parametros","title":"Par\u00e1metros","text":"<p>Ya vimos que para acceder al contenido de una variable usamos el caracter $ (p. ej: $nombre).</p> <p>Al ejecutar un script podemos pasarle a estos una serie de par\u00e1metros. Veamos ejemplos con comandos:</p> <ul> <li>ls -l: ls es el comando y -l es el primer par\u00e1metro.</li> <li>cat fichero.txt: en este caso, cat es el comando de nuevo y fichero.txt ser\u00eda el primer par\u00e1metro (por el cu\u00e1l el comando CAT sabe que fichero debe mostrar).</li> <li>tar -cvf personas.tar paula.txt diego.txt adrian.txt: en este caso, -cvf es el primer par\u00e1metro, personas.tar es el segundo par\u00e1metro, paula.txt el tercero, etc.</li> </ul> <p>Bien, nosotros podemos crear tambi\u00e9n scripts que reciban par\u00e1metros. Para mostrarlo vamos a utilizar el \u00faltimo script mostrado y hacer que ambos nombres (el primero y el segundo) sean elegidos por el usuario que lo ejecuta (y as\u00ed no tengan por que ser siempre los mismos):</p> parametros1<pre><code>#!/bin/bash\n\n# Asignamos el par\u00e1metro 1 a la variable NOMBRE.\nNOMBRE=$1\necho \"Tu nombre es: $NOMBRE.\"\n\nsleep 2\n\n# Ahora, asignamos el par\u00e1metro 2 a la variable NOMBRE.\nNOMBRE=$2\necho \"Han pasado dos segundos y ahora tu nombre es: $NOMBRE.\"\n</code></pre> <p>Resultado de dos ejecuciones de ejemplo: </p><pre><code>./parametros1 Ellen Elliot\nTu nombre es: Ellen.\nHan pasado tiempo y ahora mi nombre es: Elliot.\n\n./parametros1 \"Ellen Page\" \"Elliot Page\"\nTu nombre es: Ellen Page.\nHan pasado tiempo y ahora mi nombre es: Elliot Page.\n</code></pre> <p>Como vemos, existen ya variables predefinidas en la ejecuci\u00f3n de un script y a las que podemos acceder con el $. En este caso, $1, $2, $3 (en resumen $n\u00famero) son variables que representan a cada par\u00e1metro del script.</p> <p>Podr\u00edamos tambi\u00e9n haber dejado el script directamente as\u00ed:</p> parametros2<pre><code>#!/bin/bash\n\necho \"Tu nombre es: $1.\"\nsleep 2\necho \"Han pasado dos segundos y ahora tu nombre es: $2.\"\n</code></pre> <p>El resultado ser\u00eda exactamente el mismo:</p> <ul> <li>La ventaja del primer script es que queda m\u00e1s claro que es lo que se est\u00e1 mostrando (nombre es una variable muy indicativa de que es lo que se va a mostrar).</li> <li>La ventaja del segundo script, por su parte, es que queda sencillo y con pocas l\u00edneas.</li> </ul> <p>Adem\u00e1s de $n\u00famero, existen muchas otras maneras de acceder a informaci\u00f3n sobre los par\u00e1metros:</p> Variable Descripci\u00f3n $n\u00famero Representa el par\u00e1metro pasado en ese n\u00famero ($1, $2, $3...). $* y $@ Todos los par\u00e1metros que se hayan pasado al script. $# N\u00famero de par\u00e1metros (en el ejemplo anterior $# devolver\u00eda un 2, porque se han pasado dos nombres). $0 El nombre del script $? Muestra el resultado del \u00faltimo comando ejecutado (p. ej: si no ha dado error devolver\u00e1 un 0, que es \u00e9xito). parametros3<pre><code>#!/bin/bash\n\necho \"O n\u00famero de par\u00e1metros pasado ao script \u00e9: $#.\"\necho \"Nome do script: $0.\"\necho \"O par\u00e1metro 1 \u00e9: $1.\"\necho \"O par\u00e1metro 2 \u00e9: $2.\"\necho \"O par\u00e1metro 3 \u00e9: $3.\"\necho \"O par\u00e1metro 4 \u00e9: $4.\"\necho \"O par\u00e1metro 5 \u00e9: $5.\"\necho \"Os par\u00e1metros son os seguintes: $*.\"\necho \"Os par\u00e1metros son os seguintes: $@.\"\necho \"O resultado do comando anterior \u00e9: $?.\"\n</code></pre> <p>Resultado de la ejecuci\u00f3n (lo pruebo con 3 par\u00e1metros): </p><pre><code>./parametros3 hola boas tardes\nO n\u00famero de par\u00e1metros pasado ao script \u00e9: 3.\nNome do script: ./parametros3.\nO par\u00e1metro 1 \u00e9: hola.\nO par\u00e1metro 2 \u00e9: boas.\nO par\u00e1metro 3 \u00e9: tardes.\nO par\u00e1metro 4 \u00e9:.\nO par\u00e1metro 5 \u00e9:.\nOs par\u00e1metros son os seguintes: hola boas tardes.\nOs par\u00e1metros son os seguintes: hola boas tardes.\nO resultado do comando anterior \u00e9: 0.\n</code></pre> <p>Ejercicio propuesto:</p> parametros4-tunombre-tuapellido<pre><code>#!/bin/bash\n\n# 1. Escribir un saludo por pantalla: \"Hola mundo.\"\n\n# 2. Escribir un mensaje donde indiques el nombre del programa (siempre debe ser correcto, aunque el nombre del script cambie).\n\n# 3. Escribir un mensaje que indique el n\u00famero de par\u00e1metros pasados al script.\n\n# 4. Mostrar todos los par\u00e1metros pasados al script.\n\n# 5. Escribir un mensaje que ponga:\n#       El par\u00e1metro 1 es: _____, el 2 es: ______ y el 3 es _______.\n\n# 6. Prueba un mensaje con el par\u00e1metro $_.\n</code></pre>"},{"location":"gnu-linux/scripting-linux/#sentencias-condicionales-ifelse","title":"Sentencias condicionales (if/else)","text":"<p>En programaci\u00f3n existen las llamadas sentencias condicionales, basicamente puedes decir lo siguiente:</p> Pseudoc\u00f3digo de un condicional if/else<pre><code>Si condici\u00f3n\nhaz algo\nSino...\nhaz otra cosa\n</code></pre> <p>Traducido al ingl\u00e9s el si condicional se denomina if, y el sino else. Una sentencia if real quedar\u00eda tal que as\u00ed:</p> <p>Sintaxis de if: </p>Sintaxis real de un condicional if<pre><code>if [ condicion ]\nthen\n    # Hacemos cosas\nfi\n</code></pre> fi es if al rev\u00e9s, es la manera en que terminamos la condici\u00f3n. <p>Veamos ahora con un if/else (si se cumple la condici\u00f3n hacemos algo, en caso contrario hacemos otra cosa):</p> Sintaxis real de un condicional if / else<pre><code>if [ condicion ]\nthen\n    # Hacemos algo\nelse\n    # Hacemos otra cosa\nfi\n</code></pre>"},{"location":"gnu-linux/scripting-linux/#ejercicio-de-ejemplo-menores-y-mayores-de-edad","title":"Ejercicio de ejemplo: menores y mayores de edad","text":"<p>Script que, pasando como par\u00e1metro una edad, nos diga si es menor de edad o mayor de edad (mayor o igual que 18). Utiliza solo ifs (sin else).</p> <pre><code>\n    flowchart TB\n\n    A([INICIO]) --&gt; B{\"Si param1 &gt; 17\"} -- si --&gt; C[/\"Escribir 'Es mayor de edad'\"/] --&gt; D{\"Si param1 &lt; 18\"}\n    B -- sino --&gt; D -- si --&gt; E[/\"Escribir 'Es menor de edad'\"/] --&gt; F([\"Fin\"])\n    D -- sino --&gt; F</code></pre> condicionales1 - Intenta hacerlo!<pre><code>#!/bin/bash\n\n# Programa al que se le pasa como par\u00e1metro una edad:\n## - Si es mayor o igual a 18 a\u00f1os, escribe: \"Es mayor de edad.\"\n## - Si la edad es inferior a 18 a\u00f1os, escribe: \"Es menor de edad.\"\n\n# SINTAXIS PARA RESOLVER EL EJERCICIO:\n# Si    parametro1      es mayor que     17\n# if    $1              greater than     17\n# if    [ $1                -gt          17 ]\n# then/entonces\n#   echo ...\n# fi\n\n# NOTA: necesitar\u00e1s dos ifs (uno para mayor y otro para menor).\n</code></pre> <p>Intenta resolverlo antes de mirar la soluci\u00f3n (que se muestra aqu\u00ed abajo!): </p>condicionales1 - Soluci\u00f3n<pre><code>#!/bin/bash\n\n# Programa al que se le pasa como par\u00e1metro una edad:\n## - Si es mayor o igual a 18 a\u00f1os, escribe: \"Es mayor de edad.\"\n## - Si la edad es inferior a 18 a\u00f1os, escribe: \"Es menor de edad.\"\n\n# SINTAXIS PARA RESOLVER EL EJERCICIO:\n# Si    parametro1      es mayor que     17\n# if    $1              greater than     17\n# if    [ $1                -gt          17 ]\n# then/entonces\n#   echo ...\n# fi\n\n# NOTA: necesitar\u00e1s dos ifs (uno para mayor y otro para menor).\nif [ $1 -gt 17 ]\nthen\n    echo \"E maior de idade.\"\nfi\n\nif [ $1 -lt 18 ]\nthen\n    echo \"E menor de idade.\"\nfi\n</code></pre> <p>Resultado de la ejecuci\u00f3n: </p>Ejemplo de ejecuci\u00f3n de condicionales1<pre><code>./condicionales1 18\nEs mayor de edad.\n\n./condicionales1 17\nEs menor de edad.\n</code></pre> <p>Vamos a ver ahora algunas de las condiciones que se pueden utilizar en un condicional:</p> <ul> <li>-lt \u2192 less than (menor que)</li> <li>-gt \u2192 greater than (mayor que)</li> <li>-le \u2192 less equals than (menor o igual que)</li> <li>-ge \u2192 greater equals than (mayor ou igual que)</li> <li>-eq \u2192 equal, igual a.</li> <li>-ne \u2192 not equal (distinto de)</li> </ul> <p>En el ejercicio anterior podr\u00edamos haber utilizado mayor o igual que 18 ($1 -ge 18) en lugar de mayor que 17 ($1 -gt 17). Existen muchas soluciones diferentes para cada ejercicio.</p> <p>Aunque este m\u00e9todo funciona, es m\u00e1s correcto hacerlo con un si / sino (if/else). Es decir, en lugar de usar dos ifs utilizamos un if y debajo un else:</p> <pre><code>\n    flowchart TB\n\n    A([INICIO]) --&gt; B{\"Si param1 &gt;= 18\"}\n        B -- si     --&gt; C[/\"Escribir 'Es mayor de edad'\"/]\n        B -- sino   --&gt; D[/\"Escribir 'Es menor de edad'\"/]\n    E([\"Fin\"])\n\n    C --&gt; E\n    D --&gt; E</code></pre> condicionales2<pre><code>#!/bin/bash\n\nif [ $1 -ge 18 ] # (1)!\nthen # (2)!\n    echo \"Es mayor de edad.\"\nelse # (3)!\n    echo \"Es menor de edad.\"\nfi\n</code></pre> <ol> <li>Si param1 &gt;= 18 (pregunto si el par\u00e1metro 1 es mayor o igual que 18)</li> <li>Si (if) se cumple (then, entonces) --&gt; Escribo (en pantalla) que es mayor de edad.</li> <li>En caso contrario (sino, else) --&gt; Escribo que es menor de edad.</li> </ol> <p>El resultado es el mismo que en el anterior script.</p> <p>Nota</p> <p>Un else no puede ir sin un if y un else nunca lleva condici\u00f3n. El else se ejecuta si no se cumple la condici\u00f3n del if.</p>"},{"location":"gnu-linux/scripting-linux/#sentencias-condicionales-ifelse-con-mas-de-una-condicion","title":"Sentencias condicionales (if/else) con m\u00e1s de una condici\u00f3n","text":"<p>Si te fijas bien, ver\u00e1s que en el else (en el sino...) no podemos poner ninguna condici\u00f3n. En ocasiones no nos es suficiente con poner una \u00fanica condici\u00f3n en el if, sino que necesitamos comprobar m\u00e1s. Para esto podemos usar else if (elif).</p>"},{"location":"gnu-linux/scripting-linux/#ejercicio-de-ejemplo-menores-de-edad-mayores-de-edad-y-jubilados","title":"Ejercicio de ejemplo: menores de edad, mayores de edad y jubilados","text":"<p>Ahora, al ejercicio anterior, le vamos a a\u00f1adir una condici\u00f3n m\u00e1s (vamos a comprobar si la edad pasada como par\u00e1metro corresponde a una persona jubilada).</p> <p>Existen varias maneras de hacer este ejercicio:</p>"},{"location":"gnu-linux/scripting-linux/#resolucion-con-ifelses-dentro-de-otros-ifelses","title":"Resoluci\u00f3n con if/elses dentro de otros if/elses","text":"<p>Con esta soluci\u00f3n vamos a hacer que si se comprueba que la edad es igual o superior a 18 a\u00f1os se haga otro if para comprobar si est\u00e1 jubilado o no (pueden darse ambos casos):</p> condicionales3<pre><code>#!/bin/bash\n\n# Programa al que se le pasa como par\u00e1metro una edad:\n## - Si es mayor de 67 a\u00f1os, escribe: \"Est\u00e1 jubilado.\"\n## - Si la edad es inferior a 18 a\u00f1os, escribe: \"Es menor de edad.\"\n## - Si la edad es superior a 17 a\u00f1os pero inferior a 67, escribe: \"Es mayor de edad.\"\n\nif [ $1 -ge 18 ]\nthen\n        if [ $1 -gt 67 ] # (1)!\n        then\n            echo \"Est\u00e1 jubilado.\"\n        else\n            echo \"Es mayor de 18.\"\n        fi\n# En caso de que no sea mayor de 18 es que es menor de edad.\nelse\n    echo \"Es menor de edad.\"\nfi\n</code></pre> <ol> <li>Si el c\u00f3digo pasa por aqu\u00ed signfiica que el par\u00e1metro 1 es igual o mayor que 18 a\u00f1os. Ahora, ya sabiendo que superamos los 18, tenemos que comprobar si llegamos o no a la jubilaci\u00f3n. Para eso hace falta otro if/else que compruebe si tambi\u00e9n superamos los 66 a\u00f1os.  \u00bfSomos mayores de 66? \u2192 IFo \u00bfNo lo somos? \u2192 ELSE</li> </ol>"},{"location":"gnu-linux/scripting-linux/#resolucion-haciendo-varias-comprobaciones-en-el-mismo-if","title":"Resoluci\u00f3n haciendo varias comprobaciones en el mismo if (&amp;&amp;)","text":"<p>Hasta ahora hemos puesto condiciones una sola vez (en el if). Podemos poner tantas condiciones como queramos con else if (elif) (significa: sino si... o en caso contrario...).</p> <p>Un elif (al igual que if) siempre lleva condici\u00f3n. El else es el \u00fanico que no lleva (lo que hay en el else se ejecuta solo en caso de que todo lo anterior no se cumpla).</p> <p>En el mismo condicional se pueden comprobar tantas cosas como se deseen uni\u00e9ndolas con AND (&amp;&amp;) o con OR (||): - AND (&amp;&amp;): verdadero si ambas condiciones son verdaderas. - OR (||): es verdadero si una de las dos condiciones es verdadera.</p> condicionales4<pre><code>#!/bin/bash\n\n# Programa al que se le pasa como par\u00e1metro una edad:\n## - Si es mayor de 67 a\u00f1os, escribe: \"Est\u00e1 jubilado.\"\n## - Si la edad es inferior a 18 a\u00f1os, escribe: \"Es menor de edad.\"\n## - Si la edad es superior a 17 a\u00f1os pero inferior a 67, escribe: \"Es mayor de edad.\"\n\nif [ $1 -ge 18 ] &amp;&amp; [ $1 -lt 67 ] # (1)!\nthen\n    echo \"Es mayor de edad.\"\n\nelif [ $1 -ge 67 ] # (2)!\nthen\n    echo \"Est\u00e1 jubilado.\"\n\nelse\n    echo \"Es menor de edad.\"\nfi\n</code></pre> <ol> <li>Aqu\u00ed se comprueban dos condiciones:- \u00bfEs mayor o igual que 18?- \u00bfEs menor que 67?Ambas se deben cumplir para continuar por el then.</li> <li>Si el c\u00f3digo va por aqu\u00ed es que una de las dos condiciones anteriores no se cumpli\u00f3 (por tanto sabemos que o bien es menor de 18  o bien es mayor de 67 ).Con el elif y el else sabremos cu\u00e1l es </li> </ol> <p>Aqu\u00ed hemos a\u00f1adido una nueva posibilidad. En el if hemos unido dos condiciones:</p> <ol> <li>El par\u00e1metro 1 ($1) es mayor o igual que 18.</li> <li>El par\u00e1metro 1 ($1) es menor que 67 a\u00f1os.</li> </ol> <p>Hemos unido las dos condiciones con &amp;&amp; (AND, y). Esto quiere decir que solamente si se cumplen ambas condiciones entrar\u00eda ah\u00ed. Por tanto, si se cumplen ambas condiciones mostrar\u00e1 el mensaje de que es mayor de edad.</p> <p>En caso de que solo necesitamos que se cumplan una de las dos usar\u00edamos || en lugar de &amp;&amp;.</p>"},{"location":"gnu-linux/scripting-linux/#resolucion-mas-sencilla-ifelifelse","title":"Resoluci\u00f3n m\u00e1s sencilla: if/elif/else","text":"<p>Aunque las resoluciones anteriores son v\u00e1lidas, las m\u00e1s sencilla suele ser siempre la mejor. A continuaci\u00f3n se os muestra otra posible soluci\u00f3n del ejercicio (aunque con un peque\u00f1o error para que lo solucioneis).</p> <p>Ejercicio: ejecuta el siguiente c\u00f3digo y si no funciona arr\u00e9glalo:</p> condicionales5 - Encuentra el error!<pre><code>#!/bin/bash\n\n# Programa al que se le pasa como par\u00e1metro una edad:\n## - Si es mayor de 67 a\u00f1os, escribe: \"Est\u00e1 jubilado.\"\n## - Si la edad es inferior a 18 a\u00f1os, escribe: \"Es menor de edad.\"\n## - Si la edad es superior a 17 a\u00f1os pero inferior a 67, escribe: \"Es mayor de edad.\"\n\nif [ $1 -ge 18 ]\nthen\n    echo \"Es mayor de edad.\"\n\nelif [ $1 -ge 67 ]\nthen\n    echo \"Est\u00e1 jubilado.\"\n\nelse\n    echo \"Es menor de edad.\"\nfi\n</code></pre> <p>Intenta encontrar el error! es algo muy simple una vez te des cuenta :-).</p>"},{"location":"gnu-linux/scripting-linux/#bucles","title":"Bucles","text":""},{"location":"gnu-linux/scripting-linux/#bucle-while-mientras","title":"Bucle while (mientras)","text":"<p>La palabra while significa en espa\u00f1ol mientras. El bucle while o \"mientras\" hace que, en caso de cumplirse la condici\u00f3n, todo lo que hay dentro (entre el \"do\" y el \"done\") se ejecute repetidamente hasta que esa condici\u00f3nd el while deje de cumplirse. La sintaxis es similar a la del if:</p> <pre><code>while [ condici\u00f3n ]\ndo\n    # Aqu\u00ed escribimos todo lo que queramos hacer en caso de que la condici\u00f3n se cumpla\ndone\n</code></pre> <p>Este bucle while funcionar\u00e1 igual que el if, salvo por el hecho de que repetir\u00e1 sin parar la ejecuci\u00f3n (se repetir\u00e1 una y otra vez). Vamos a ver la diferencia entre usar un IF y un WHILE con un ejemplo:</p> C\u00f3digo (con if)Ejecuci\u00f3n ifC\u00f3digo (con while)Ejecuci\u00f3n while if-vs-while<pre><code>#!/bin/bash\n\n# Ejercicio: indica si el n\u00famero es positivo, no pongas nada en caso de ser negativo\n\necho -n \"Escribe un n\u00famero: \"\nread numero\n\nif [ $numero -gt 0 ]\nthen\n        echo \"El n\u00famero $numero es positivo.\"\nfi\n</code></pre> <pre><code>./if-vs-while\nEscribe un n\u00famero: 2\nEl n\u00famero 2 es positivo.\n</code></pre> <pre><code>#!/bin/bash\n\n# Ejercicio que muestra los numeros positivos.\n\necho -n \"Escribe un n\u00famero: \"\nread numero\n\nwhile [ $numero -gt 0 ]\ndo\n        echo \"El n\u00famero $numero es positivo.\"\ndone\n</code></pre> <pre><code>    /if-vs-while2\n    Escribe un n\u00famero: 2\n    El n\u00famero 2 es positivo.\n    El n\u00famero 2 es positivo.\n    El n\u00famero 2 es positivo.\n    El n\u00famero 2 es positivo.\n    El n\u00famero 2 es positivo.\n    El n\u00famero 2 es positivo.\n    ...\n    ...\n</code></pre> <p>Ahora veamos el c\u00f3digo con while:</p> <ul> <li>Si la condici\u00f3n no se cumple (si le damos, por ejemplo, un -5) funcionar\u00eda igual que en el if (no pasar\u00eda nada).</li> <li>Si la condici\u00f3n se cumple (y mientras se siga cumpliendo) lo que hay dentro seguir\u00e1 ejecut\u00e1ndose hasta el infinito. En el caso de este script hay que parar el programa con la combinaci\u00f3n Ctrl+C.</li> </ul>"},{"location":"gnu-linux/scripting-linux/#ejercicios-con-bucle-while","title":"Ejercicios con bucle while","text":""},{"location":"gnu-linux/scripting-linux/#contar-de-1-a-5","title":"Contar de 1 a 5","text":"<p>Crea un script que cuente los n\u00fameros del 1 al 5 (usa para ello un bucle while). Si quieres sumar n\u00fameros puedes usar el comando expr: <code>expr 4 + 5</code></p> <p>La l\u00f3gica del programa ser\u00eda la siguiente:</p> <pre><code>\n    flowchart TB\n\n    A([INICIO]) --&gt; B[\"contador = 0\"] --&gt; C{\"Mientras contador &lt; 5\"}\n        C -- se cumple --&gt; D[/\"Escribir contador'\"/] --&gt; E[\"contador = contador + 1\"]\n    E --&gt; C\n    E --&gt; F([\"Fin\"])</code></pre> <p>A continuaci\u00f3n se muestra un posible resultado.</p> contar-hasta-5<pre><code>#!/bin/bash\n\ncontador=0\nwhile [ $contador -lt 5 ]\ndo\n    echo \"$contador\"\n    contador=$(expr $contador + 1)\ndone    \n</code></pre> <p>Si lo ejecutas, ver\u00e1s que no cuenta exactamente del 1 al 5. Arr\u00e9glalo para que funcione como debe.</p>"},{"location":"gnu-linux/scripting-linux/#mostrar-los-numeros-entre-dos-numeros-dados","title":"Mostrar los n\u00fameros entre dos n\u00fameros dados","text":"<p>Crea un script que, pasados dos par\u00e1metros, muestre os n\u00fameros desde el primero al \u00faltimo (ambos inclu\u00eddos). Por ejemplo: si ejecutas el script como <code>./entre-numeros 20 23</code> la salida deber\u00eda ser <code>20 21 22 23</code>.</p>"},{"location":"gnu-linux/scripting-linux/#bucle-for-para","title":"Bucle for (para)","text":"<p>La sintaxis del bucle for es similar a las anteriores:</p> <p></p>Sintaxis del bucle for (para)<pre><code>for VARIABLE in 1 2 3 4 5\ndo\n    # Hago cosas\ndone\n</code></pre> En este bucle, la VARIABLE tomar\u00eda primero el valor 1, luego el 2, luego el 3, luego el 4 y finalmente el 5. Se ejecutar\u00eda 5 veces y en $VARIABLE cada vez uno de esos valores. <p>Veamos un ejemplo como el anterior del while (que muestre n\u00fameros del 1 al 5).</p> Mostrar n\u00fameros del 1 al 5<pre><code>#!/bin/bash\n\nfor contador in 1 2 3 4 5\ndo\n    echo \"El contador vale: $contador.\"\ndone\n</code></pre>"},{"location":"gnu-linux/scripting-linux/#for-con-rangos","title":"For con rangos","text":"<p>El bucle for se puede usar con rangos. La sintaxis es la siguiente:</p> Sintaxis de rangos en el bucle for<pre><code>for i in {n1..n2}\ndo\n    echo $i # (1)!\ndone\n</code></pre> <ol> <li>En este caso le estamos llamando \"i\" al contador. \"i\" recorrer\u00e1 desde n1 hasta n2 todos los n\u00fameros.</li> </ol> <p>Veamos con un ejemplo real que recorra los n\u00fameros del 1 al 5:</p> Contar 5 con rangosEjecuci\u00f3n Recorrer n\u00fameros del 1 al 5 usando rangos<pre><code>#!/bin/bash\n\nfor cont in {1..10} \ndo\n    echo \"El contador vale: $cont.\"\ndone\n</code></pre> <pre><code>./contar-hasta-5-rangos\nEl contador vale: 1.\nEl contador vale: 2.\nEl contador vale: 3.\nEl contador vale: 4.\nEl contador vale: 5.\n</code></pre> <p>Si deseamos trabajar con rangos como ahora, pero queremos hacer que el contador vaya de 2 en 2, de 5 en 5... podemos hacerlo con la sintaxis siguiente: </p>Sintaxis de rangos en el bucle for<pre><code>for i in {NUMERO_INICIAL..NUMERO_FINAL..NUMERO_DE_SALTOS}\ndo\n    echo \"$i\" # (1)!\ndone\n</code></pre> <ol> <li>Se mostrar\u00e1 el valor de la variable i. Este valor empezar\u00e1 en NUMERO_INICIAL e ir\u00e1 saltando NUMERO_DE_SALTOS hata llegar a NUMERO_FINAL.</li> </ol> <p>Por ejemplo, el siguiente c\u00f3digo ir\u00e1 hacia atr\u00e1s desde 20 hasta -5 (e ir\u00e1 de 5 en 5):</p> Rangos con saltoEjecuci\u00f3n Recorrer n\u00fameros del 1 al 5 usando rangos<pre><code>#!/bin/bash\n\nfor cont in {20..-5..5} \ndo\n    echo \"El contador vale: $cont.\"\ndone\n</code></pre> <pre><code>./contar-hasta-5-rangos-salto\nEl contador vale: 20.\nEl contador vale: 15.\nEl contador vale: 10.\nEl contador vale: 5.\nEl contador vale: 0.\nEl contador vale: -5.\n</code></pre>"},{"location":"gnu-linux/scripting-linux/#ejercicios","title":"Ejercicios","text":"<p>Realiza los siguientes ejercicios:</p> <ol> <li>Usando un bucle for con rangos, cuenta desde el n\u00famero 8 hasta el 1.</li> <li>Usando un bucle for sin rangos, cuenta desde el n\u00famero 8 hasta el 1.</li> <li>Usando un bucle while cuenta desde el n\u00famero 8 hasta el 0 (retrocediendo de 2 en 2).</li> <li>Crea un script que cuente los n\u00fameros impares empezando en el 133 hasta 0 (bucle for). Los n\u00fameros deben estar en la misma l\u00ednea separados por espacios.</li> <li>Crea un script que haga un head de todos los ficheros pasados como par\u00e1metro, no importa cu\u00e1ntos sean (recuerda que hay una variable que te devuelve todos los par\u00e1metros, as\u00ed podr\u00e1s usarlos en un bucle for sencillo). Debe indicarse claramente (al hacer el head de cada fichero) cu\u00e1l se est\u00e1 mostrando (m\u00e1s abajo tienes un ejemplo de ejecuci\u00f3n del ejercicio).</li> <li>Crea un script que, pasado un solo par\u00e1metro, indique si el par\u00e1metro que se le pasa es un n\u00famero par o impar. Para comprobar si el n\u00famero es par o impar solo hay que ver el resto de la divisi\u00f3n, para ello se usa el operador \"%\". Por ejemplo: para 10 % 2 el resultado ser\u00e1 0, para 11 % 2 el resultado (el resto) ser\u00e1 1.</li> <li>Haz que el script anterior (de comprobar si un n\u00famero es par o impar) funcione para cualquier n\u00famero de par\u00e1metros.</li> <li>Crea un script con un men\u00fa que pregunte al usuario las siguientes opciones:<ul> <li>(1) Ver estado de los discos.</li> <li>(2) Ver uso de RAM.</li> <li>(3) Mostrar las carpetas del directorio /home.</li> <li>En caso de que el usuario ponga un n\u00famero distinto de 1, 2 o 3, debe mostrarse un error.</li> </ul> </li> <li>Haz una copia del script anterior y a\u00f1ade una opci\u00f3n 4 que sea \"Salir\". El programa se repetir\u00e1 continuamente mostrando el men\u00fa y pidiendo opciones hasta que el usuario pulse esa opci\u00f3n. Tambi\u00e9n, si se elige una opci\u00f3n que no existe (por ejemplo: 7) debe mostrarse un mensaje de error.</li> <li>Crea un programa de nombre copiaSegHome que haga una copia de seguridad de carpetas del home de un usuario. Para ello, primero debe preguntarse al usuario de cu\u00e1ntas carpetas quiere hacer copia de seguridad. Posteriormente, se pedir\u00e1 al usuario que introduzca nombres de carpetas que quiere copiar hasta llegar a esa cifra. Finalmente, se har\u00e1 la copia de seguridad en /opt/backups (el script debe ejecutrase como sudo para que funcione).</li> <li>Modifica el script anterior para que pare al principio en caso de que no se ejecute como sudo (busca la manera de comprobarlo). Adem\u00e1s, haz que las copias de seguridad se tengan el siguiente formato: usuario-a\u00f1omesdia.tar.gz.</li> <li>Haz un script que pregunte al usuario que comando quiere ejecutar. Guarda el comando y ejec\u00fatalo. Despu\u00e9s, indica con un mensaje si el comando se ha ejecutado correctamente o no.</li> <li>Haz un programa que pida n\u00fameros positivos continuamente. Cuando el usuario meta un n\u00famero negativo (p. ej: -2) el programa debe parar y mostrar la suma de todos los n\u00fameros introducidos (excepto el negativo).</li> <li>Crea un script que compruebe EL USO TOTAL de disco de la carpeta /etc o /var (la que se pase como par\u00e1metro de las dos). Si no es ninguna de las dos debe mostrar un error. Ejecuta el script como root. No pueden verse errores al ejecutar el comando.</li> <li>Crea un script que compruebe si hay conectividad a una lista de IPs pasadas como par\u00e1metro. En caso de no haber conectividad, debe mostrarse en un mensaje: \"La IP  no conecta.\"</li> </ol>"},{"location":"gnu-linux/scripting-linux/#ejemplos-de-ejecucion-de-los-ejercicios","title":"Ejemplos de ejecuci\u00f3n de los ejercicios","text":"<p>A continuaci\u00f3n se muestran ejemplos de salidas de los ejercicios anteriores al ejecutarlos:</p> Resultado ejercicio 1Resultado ejercicio 4Resultado ejercicio 5Resultado ejercicio 6Resultado ejercicio 7 <pre><code>------- EJECUCI\u00d3N CON UN COMANDO CORRECTO -------\n./2-funciona-ultimo-comando\nIntroduzca el comando que desea ejecutar: ls\n2-funciona-ultimo-comando  contar-impares-for  par-impar\n\nEl comando ls se ha ejecutado correctamente.\n\n------- EJECUCI\u00d3N CON UN COMANDO QUE NO EXISTE -------\n./2-funciona-ultimo-comando\nIntroduzca el comando que desea ejecutar: lsq\n\nEl comando lsq ha dado un error.\n</code></pre> <pre><code>nceleiro@mnceleiro-gram:~$ ./contar-impares-for\n133 131 129 127 125 123 121 119 117 115 113 111 109 107 105 103 101 99 97 95 93 91 89 87 85 83 81 79 77 75 73 71 69 67 65 63 61 59 57 55 53 51 49 47 45 43 41 39 37 35 33 31 29 27 25 23 21 19 17 15 13 11 9 7 5 3 1\nmnceleiro@mnceleiro-gram:~$\n</code></pre> <pre><code>./head-ficheros\n\n-------------- FICHERO: rosalia.txt ---------------------\n\nAdios rios, adios fontes\nAdios regatos pequenos\nAdios vista dos meus ollos\nNon sei cando nos veremos\n\n------------- FICHERO: estrofa.txt ------------------------\n\nAdios, adios, que me vou\nHerbi\u00f1as do camposanto\nDonde meu pai s' enterrou\nHerbi\u00f1as que biquey tanto\nTerri\u00f1a que nos criou\n\n---------------------------------------------------------\n</code></pre> <pre><code>./par-impar 4\nEl n\u00famero 4 es PAR.\n</code></pre> <pre><code>./par-impar 4 18 22 23\nEl n\u00famero 4 es PAR.\nEl n\u00famero 18 es PAR.\nEl n\u00famero 22 es PAR.\nEl n\u00famero 23 es IMPAR.\n</code></pre>"},{"location":"gnu-linux/scripting-linux/#tabla-de-diferencias-entre-lenguajes-de-programacion","title":"Tabla de diferencias entre lenguajes de programaci\u00f3n","text":"Lenguaje gen\u00e9rico Shell scripting Javascript Java variable = \"algo\" variable = \"algo\" let variable = \"algo\" String variable = \"algo\"int variable = numero Escribir \"texto\" echo \"texto\" - console.log(\"texto\")- alert(\"texto\")- document.write(\"Texto\") System.out.println(\"texto\") Leer variableLeer num read num let num = prompt(\"Indica un n\u00famero\") Scanner sc = new Scanner(System.in);int num = sc.nextInt(); Esperar segundos sleep segundos setTimeout(..., milisegundos) Thread.sleep(milisegundos) Si x &gt; 10... if [ x -lt 10 ]; then\u2003...else\u2003...fi if (x &gt; 10) {\u2003...} else if (x === 10) {\u2003...} else {\u2003...} if (x &gt; 10) {\u2003...} else if (x == 10) {\u2003...} else {\u2003...}"},{"location":"gnu-linux/scripting-linux/#referencias","title":"Referencias","text":"<ul> <li>How-to: Shell parameters. ss64. Obtenido de: https://ss64.com/bash/syntax-parameters.html</li> <li>Vivek Gite. Bash For Loop Examples. cyberciti. Obtenido de: https://www.cyberciti.biz/faq/bash-for-loop/#C_style_for_loop</li> <li>Shell scripting tutorial. shellscript.sh. Obtenido de: https://www.shellscript.sh</li> </ul>"},{"location":"gnu-linux/software/","title":"Gestores de paquetes","text":""},{"location":"gnu-linux/software/#gestores-de-paquetes","title":"Gestores de paquetes","text":"<p>TODO: apt, yum, dnf, snap</p>"},{"location":"gnu-linux/users-groups-local/","title":"Gesti\u00f3n de usuarios y grupos","text":""},{"location":"gnu-linux/users-groups-local/#informacion-sobre-usuarios-y-grupos","title":"Informaci\u00f3n sobre usuarios y grupos","text":"<p>La informaci\u00f3n de los usuarios y grupos locales que hay en el sistema, en GNU/Linux, la informaci\u00f3n sobre gesti\u00f3n de usuarios y grupos se almacena en los siguientes ficheros:</p> Fichero Descripci\u00f3n /etc/passwd Fichero de usuarios. /etc/group Fichero con los grupos /etc/shadow Fichero con las contrase\u00f1as (encriptadas) /etc/skel Es el esqueleto de creaci\u00f3n de un nuevo usuario. Esto es, cuando se crea un nuevo usuario mediante el comando useradd, los ficheros que haya en /etc/skel se copiar\u00e1n en su home. /etc/default/useradd Aqu\u00ed se define donde est\u00e1 el esqueleto (/etc/skel por defecto) para crear nuevos usuarios y el SHELL que se usar\u00e1 por ellos."},{"location":"gnu-linux/users-groups-local/#comandos-de-gestion-de-usuarios","title":"Comandos de gesti\u00f3n de usuarios","text":"Comando Descripci\u00f3n idid [-un] Muestra el id y nombre del usuario actual y todos los grupos en los que est\u00e1 (tanto el principal como lo secundarios). Se podr\u00eda obtener la misma informaci\u00f3n con un: cat /etc/group | grep \"usuario\" whoami Muestra solamente el usuario actual que est\u00e1 ejecutando el comando. Es equivalente a hacer un id -un. adduser Crea un usuario de forma interactiva (este no nos es \u00fatil para automatizar tareas mediante scripts). useradd Crea un usuario. La sintaxis es la siguiente:useradd -m [-d ruta_carpeta_home] [-s shell_a_utilizar] . Un ejemplo real, para el usuario \"marcos\", podr\u00eda ser el siguiente:useradd -m -d /home/marcos -s /bin/bash marcos. chmod chmod u+r \\ \u2192 A\u00f1ade permisos de lectura (Read) al usuario.chmod u+w \\ \u2192 A\u00f1ade permisos de escritura (Write) al usuario.chmod u+x \\ \u2192 A\u00f1ade permisos de ejecuci\u00f3n (eXecution) al usuario.Adem\u00e1s, si en lugar de la u (usuario, user) usamos la g (grupo, group) o la o (otros, others) podemos dar permisos a los usuarios pertenecientes al mismo grupo u a otros. La letra a (todos, all) ser\u00eda para dar permiso a todos los usuarios (p. ej: permiso de ejecuci\u00f3n a usuario, grupo y otros: a+x).Si en lugar de dar un permiso queremos quitarlo, solo tenemos que cambiar el + por un -.Puedes consultar m\u00e1s informaci\u00f3n sobre permisos en este art\u00edculo. chown chown  chown <p>A continuaci\u00f3n se muestra en un tutorial en v\u00eddeo como gestionar usuarios y grupos locales en Debian y derivados: </p>"},{"location":"hardware/arquitecturas-fisicas/","title":"Arquitecturas f\u00edsicas","text":""},{"location":"hardware/arquitecturas-fisicas/#arquitecturas-tradicionales","title":"Arquitecturas tradicionales","text":""},{"location":"hardware/arquitecturas-fisicas/#von-neumann","title":"Von Neumann","text":"<p>A finales de los a\u00f1os 40, Von Neumann se integr\u00f3 en un grupo y trabaj\u00f3 en el desarrollo de EDVAC, similar a ENIAC pero a\u00f1adiendo el concepto de \u201cprograma almacenado\u201d. Antes de esto el programa no se guardaba en memoria (la cu\u00e1l era solo para datos) sino que se indicaba a la m\u00e1quina qu\u00e9 hacer a trav\u00e9s de conexiones f\u00edsicas.</p> <p>Dicho de otra manera, la l\u00f3gica de programaci\u00f3n era estaba basada en rel\u00e9s y conexiones cableadas en las anteriores arquitecturas (principalmente Harvard) y para cambiar un paso del algoritmo hab\u00eda que recablear. Esto se cambi\u00f3 en esta arquitectura unificando memoria de datos e instrucciones en una sola memoria principal, simplificando la doble gesti\u00f3n de control de datos e instrucciones.</p> <p>Nota</p> <p>La gran aportaci\u00f3n de Von Neumann respecto a arquitecturas preexistentes (p. ej: Harvard) fue eliminar la l\u00f3gica de programaci\u00f3n basada en rel\u00e9s o conexiones cableadas, unificando la memoria de datos y la de programa en una sola denominada como memoria principal y simplificando, por tanto, la doble gesti\u00f3n de control de datos y programa. Adem\u00e1s mejoraba la disponibilidad incremental de espacio permitiendo dividir entre una y otra a voluntad.</p> <p>Puedes probar aqu\u00ed el funcionamiento de VonNeumann.</p>"},{"location":"hardware/arquitecturas-fisicas/#harvard","title":"Harvard","text":"<p>Se distingue de Von Neumann por la divisi\u00f3n de la memoria en instrucciones y datos, de manera que el procesador puede acceder separada y simult\u00e1neamente a ambas.</p> <p></p> <p>La arquitectura Harvard original no dispone de una memoria de programa, sino que la programaci\u00f3n se realiza encendiendo y apagando rel\u00e9s (la consideraci\u00f3n de programaci\u00f3n en t\u00e9rminos de memoria fue posterior).</p>"},{"location":"hardware/arquitecturas-fisicas/#harvard-modificada","title":"Harvard modificada","text":"<p>Actualmente, las arquitecturas ARM, x86 y AMD64 son de tipo \u201cHarvard modificado\u201d. Esto es, permiten acceso simult\u00e1neo a la memoria de programa y de datos solo a nivel de cach\u00e9, mientras que en memoria principal se encuentran juntas al cl\u00e1sico estilo de arquitectura Von Neumann.</p> <p>La arquitectura Harvard modificada auna las ventajas de ambas:</p> <ul> <li>Mantiene una \u00fanica memoria principal con datos e instrucciones, simplificando as\u00ed la l\u00f3gica de circuitos y el espacio.</li> <li>Permiten la protecci\u00f3n de instrucciones a nivel de procesador mediante la separaci\u00f3n a nivel de cach\u00e9.</li> <li>Al estar separados en la CPU, existe un acceso paralelo simult\u00e1neo a datos e instrucciones, con el consiguiente aumento de rendimiento</li> </ul>"},{"location":"hardware/arquitecturas-fisicas/#arquitecturas-actuales","title":"Arquitecturas actuales","text":"<p>Actualmente existen tres arquitecturas ampliamente utilizadas que son:</p> <ul> <li>x86: arquitectura de 32 bits de Intel (basada en CISC)</li> <li>AMD64/x86-64: arquitectura de 64 bits creada por AMD que extend\u00eda la anterior (basada en CISC).</li> <li>ARM: arquitectura basada en RISC, con conjuntos de instrucciones m\u00e1s simples.</li> </ul>"},{"location":"hardware/arquitecturas-fisicas/#arquitectura-x86-32-bits","title":"Arquitectura x86 (32 bits)","text":"<p>La arquitectura x86 es probablemente la m\u00e1s utilizada de la historia en ordenadores. Se ha creado en los a\u00f1os 70.</p> <p>El primer microprocesador se ha lanzado en 1971 por Intel. A\u00f1os m\u00e1s tarde, en 1978 Intel lanza el procesador Intel 8086, primer procesador con juego de instrucciones x86 y que usaba una arquitectura de 16 bits. Su nombre se utiliz\u00f3 para nombrar los pr\u00f3ximos procesadores de Intel: 80186, 80286, 80386, 80486, etc.</p> <p>Aunque x86 era inicialmente de 16bits, las versiones m\u00e1s actuales y que conocemos en ordenadores las \u00faltimas d\u00e9cadas son de 32 bits. Los ordenadores con arquitectura x86 cesaron su producci\u00f3n en 2007.</p>"},{"location":"hardware/arquitecturas-fisicas/#arquitectura-amd64-64-bits","title":"Arquitectura AMD64 (64 bits)","text":"<p>La arquitectura x86 era de Intel y utilizaba instrucciones de 32 bits desde 1985. La arquitectura m\u00e1s usada actualmente en ordenadores personales es AMD64 (de 64 bits).</p> <p>En el a\u00f1o 2003 el mercado de procesadores se divid\u00eda entre dos marcas que compet\u00edan entre s\u00ed: AMD e Intel (algo que sigue ocurriendo a d\u00eda de hoy). AMD se les adelanta en el mercado en esta \u00e9poca sacando procesadores con una nueva arquitectura con un juego de instrucciones x86_64 que no solo era de 64 bits, sino que inclu\u00eda tambi\u00e9n en ella el juego de instrucciones completo de x86 tanto para 16 bits como para 32, permitiendo as\u00ed instalar programas de todo tipo. Consulta este enlace para m\u00e1s informaci\u00f3n sobre el tema.</p>"},{"location":"hardware/arquitecturas-fisicas/#arm","title":"ARM","text":"<p>La arquitectura ARM (Advanced RISC Machines) es la m\u00e1s utilizada en dispositivos m\u00f3viles, teniendo un bajo consumo de energ\u00eda. Aunque a d\u00eda de hoy practicamente todos los ordenadores que compramos son x64, est\u00e1n empezando a fabricarse ordenadores con arquitectura ARM.</p> <p>Como ejemplo, Apple ha empezado hace muy poco tiempo a usar procesadores con arquitectura ARM para sus port\u00e1tiles. No es posible instalar software para arquitecturas de 64 bits en ordenadores que usan ARM (por lo cu\u00e1l la decisi\u00f3n de Apple no es tomada a la ligera).</p> <p>Muchos dispositivos hoy en d\u00eda dependen de bater\u00edas, pero la tecnolog\u00eda de mejora de bater\u00edas apenas ha mejorado en toda una d\u00e9cada y esto hace que se busque mejorar el tiempo de uso en bater\u00eda de otras maneras, y esta arquitectura es buena para ello.</p>"},{"location":"hardware/arquitecturas-fisicas/#practica","title":"Pr\u00e1ctica","text":"<p>Para redactar la pr\u00e1ctica entrega capturas con todos los ejercicios.</p> <ol> <li>Busca el modelo de procesador y la RAM de la que dispone tu ordenador, as\u00ed como su arquitectura.</li> <li>Si dispones de este ordenador y quieres instalar en el el programa VirtualBox. Indica por qu\u00e9 no puedes instalar la \u00faltima versi\u00f3n y cu\u00e1l ser\u00eda la \u00faltima v\u00e1lida (lo dif\u00edcil aqu\u00ed es pensar por qu\u00e9 la \u00faltima versi\u00f3n no vale, despu\u00e9s busca la \u00faltima compatible con ese ordenador).</li> </ol>"},{"location":"hardware/arquitecturas-fisicas/#referencias","title":"Referencias","text":"<ul> <li>Diferencias entre i386, x86, x64, AMD64 e IA64. Thinkinvirtual. Obtenido de: https://www.thinkinvirtual.com/2017/03/diferencias-entre-i386-x86-x64-amd64-e.html</li> <li>Jos\u00e9 Mar\u00eda L\u00f3pez. La guerra de los procesadores: CISC versus RISC (o x86 contra ARM). Hipertextual. Obtenido de: https://hipertextual.com/2021/09/procesadores-risc-cisc-arm</li> </ul>"},{"location":"hardware/componentes-de-ordenador/","title":"Componentes de un ordenador","text":"<p>Puedes consultar informaci\u00f3n adicional sobre los componentes f\u00edsicos en este art\u00edculo.</p>"},{"location":"hardware/intro/","title":"Historia","text":""},{"location":"hardware/intro/#introduccion-e-historia-de-la-informatica","title":"Introducci\u00f3n e historia de la inform\u00e1tica","text":"<p>La historia de la inform\u00e1tica es reciente, pero sin duda es una de las ciencias que m\u00e1s ha evolucionado y m\u00e1s desarrollo sufrir\u00e1 en el futuro. A continuaci\u00f3n se definir\u00e1n algunos de los conceptos hist\u00f3ricos m\u00e1s importantes relacionados con la misma.</p>"},{"location":"hardware/intro/#definiciones","title":"Definiciones","text":""},{"location":"hardware/intro/#informatica","title":"Inform\u00e1tica","text":"<p>El t\u00e9rmino inform\u00e1tica se cre\u00f3 en Francia en el a\u00f1o 1962, y procede de la contracci\u00f3n de las palabras informaci\u00f3n y autom\u00e1tica. Seg\u00fan la RAE, se define inform\u00e1tica como el conjunto de conocimientos cient\u00edficos y t\u00e9cnicas que permiten el tratamiento de informaci\u00f3n de forma autom\u00e1tica.</p>"},{"location":"hardware/intro/#ordenador-humano","title":"Ordenador humano","text":"<p>Ordenador (en ingl\u00e9s: computer y en espa\u00f1ol latino computadora) es una palabra que se refiere a contar o calcular. Esta palabra se usaba como referencia a las acciones que realizaban los ordenadores mec\u00e1nicos y, antes de eso, los ordenadores humanos (1613).</p> <p>La palabra ordenador (humano) naci\u00f3 en el siglo XVII y fue definida por Alan Turing tres siglos m\u00e1s tarde como alguien que deb\u00eda seguir unas reglas fijas sin ninguna autoridad que los desv\u00ede ni en el m\u00e1s m\u00ednimo detalle. Esto es, era una persona capaz de realizar operaciones matem\u00e1ticas antes de que los ordenadores electr\u00f3nicos estuviesen disponibles. M\u00e1s adelante han surgido los ordenadores como m\u00e1quinas.</p>"},{"location":"hardware/intro/#ordenador","title":"Ordenador","text":"<p>Actualmente, un ordenador se puede definir como una m\u00e1quina electr\u00f3nica capaz de realizar las siguientes tareas:</p> <ul> <li>Aceptar informaci\u00f3n</li> <li>Almacenarla.</li> <li>Procesarla seg\u00fan un conjunto de instrucciones</li> <li>Producir y proporcionar unos resultados.</li> </ul> <p>En otras palabras, el ordenador puede aceptar unos datos de entrada, realizar con ellos operaciones l\u00f3gicas y aritm\u00e9ticas y, finalmente, proporcionar la informaci\u00f3n resultante a trav\u00e9s de un medio de salida.</p>"},{"location":"hardware/intro/#datos-e-informacion","title":"Datos e informaci\u00f3n","text":"<p>Los datos son hechos y cifras sin procesar, sin ning\u00fan an\u00e1lisis ni interpretaci\u00f3n a\u00f1adida. La informaci\u00f3n es un conjunto de datos que, procesados y analizados, aportan conocimiento sobre las cosas.</p> <pre><code>\n    flowchart LR\n    A[Datos de entrada] --&gt; B[\"Procesado de datos\"] --&gt; C[Datos de salida]\n</code></pre>"},{"location":"hardware/intro/#movimiento-de-informacion-bits-y-senales","title":"Movimiento de informaci\u00f3n: bits y se\u00f1ales","text":"<p>En inform\u00e1tica, el movimiento de informaci\u00f3n se realiza de forma digital por lo general. El t\u00e9rmino d\u00edgito nos da una idea de que la representaci\u00f3n no va a tomar cualquier valor del mundo real (se\u00f1ales anal\u00f3gicas) sino un n\u00famero discreto de estos y, al igual que los dedos de nuestras manos son limitados, tambi\u00e9n lo es el sistema decimal (base 10).</p> <p>El concepto de bit (binary digit o d\u00edgito binario) est\u00e1 ligado a esta representaci\u00f3n digital de informaci\u00f3n. Los ordenadores solo van a almacenar internamente dos estados (voltaje o ausencia de este, magnetizado o no, refleja un l\u00e1ser o no, etc.). Estos estados se van a representar como d\u00edgitos binarios con un uno o un cero. El bit es la unidad m\u00e1s peque\u00f1a de informaci\u00f3n.</p>"},{"location":"hardware/intro/#sistema-informatico","title":"Sistema inform\u00e1tico","text":"<p>Un sistema inform\u00e1tico se forma no solo por componentes f\u00edsicos (hardware), sino tambi\u00e9n l\u00f3gicos (software). Adem\u00e1s de esto se dispone del firmware (software integrado directamente en el hardware, como la BIOS/UEFI). La combinaci\u00f3n de estos es lo que forma el sistema inform\u00e1tico.</p>"},{"location":"hardware/intro/#historia-del-ordenador-digital","title":"Historia del ordenador digital","text":""},{"location":"hardware/intro/#antecedentes-al-ordenador-digital-aun-imposible-de-crear","title":"Antecedentes al ordenador digital (a\u00fan imposible de crear)","text":"<ul> <li>En 1642 Blaise Pascal crea la primera calculadora (con ruedas y engranajes) denominada Pascalina.</li> <li>En 1833 Charles Babbage y Ada Byron establecen los principios del ordenador digital, pero que no se pod\u00edan poner en pr\u00e1ctica porque la tecnolog\u00eda de la \u00e9poca se lo imped\u00eda. Ada Byron es considerada como la creadora del primer algoritmo de la historia, creado para la m\u00e1quina Babbage que no exist\u00eda f\u00edsicamente.</li> <li>En 1885 Herman Hollerith crea las tarjetas perforadas y el invento se usa para censar a la poblaci\u00f3n. Tuvo tanto \u00e9xito que la empresa que crea dedicada al censo ser\u00e1 una de las que se fusionar\u00e1 para formar lo que hoy se conoce como IBM.</li> </ul>"},{"location":"hardware/intro/#division-en-generaciones","title":"Divisi\u00f3n en generaciones","text":"<p>Respecto a la historia de la inform\u00e1tica, en la mayor parte de la literatura se definen adem\u00e1s varias generaciones (seg\u00fan el momento hist\u00f3rico):</p>"},{"location":"hardware/intro/#primera-generacion","title":"Primera generaci\u00f3n","text":"<ul> <li>Situada entre: 1938 y 1958 (a\u00f1os 40/50).</li> <li>Los ordenadores se usaban para fines cient\u00edficos y/o militares.</li> <li>Construidos mediante v\u00e1lvulas de vac\u00edo y rel\u00e9s.</li> </ul> Imagen de una v\u00e1lvula de vac\u00edo. Obtenida de: Wikipedia. <p>Entre los ordenadores creados durante esta \u00e9poca se encuentran:</p> <ul> <li>1938: Konrad Zuse crea primer ordenador electromec\u00e1nico (Z1), era una calculadora basada en cinta perforada. M\u00e1s adelante se crean sus sucesores: Z2, Z3 y Z4. La Z1 fue destruida en un bombardeo en Berl\u00edn a finales de 1943.</li> <li>1944: creaci\u00f3n del Harvard MARK I. Posteriormente las versiones II, III y IV.</li> <li>1944: Se crea el Colossus utilizado durante la 2\u00aa guerra mundial y representado hace unos a\u00f1os en el cine mediante la pel\u00edcula \"Descifrando Enigma\".</li> <li>1946: Se finaliza el ENIAC y m\u00e1s adelante sus sucesores: EDVAC (1951) y UNIVAC I y II.</li> </ul> <p>Inicialmente ENIAC se consideraba el primer ordenador digital de la historia, algo que cambi\u00f3 con la desclasificaci\u00f3n de documentos con el paso de los a\u00f1os. A d\u00eda de hoy, todav\u00eda se disputa cierta controversia en la consideraci\u00f3n de cu\u00e1l fue el primer ordenador digital de la historia.</p>"},{"location":"hardware/intro/#segunda-generacion","title":"Segunda generaci\u00f3n","text":"<ul> <li>Situada entre: 1959 y 1964.</li> <li>Reducci\u00f3n considerable del tama\u00f1o mediante la sustituci\u00f3n de la v\u00e1lvula de vac\u00edo por el transistor.</li> <li>Empiezan a usarse lenguajes de alto nivel (se inicia la creaci\u00f3n de COBOL en 1959).</li> <li>Aparici\u00f3n de os perif\u00e9ricos.</li> </ul> Imagen de varios tama\u00f1os de transistores. Obtenida de: Wikipedia."},{"location":"hardware/intro/#tercera-generacion","title":"Tercera generaci\u00f3n","text":"<ul> <li>Entre 1965 y 1971.</li> <li>Aparecen las cintas magn\u00e9ticas para almacenamiento.</li> <li>Uso de sistemas operativos de prop\u00f3sito general y de los circuitos integrados (tambi\u00e9n llamados chips o microchips). Esto hace los ordenadores m\u00e1s r\u00e1pidos y completos reduciendo el tama\u00f1o y el coste.</li> </ul> Imagen de un circuito integrado. Obtenida de: tecnolog\u00eda-inform\u00e1tica. <p>Nota</p> <p>Un circuito integrado es un componente que puede contener en un espacio muy peque\u00f1o muchos componentes electr\u00f3nicos interconectados: resistencias, transistores, capacitores, etc.</p>"},{"location":"hardware/intro/#cuarta-generacion","title":"Cuarta generaci\u00f3n","text":"<ul> <li>Entre 1972 y 1982.</li> <li>Sigue la reducci\u00f3n de tama\u00f1o y coste: las CPUs se establecen en un solo circuito integrado. Esto son los microprocesadores.</li> <li>M\u00e1s lenguajes de alto nivel como Pascal, C o Basic.</li> <li>Aparici\u00f3n de UNIX.</li> </ul>"},{"location":"hardware/intro/#quinta-generacion","title":"Quinta generaci\u00f3n","text":"<ul> <li>Desde 1982 hasta la actualidad.</li> <li>Se caracteriza por la comercializaci\u00f3n del ordenador personal.</li> <li>Aparici\u00f3n de MSDOS.</li> <li>Aparici\u00f3n de C++, Java y muchos otros lenguajes.</li> <li>La nube, tel\u00e9fonos inteligentes...</li> </ul>"},{"location":"hardware/intro/#division-en-eras","title":"Divisi\u00f3n en eras","text":"<p>Diversa literatura realiza una divisi\u00f3n en eras:</p>"},{"location":"hardware/intro/#era-mecanica","title":"Era mec\u00e1nica","text":"<p>Desde la aparici\u00f3n de la Pascalina (calculadora con ruedas y engranajes) en 1642 hasta 1944 (fecha aproximada de aparici\u00f3n de los primeros circuitos el\u00e9ctricos).</p>"},{"location":"hardware/intro/#era-electromecanica","title":"Era electromec\u00e1nica","text":"<p>Se corresponde con las creaciones de los primeros ordenadores de la historia. Desde el ENIAC (que se mejorar\u00eda m\u00e1s adelante dando lugar a la computadora EDVAC) hasta los Z1, Z2, Z3 y Z4 creados por Konrad Zuse. El Z4 se considera el primer ordenador civil de la historia.</p> <p>En este periodo se crea tambi\u00e9n la arquitectura Von Neumann y la calculadora MARK I.</p>"},{"location":"hardware/intro/#era-electronica","title":"Era electr\u00f3nica","text":"<p>Esta \u00e9poca es la m\u00e1s actual, contamos en ella con m\u00e1quinas compuestas por componentes electr\u00f3nicos y es un periodo en el que IBM cobra gran importancia. Se han desarrollado los discos duros o la memoria RAM en m\u00f3dulos que a\u00fan siguen us\u00e1ndose hoy en d\u00eda.</p>"},{"location":"hardware/intro/#todos","title":"TODOs","text":"<ul> <li>A\u00f1adir im\u00e1genes para contextualizar las \u00e9pocas.</li> <li>A\u00f1adir gr\u00e1ficos en las definiciones de ordenador/sistema inform\u00e1tico.</li> </ul>"},{"location":"hardware/componentes/almacenamiento/","title":"Almacenamiento","text":"<p>TODO</p>"},{"location":"hardware/componentes/cpu-cooling/","title":"Refrigeraci\u00f3n CPU","text":"<p>Consultar tipos de refrigeraci\u00f3n en este art\u00edculo de ProfesionalReview</p>"},{"location":"hardware/componentes/memorias/","title":"Memorias","text":""},{"location":"hardware/componentes/memorias/#la-memoria-ram","title":"La memoria RAM","text":"<p>La memoria RAM (Random Access Memory o memoria de acceso aleatorio) tiene capacidad para almacenar datos, pero lo m\u00e1s importante a conocer de ella es que esos datos se perder\u00e1n en el momento en que la RAM se quede sin energ\u00eda (cuando apagues el ordenador).</p>"},{"location":"hardware/componentes/memorias/#funcionamiento-de-la-cpu-y-las-memorias","title":"Funcionamiento de la CPU y las memorias","text":"<p>Hemos visto los principales componentes que forman parte del hardware de un ordenador. Ahora veremos como funciona un procesador en asociaci\u00f3n con la memoria RAM.</p> <ul> <li>El procesador se encarga de ejecutar los programas.</li> <li>La memoria RAM se encarga de almacenar los datos.</li> </ul> <p>Cuando la CPU ejecuta un programa este se carga en la memoria RAM (debido a que la CPU tiene acceso directo a la RAM y puede guardar y cargar datos de forma muy veloz).</p> <p>Adem\u00e1s, existe un tipo de memoria persistente denominada cach\u00e9. Cuando se ejecuta un programa algunos datos se almacenan en esta memoria (la cu\u00e1l es persistente y todav\u00eda m\u00e1s r\u00e1pida que la RAM, pero de mucho menos tama\u00f1o).</p> Jerarqu\u00eda de memorias (velocidad vs capacidad). Imagen obtenida de: Teachbooik.com.au. <p>Cu\u00e1nto m\u00e1s cercana est\u00e1 la memoria utilizada a la CPU, m\u00e1s veloz es (el acceso a ella por la CPU es m\u00e1s r\u00e1pido). Adem\u00e1s de esto, cu\u00e1nto m\u00e1s lejana est\u00e1 la memoria de la CPU (y por tanto, m\u00e1s lento es el acceso a ella) m\u00e1s barato es tambi\u00e9n el precio.</p>"},{"location":"hardware/componentes/memorias/#modulos-de-ram-segun-su-forma","title":"M\u00f3dulos de RAM seg\u00fan su forma","text":"<p>Las ranuras de memoria RAM (o memoria principal) son f\u00e1cilmente identificables en la placa base gracias a las pesta\u00f1as laterales (y que normalmente se encuentran muy juntas y van en pares de: 2, 4 u 8 dependiendo del factor de forma de la placa base.</p> Ranuras de memoria RAM DDR3. Imagen obtenida de: Wikibooks. <p>Inicialmente los m\u00f3dulos de RAM eran circuitos integrados de memoria que se soldaban directamente a la placa base (por lo general eran m\u00f3dulos DIP de 14 o 16 pines). Antiguamente los m\u00f3dulos se conectaban a la placa mediante unas patillas delicadas denominadas m\u00f3dulos SIP. Hacia finales de los a\u00f1os 80 (m\u00e1s o menos la \u00e9poca del 386) aparecieron los z\u00f3calos SIMM, luego los DIMM y finalmente los RIMM.</p>"},{"location":"hardware/componentes/memorias/#modulos-de-memoria-ram-simm-1983","title":"M\u00f3dulos de memoria RAM: SIMM (1983)","text":"<p>A mediados de los 80 aparecieron las primeras memorias RAM cuyo m\u00f3dulo era una placa de circuito impreso (PCB) similar a los actuales. Estos son los m\u00f3dulos SIMM (Single In-line Memory Module).</p> <p>Las memorias SIMM llevaron, a lo largo de su historia, capacidades de entre 256 KiB hasta 128 MiB de tipo DRAM (las de 128 MiB se usaban para servidores).</p> <p>Nota</p> <p>Antes de las SIMM, para ampliar la RAM en un ordenador se iban soldando los m\u00f3dulos a la placa. Era, por tanto, dif\u00edcil quitarlas sin causar da\u00f1os. Las RAMs SIMM se insertan en un slot (como se hace actualmente) y por tanto son sencillas de quitar e instalar.</p>"},{"location":"hardware/componentes/memorias/#numero-de-pines","title":"N\u00famero de pines","text":"<p>Las memorias SIMM ten\u00edan 30 contactos y, posteriormente, de 72. Las memorias de 30 contactos permit\u00edan transmitir 8 bits de datos a la vez, mientras que las de 72 contactos transmit\u00edan 32 bits.</p>"},{"location":"hardware/componentes/memorias/#modulos-de-memoria-ram-dimm-90s","title":"M\u00f3dulos de memoria RAM: DIMM (90s)","text":"<p>Los m\u00f3dulos DIMM (M\u00f3dulo de memoria en dos l\u00edneas, Dual In-line Memory Module) son los utilizados a d\u00eda de hoy. La diferencia con las anteriores (que, en su versi\u00f3n de 72 contactos transmit\u00edan 32 bits de datos) es que las SIMM solo transmit\u00edan por una de sus dos caras. Las DIMM pueden transmitir datos por ambas caras (por eso lo de \"dual\" de su nombre), es decir, permiten transmitir el doble de bits (64).</p> <p>Los m\u00f3dulos DIMM son la evoluci\u00f3n de los SIMM y tienen 168, 184, 240 y 288 contactos con un tiempo de respuesta inferior a 10 nanosegundos. Dentro de los m\u00f3dulos DIMM se destacan seis tipos, todos del mismo tama\u00f1o pero diferenciados por el n\u00famero de conectores:</p> <ul> <li>SDRAM (168 conectores y potencia de 5.5 voltios).</li> <li>DDR (184 conectores y potencia de 2.6 voltios). A\u00f1o 2000.</li> <li>DDR2 (240 conectores y potencia de 1,8 voltios) Salieron en 2003.</li> <li>DDR3 (240 conectores y potencia de 1.5 voltios). Salieron en 2007.</li> <li>DDR4 (288 conectores y potencia de 1.2 voltios). Salieron en 2014.</li> <li>DDR5 (288 conectores y potencia de 1.1 voltios). Salieron en 2020.</li> </ul> <p>Nota</p> <p>Los m\u00f3dulos de tipo DIMM transmiten datos por ambas caras (con lo cu\u00e1l doblan su velocidad) y son los que se utilizan a\u00fan hoy en d\u00eda. Adem\u00e1s, en port\u00e1tiles los m\u00f3dulos se denominan SO-DIMM (son m\u00e1s peque\u00f1os, la \"S\" es de Small). Si quieres comprar ram para port\u00e1tiles debes elegir los m\u00f3dulos SO-DIMM.</p> <p>Nota</p> <p>Los m\u00f3dulos SO-DIMM son m\u00e1s peque\u00f1os y se usan en port\u00e1tiles. Su n\u00famero de patillas tampoco tiene por qu\u00e9 ser el mismo. En el caso de DDR5 un m\u00f3dulo DIMM tiene 288 patillas/pins/conectores, pero en el caso del SO-DIMM se reducen a 262.</p>"},{"location":"hardware/componentes/memorias/#modulos-de-memoria-ram-rimm-90s","title":"M\u00f3dulos de memoria RAM: RIMM (90s)","text":"<p>Hoy en d\u00eda est\u00e1n obsoletos. Tuvieron una alta demanda con placas base para Pentium 4.</p> <p>El ordenador no funcionaba bien si alguna ranura de RAM estaba vac\u00eda. Funcionaban en frecuencias muy elevadas y daban muy buen rendimiento para su \u00e9poca pero requer\u00edan tambi\u00e9n buenos disipadores de calor y su coste era muy alta.</p> Memorias SIMM y DIMM. Imagen obtenida de: FS Community."},{"location":"hardware/componentes/memorias/#tipos-de-ram-segun-su-forma-de-sincronizacion","title":"Tipos de RAM seg\u00fan su forma de sincronizaci\u00f3n","text":""},{"location":"hardware/componentes/memorias/#resumen","title":"Resumen","text":"<p>Actualmente se usan m\u00f3dulos DIMM de tipo DDR5 SDRAM. Veamos que significa esto:</p> <ul> <li>El m\u00f3dulo de RAM es de tipo DIMM (esto es, transmiten 32 bits por cada cara del m\u00f3dulo = 64 bits).</li> <li>La RAM utiliza el reloj para transmitir. Con cada pulso de reloj se transmiten datos (SDRAM). La \"S\" es de Sincronizada (synchronous).</li> <li>Hemos visto que hay versiones de DDR desde la 1 hasta la 5. Antes de DDR se transmit\u00eda una vez por ciclo de reloj (en la bajada). DDR aprovecha cada subida y bajada de cada ciclo de reloj para transmitir (por tanto se transmiten el doble de datos: double data rate -&gt; DDR)</li> <li>Hay RAMs de tipo est\u00e1ticas y din\u00e1micas. La RAM usada actualmente es din\u00e1mica (la \"D\" de SDRAM).</li> <li>Actualmente se est\u00e1n vendiendo RAMs DDR de versiones 4 y 5. La \u00faltima versi\u00f3n en 2023 es la 5 (DDR5 SDRAM).</li> </ul>"},{"location":"hardware/componentes/memorias/#caracteristicas","title":"Caracter\u00edsticas","text":"<p>Las caracter\u00edsticas m\u00e1s interesantes a considerar a la hora de seleccionar una memoria principal comercial son las siguientes:</p> <ul> <li>Capacidad: es su caracter\u00edstica principal, determina la cantidad de informaci\u00f3n que se puede almacenar. Se mide en Gigabytes.</li> <li>Frecuencia: se mide en Hertzios. Las memorias DDR5 actuales parten de 2400 MHz. Como en DDR se transmite dos veces por ciclo de reloj, esto en la pr\u00e1ctica (y en las webs de venta de memorias) aparecer\u00e1 como el doble: 2400 x 2 = 4800 MHz.</li> <li>Latencia: es el tiempo que se tarda en acceder a un dato.</li> </ul>"},{"location":"hardware/componentes/memorias/#referencias","title":"Referencias","text":"<ul> <li>SIMM. Obtenido de Wikipedia. \u00daltima consulta: 17/10/2023.</li> <li>\u00c1ngel Aller. Tama\u00f1o de las memorias: Historia y c\u00f3mo han evolucionado hasta ahora. Obtenido de ProfesionalReview. \u00daltima consulta: 17/10/2023.</li> <li>Nate Gentile. Todo sobre la RAM. Obtenido de: Youtube de Nate Gentile</li> <li>RIMM. Obtenido de Wikipedia</li> </ul>"},{"location":"hardware/componentes/perifericos/","title":"Perifericos","text":"<p>TODO</p>"},{"location":"hardware/componentes/peripherals/","title":"Peripherals","text":"<p>TODO</p>"},{"location":"hardware/componentes/placa-base/","title":"Placa base","text":"<p>TODO</p>"},{"location":"hardware/componentes/power-supply/","title":"Fuente de alimentaci\u00f3n","text":"<ul> <li>Art\u00edculo explicativo sobre fuentes de alimentaci\u00f3n</li> <li>Art\u00edculo de ProfesionalReview sobre como elegir una fuente de alimentaci\u00f3n</li> </ul>"},{"location":"hardware/componentes/procesador/","title":"Microprocesador","text":""},{"location":"hardware/componentes/procesador/#el-procesador","title":"El procesador","text":"<p>El procesador, microprocesador o micro es el cerebro del ordenador, se encarga de: - Coordinar y controlar la ejecuci\u00f3n de instrucciones. - Decodifica esas instrucciones. - Genera pulsos de reloj para que las instrucciones se lleven a cabo de forma s\u00edncrona. - Realiza operaciones aritm\u00e9ticas y l\u00f3gicas. - Almacena informaci\u00f3n temporal.</p>"},{"location":"hardware/componentes/procesador/#componentes-que-forman-la-cpu","title":"Componentes que forman la CPU","text":"<p>La CPU se forma por dos componentes principales: la Unidad de Control (UC) y la Unidad aritm\u00e9tico-l\u00f3gica (ALU). Adem\u00e1s, cuenta con unos buses de sistema que se encargan de transmitir informaci\u00f3n y unos registros que pueden almacenarla.</p>"},{"location":"hardware/componentes/procesador/#unidad-aritmeticologica-alu","title":"Unidad aritmeticol\u00f3gica (ALU)","text":"<p>Realiza operaciones aritm\u00e9ticas (suma, resta, multiplicaci\u00f3n...) y l\u00f3gicas (AND, OR...). Se comunica a trav\u00e9s de un bus dedicado con la Unidad de Control.</p>"},{"location":"hardware/componentes/procesador/#unidad-de-control-uc","title":"Unidad de control (UC)","text":"<p>Se ocupa de coordinar y controlar las funciones de un ordenador. Monitoriza y env\u00eda las instrucciones a cada una de las partes del ordenador.</p>"},{"location":"hardware/componentes/procesador/#juegos-de-instrucciones","title":"Juegos de instrucciones","text":"<p>TODO (CISC/RISC)</p>"},{"location":"hardware/componentes/procesador/#procesadores-comerciales","title":"Procesadores comerciales","text":""},{"location":"hardware/componentes/procesador/#caracteristicas-de-los-procesadores","title":"Caracter\u00edsticas de los procesadores","text":""},{"location":"hardware/componentes/procesador/#frecuencia-de-reloj","title":"Frecuencia de reloj","text":"<p>Se mide en GHz. Es el n\u00famero de instrucciones por segundo que el procesador es capaz de procesar. Cu\u00e1nto mayor sea esta frecuencia de reloj mejor.</p> <p>Existen dos tipos de frecuencias, una base y otra turbo (turboboost). La turbo se usar\u00eda para procesos muy exigentes (p. ej: gaming).</p>"},{"location":"hardware/componentes/procesador/#numero-de-nucleos","title":"N\u00famero de n\u00facleos","text":"<p>Hoy en d\u00eda es posible encontrar procesadores, tanto en AMD como en Intel, con muchos n\u00facleos.</p> <p>El n\u00famero de n\u00facleos permite ejecutar varias tareas de forma paralela. En esta ejecuci\u00f3n influye tambi\u00e9n como est\u00e1 implementado el software que se ejecuta, es decir, c\u00f3mo hace este software uso de los n\u00facleos del mismo.</p> <p>Originalmente los procesadores ten\u00edan un solo n\u00facleo, pero con el paso del tiempo han evolucionado hacia m\u00faltiples n\u00facleos integrados en el mismo procesador. Habitualmente los procesadores comerciales de entre 2 y 8 n\u00facleos son los m\u00e1s utilizados, aunque existen variantes con mucha mayor cantidad como el AMD Threadripper 3970X (orientado a servidores) con 32 n\u00facleos. Los equipos servidores (que necesitan m\u00e1s potencia y suelen estar encendidos siempre) pueden tener hasta 64 n\u00facleos a d\u00eda de hoy.</p> <p>Nota</p> <p>En las \u00faltimas generaciones de procesadores Intel ha aparecido recientemente el concepto de n\u00facleos de rendimiento (n\u00facleos-P) y n\u00facleos eficientes (n\u00facleos-E).</p> <p>Por ejemplo, uno de los procesadores m\u00e1s potentes del mercado ahora mismo (09/10/2023) es el i9-13900KS, el cu\u00e1l tiene 24 n\u00facleos en total: 8 n\u00facleos de lato rendimiento (P) y 16 n\u00facleos eficientes (E).</p>"},{"location":"hardware/componentes/procesador/#numero-de-hilos","title":"N\u00famero de hilos","text":"<p>Dentro de cada n\u00facleo existe el concepto de hilo (es como un n\u00facleo virtual, que no est\u00e1 fisicamente presente). Los hilos ayudan a que los n\u00facleos del procesador se aprovechen mejor. Las tareas se dividen en porciones y cada hilo se ocupa de una parte del trabajo.</p>"},{"location":"hardware/componentes/procesador/#consumo-energetico","title":"Consumo energ\u00e9tico","text":"<p>Su valor se mide en vatios (W), cu\u00e1nto m\u00e1s potente sea el procesador m\u00e1s consumir\u00e1. Es importante elegir la fuente de alimentaci\u00f3n del equipo en relaci\u00f3n al consumo del procesador y la tarjeta gr\u00e1fica.</p>"},{"location":"hardware/componentes/procesador/#memoria-cache","title":"Memoria cach\u00e9","text":"<p>El procesador y la memoria RAM se comunican continuamente. Para acelerar el trabajo, a veces el procesador guarda la informaci\u00f3n en una memoria propia (cach\u00e9). Esta memoria muy r\u00e1pida pero tambi\u00e9n muy peque\u00f1a. La cach\u00e9 tiene tres tipos: L1, L2 y L3.</p>"},{"location":"hardware/componentes/procesador/#socket","title":"Socket","text":"<p>El lugar donde se inserta el microprocesador en la placa base es el socket. Antiguamente iba soldado a la placa base, pero hace muchos a\u00f1os que en ordenadores personales no van soldados a la placa y as\u00ed se pueden cambiar facilmente.</p> <p>Nota</p> <p>El procesador, cuando va soldado en la placa base se denomina como SoC (System on a Chip). En los smartphones, por ejemplo, el procesador va integrado en la placa.</p> <p>Los tipos de socket m\u00e1s comunes a d\u00eda de hoy son:</p> <ul> <li>PGA (Pin Grid Array): los pines est\u00e1n en el procesador y el socket tiene los contactos planos. Era el utilizado habitualmente por AMD hasta el a\u00f1o pasado. La s\u00e9ptima generaci\u00f3n de procesadores AMD (AMD7000) utilizan un socket LGA.</li> <li>LGA (Land Grid Array): los pines van en la placa base en lugar del procesador. Es el utilizado habitualmente por Intel.</li> <li>BGA (Ball Grid Array): el montaje no es sobre un soporte sino sobre la propia placa. El chip va soldado a la placa base. Es muy dif\u00edcil actualizar los procesadores de este tipo debido a que son complicados de reemplazar (hay que tener en cuenta que va soldado a la placa, para reemplazarlo hay que utilizar una t\u00e9cnica denominada reballing).</li> <li>ZIF (Zero Insertion Force): mecanismo en el que el micro se inserta y retira sin necesidad de presi\u00f3n mediante una palanca cercana.</li> </ul> <p>Consulta m\u00e1s informaci\u00f3n sobre este tema en este art\u00edculo de Hardzone.</p> <p>En el \u00e1mbito comercial, Intel y AMD se disputan la lucha en la venta de procesadores.</p>"},{"location":"hardware/componentes/procesador/#amd-vs-intel-en-el-tiempo","title":"AMD vs Intel en el tiempo","text":"Tabla de las generaciones de procesadores intel y AMD. Obtenida de: Carballar.com. <p>Nota</p> <p>Para obtener informaci\u00f3n m\u00e1s detallada sobre las distintas generaciones de procesadores, consulta este enlace.</p>"},{"location":"hardware/componentes/procesador/#nomenclatura-en-procesadores-intel","title":"Nomenclatura en procesadores Intel","text":"<p>El usuario de Reddit M1ghty_boy ha creado im\u00e1genes beginner friendly sobre procesadores y tarjetas gr\u00e1ficas. A continuaci\u00f3n se muestra la que ha creado de Intel: </p>"},{"location":"hardware/componentes/procesador/#ejemplos-variados","title":"Ejemplos variados","text":"<p>A continuaci\u00f3n se muestra un Intel de 3\u00aa generaci\u00f3n para port\u00e1tiles, con dos n\u00facleos y un precio de lanzamiento en Junio de 2012 de aproximadamente 345\u20ac. </p> <p>La \u00faltima generaci\u00f3n de Intel es la n\u00famero 13, la cu\u00e1l ha aparecido por primera vez en este a\u00f1o 2023.</p> Nomenclatura de procesadores Intel explicada. Obtenida de: Intel."},{"location":"hardware/componentes/procesador/#nomenclatura-en-procesadores-amd","title":"Nomenclatura en procesadores AMD","text":"<p>A continuaci\u00f3n se muestra la nomenclatura de AMD. En la imagen se indica que las generaciones de AMD van de la 1 a la 5 (pero ya ha salido la 7 tambi\u00e9n). </p> <p>A continuaci\u00f3n, mostramos la imagen del anuncio de AMD para sus procesadores de 7\u00aa generaci\u00f3n (Ryzen 3/5/7/9 7***) que han salido a finales de 2022: </p>"},{"location":"hardware/componentes/procesador/#intel-vs-amd-sockets-y-chipsets","title":"Intel vs AMD: Sockets y chipsets","text":""},{"location":"hardware/componentes/procesador/#amd-sockets-am4-y-am5","title":"AMD: sockets AM4 y AM5","text":"<p>En AMD 7000 (s\u00e9ptima generaci\u00f3n) el socket usado en la placa base se denomina AM5 (en las anteriores su denominaci\u00f3n era AM4). El socket AM5 va a ser reutilizable, como m\u00ednimo, por la siguiente generaci\u00f3n de procesadores que salga de AMD. Si compramos una placa base con socket AM5 podremos, como m\u00ednimo, cambiar el procesador hasta 2025 (esto ha indicado la propia empresa).</p> Imagen de un procesador AM5 (izquierda) y un AM4 (derecha). Obtenida de: art\u00edculo en PCComponentes. <p>Intel, por otra parte, va a sacar un nuevo socket el a\u00f1o que viene. El socket actual para la \u00faltima generaci\u00f3n de Intel (la 13\u00aa, Raptor Lake) es el LGA1700, pero el a\u00f1o que viene ya han anunciado que se utilizar\u00e1 un socket diferente (el LGA1851) entre 2024 y 2026.</p>"},{"location":"hardware/componentes/procesador/#chipsets-para-el-socket-am5","title":"Chipsets para el socket AM5","text":"<p>En AM5 tenemos 5 gamas de chipsets. A continuaci\u00f3n se resumen brevemente:</p>"},{"location":"hardware/componentes/procesador/#gama-baja","title":"Gama baja","text":"<ul> <li>A620: soporta PCIe 4.0 x16, SSD NVMe, DDR5 y AMD Expo (perfiles de overclock para la RAM). No dispondr\u00e1 de overclock para el procesador. No soporta USB 3.2 gen2.</li> </ul>"},{"location":"hardware/componentes/procesador/#gama-media","title":"Gama media","text":"<ul> <li>B650: soporte para PCIe4.0 x16 o 2 x8. Viene hasta con un USB 3.2 Gen2. Algunas placas ser\u00e1n compatibles con PCIe 5.0.</li> <li>B650E: similar a la anterior, ahora soportando GPUs de quinta generaci\u00f3n (PCIe 5.0) y mejores fases VRM.</li> </ul>"},{"location":"hardware/componentes/procesador/#gama-alta","title":"Gama alta","text":"<ul> <li>X670: a diferencia de los chipsets 650, este incorpora una ranura PCIe 5.0 M.2.</li> <li>X670E: es como el anterior, pero adem\u00e1s es compatible con GPUs (tarjetas gr\u00e1ficas) PCIe 5.0.</li> </ul>"},{"location":"hardware/componentes/procesador/#intel-socket-lga1700","title":"Intel: socket LGA1700","text":"<p>La \u00faltima generaci\u00f3n de Intel (13) utiliza un socket LGA1700. Este socket soporta la generaci\u00f3n 13 y soportar\u00e1 la 14 (saldr\u00e1 a finales de este a\u00f1o 2023 con). En la generaci\u00f3n se espera una mejora de rendimiento muy peque\u00f1a.</p>"},{"location":"hardware/componentes/procesador/#chipsets-para-lga1700","title":"Chipsets para LGA1700","text":"<p>Chipsets presentados en 2021:</p> <ul> <li>H610</li> <li>B660</li> <li>H670</li> <li>Z690</li> </ul> <p>Nuevos chipsets (finales de 2022):</p> <ul> <li>B760</li> <li>H770</li> <li>Z790</li> </ul> <p>Algunas novedades de los nuevos chipsets son:</p> <ul> <li>PCI-Express 5.0 con 16 ra\u00edles, adem\u00e1s de PCIe 4.0 y 3.0.</li> <li>Soporte para DDR5.</li> <li>Wifi 6E integrado.</li> <li>USB 3.2 Gen 2 ampliado.</li> <li>Menos puertos SATA priorizando PCIe.</li> <li>Distinta compatibilidad de procesadores.</li> </ul> <p>Nota</p> <p>Estos son los chipsets compatibles mientras se escribe este documento, a fecha del 03/10/2023.</p>"},{"location":"hardware/componentes/procesador/#referencias","title":"Referencias:","text":"<ul> <li>Alberto Cruz. Qu\u00e9 es un procesador, caracter\u00edsticas y tipos. PCComponentes. Obtenido de: art\u00edculo en PCComponentes. \u00daltima consulta el 09/10/2023.</li> <li>\u00c1ngel Aller. Socket AM5 vs AM4, la comparativa AMD ideal para comprar CPU. Obtenida de: art\u00edculo en PCComponentes el 3 de Octubre de 2023.</li> <li>LGA1700, el socket Intel que soporta la 13\u00aa y 14\u00aa generaci\u00f3n Core. Obtenida de: art\u00edculo en PCComponentes el 3 de Octubre de 2023.</li> <li>Gu\u00eda placas y chipsets AMD Ryzen 7000. Obtenido de: Wikiversus</li> </ul>"},{"location":"hardware/componentes/storage/","title":"Almacenamiento","text":"<p>Puedes consultar una explicaci\u00f3n sencilla en este art\u00edculo de NITRO-PC</p>"},{"location":"hardware/componentes/storage/#comparativas-entre-discos","title":"Comparativas entre discos","text":"<p>El almacenamiento en SSDs (tanto SATA 2.5 como PCI-E) se ha abaratado much\u00edsimo, hasta el punto de que incluso en soluciones NAS puede ser \u00fatil tenerlos. Actualmente, se puede si compramos un disco duro mec\u00e1nico y un SSD del mismo precio, el disco duro mec\u00e1nico tendr\u00e1 por ese precio entre 3 y 5 veces el tama\u00f1o del SSD.</p> <p>Un SSD SATA es aproximadamente el doble de r\u00e1pido que un HDD. Un SSD M.2 NVMe es mucho m\u00e1s r\u00e1pido que los dos.</p> <p>Respecto al tama\u00f1o m\u00e1ximo, a d\u00eda de hoy (30/10/2023) el SSD m\u00e1s grande que se vende comercialmente es aproximadamente de 8 TB, mientras que el disco duro m\u00e1s grande vendido comercialmente es, tanto en las marcas Seagate como WD) de aproximadamente 22 GB.</p>"},{"location":"hardware/componentes/storage/#marcas","title":"Marcas","text":"<p>Algunas marcas de las marcas m\u00e1s comunes de discos duros son:</p> <ul> <li>Seagate<ul> <li>Gama Barracuda.</li> <li>Gama Ironwolf y Ironwolf Pro: discos para servidores, mayor velocidad y durabilidad.</li> <li>Gama Exos: orientados a servidores de CPDs y NAS con enorme cantidad de discos. Es la gama m\u00e1s alta de todas, aunque en precio no difiera demasiado con Ironwolf.</li> <li>Gama Skyhawk: orientados a videovigilancia (muchas escrituras de forma continuada).</li> </ul> </li> <li>Western Digital (WD)<ul> <li>WD Blue: uso diario.</li> <li>WD Green: m\u00e1s TB a bajo precio.</li> <li>WD Red: servidores/NAS sencillos.</li> <li>WD Gold y WD Ultrastar: servidores/NAS en entornos empresariales, CPDs, etc.</li> <li>WD Purple: videovigilancia.</li> <li>WD Black: mejor rendimiento.</li> </ul> </li> <li>Toshiba</li> </ul>"},{"location":"hardware/componentes/storage/#interfaces-de-conexion","title":"Interfaces de conexi\u00f3n","text":"<ul> <li>IDE (en desuso)</li> <li>SCSI (servidores, en desuso)</li> <li>SATA III (actual)</li> <li>SAS (utilizada en servidores, m\u00e1s r\u00e1pida que SATA)</li> <li>NVMe (la m\u00e1s r\u00e1pida existente)</li> </ul>"},{"location":"hardware/componentes/storage/#referencias","title":"Referencias:","text":"<ul> <li>Roberto Sole. WD Red, Black, Blue\u2026 \u00bfen qu\u00e9 se diferencian estos discos duros?. Obtenido de art\u00edculo en Hardzone</li> </ul>"},{"location":"hardware/componentes/torre/","title":"Torres y placas base","text":""},{"location":"hardware/componentes/torre/#la-placa-base","title":"La placa base","text":"<p>La placa base (motherboard) es el componente principal del ordenador. Es una tarjeta de circuito impreso a la que se conectan todos los componentes (de forma l\u00f3gica, estos componentes env\u00edan mensajes que circulan a trav\u00e9s de los circuitos de la placa base y as\u00ed se comunican entre ellos).</p> Placa base con el chipset antiguo (northbridge y southbridge) Dibujo de una Placa base con chipset actual. Obtenido de: PowerCert Animated Videos <p>En una placa base existen una serie de ranuras (slots) donde se pueden introducir componentes:</p>"},{"location":"hardware/componentes/torre/#zocalo-del-procesador-socket-de-la-cpu","title":"Z\u00f3calo del procesador (socket de la CPU)","text":"<p>Es donde se introduce el procesador. Se corresponde en la placa con el recuadro grande de color negro en la parte superior.</p>"},{"location":"hardware/componentes/torre/#slots-de-expansion","title":"Slots de expansi\u00f3n","text":"<p>En la parte inferior izquierda se disponen una serie de ranuras negras y rojas donde introducir tarjetas de expansi\u00f3n (tarjetas de red, tarjetas gr\u00e1ficas, tarjetas de sonido, etc.).</p> <p>Actualmente, estas ranuras suelen ser siempre PCI-Express (PCI-E). Las m\u00e1s grandes se utilizan para la tarjeta gr\u00e1fica, mientras que las peque\u00f1as se usan para cualquier otro tipo (p. ej: una tarjeta de red o una tarjeta de sonido).</p> <p>Nota</p> <p>Las placas base suelen tener ya integrada una tarjeta de red por cable (para poder conectarse a internet) y/o inal\u00e1mbrica (Wifi). Tambi\u00e9n suelen incluir la tarjeta de sonido sin necesidad de a\u00f1adirla nosotros a un slot de expansi\u00f3n.</p> <p>: Entonces, \u00bfpor qu\u00e9 hablamos de a\u00f1adir esas tarjetas ah\u00ed?</p> <p>: Pues es \u00fatil si queremos tener un sonido o conexi\u00f3n \"m\u00e1s especializado\", mejor que el que nos da la placa base de serie.</p>"},{"location":"hardware/componentes/torre/#slots-de-memoria-ram","title":"Slots de memoria RAM","text":"<p>Son las cuatro ranuras que se pueden ver en la parte superior derecha de la placa del ejemplo.</p>"},{"location":"hardware/componentes/torre/#conectores-sata","title":"Conectores SATA","text":"<p>Son los conectores hembra rojos que se ven en la parte inferior derecha de la placa. Sirven para conectar habitualmente discos duros r\u00edgidos o SSD y unidades de CD/DVD (estas \u00faltimas empiezan ya a estar en desuso).</p> Imagen obtenida de: Wikipedia Imagen obtenida de art\u00edculo en Amazon Imagen obtenida de un magn\u00edfico v\u00eddeo de PowerCert en Youtube"},{"location":"hardware/componentes/torre/#interfaces-de-entradasalida","title":"Interfaces de entrada/salida","text":"<p>Algunos de los principales son los siguientes:</p> <ul> <li>Puertos USB (tipo A): es la interfaz de E/S m\u00e1s com\u00fan (Universal Serial Bus). Se utiliza para gran cantidad de perif\u00e9ricos y adem\u00e1s suministra una cierta cantidad de energ\u00eda el\u00e9ctrica a los mismos.</li> <li>Puertos USB (tipo C): es el conector USB m\u00e1s moderno. No tiene posici\u00f3n err\u00f3nea (no importa si lo inviertes, siempre conecta correctamente) y adem\u00e1s es m\u00e1s delgado que el conector USB que conocemos (tipo A). Permite conectar casi cualquier tipo de dispositivo (incluyendo pantallas). En sus est\u00e1ndares 3.2 y 4.0 es posible cargar m\u00f3viles y port\u00e1tiles.</li> <li>Adaptador de v\u00eddeo: las placas base que tienen tarjeta gr\u00e1fica integrada suministran un adaptador para pantalla. Las tarjetas gr\u00e1ficas integradas son buenas para aplicaciones ligeras, en caso de ejecutar aplicaciones que necesitan fuerte procesamiento gr\u00e1fico (como en el caso de videojuegos) es necesario disponer de una tarjeta gr\u00e1fica dedicada que conectar\u00edamos en el puerto PCI-Express de la placa base. En la imagen del miniPC podemos ver un puerto de v\u00eddeo (que saldr\u00eda de la tarjeta gr\u00e1fica o la placa base) de tipo DisplayPort.</li> <li>Tarjeta de red: actualmente suelen venir integradas en la placa (pero se puede comprar una m\u00e1s potente y ponerla en uno de los slots de expansi\u00f3n PCI-E). La interfaz de salida ser\u00e1 el conector de red RJ-45 (se puede ver cu\u00e1l en la imagen).</li> <li>Tarjeta de sonido: actualmente suelen venir integradas en placa (se pueden tambi\u00e9n comprar y poner mejores tarjetas de sonido en uno de los slots de expansi\u00f3n). La salida son unos conectores circulares (jack 3.5mm).</li> </ul> Imagen de los puertos de un miniPC Minisforum b550 pro. Obtenida de: art\u00edculo en liliputing"},{"location":"hardware/componentes/torre/#factores-de-forma","title":"Factores de forma","text":"<p>Existen diferentes tama\u00f1os de torres disponibles para ordenadores de sobremesa. El tama\u00f1o de la torre tiene mucho que ver con la placa base que se desee instalar en ella. A continuaci\u00f3n se muestran los tipos de torres existentes y los factores de forma (form factor) de las placas base compatibles con ella. A continuaci\u00f3n se muestran los distintos tipos de torre y placas base compatibles de m\u00e1s peque\u00f1a a m\u00e1s grande:</p>"},{"location":"hardware/componentes/torre/#factores-de-forma-y-placas-base-mas-comunes","title":"Factores de forma y placas base m\u00e1s comunes","text":"Imagen obtenida de: Wikipedia"},{"location":"hardware/componentes/torre/#minitorre-placas-mini-itx-y-micro-atx","title":"Minitorre (placas mini ITX y micro ATX)","text":"<p>Las torres en formato \u201cminitorre\u201d tienen el espacio adaptado para placas base desarrolladas para el est\u00e1ndar como micro ATX (244x244 mm) y mini ITX (170x170 mm).</p> <p>Las placas micro ATX son compatibles con casi todas las cajas del mercado de tipo semitorre (es decir, ATX). Si se dispone de una semitorre habr\u00e1 espacio de sobra para todos los componentes.</p> <p>En el caso de las mini ITX (o simplemente ITX) son las m\u00e1s peque\u00f1as para PCs de escritorio y suelen tambi\u00e9n ser compatibles con otras cajas m\u00e1s grandes. Hoy en d\u00eda se puede montar un ordenador con placas ITX o micro ATX que sea tope de gama.</p>"},{"location":"hardware/componentes/torre/#semitorre-placas-atx","title":"Semitorre (placas ATX)","text":"<p>Son de tama\u00f1o est\u00e1ndar y la placa base que m\u00e1s se adapta a ellas es la de tipo ATX (305x244mm). Son las m\u00e1s habituales (pr\u00e1cticamente el 90% de las cajas son compatibles con ellas). Estas placas base suelen tener 4 ranuras DIMM y espacio para dos tarjetas gr\u00e1ficas.</p> <p>En una semitorre tambi\u00e9n puede ser habitual incluir placas micro ATX.</p>"},{"location":"hardware/componentes/torre/#supertorre-o-torre-placas-e-atx","title":"Supertorre o torre (placas E-ATX)","text":"<p>Estas torres tienen m\u00e1s espacio que las anteriores y est\u00e1n pensadas para las placas base de tipo E-ATX. Estas placas son bastante grandes (sin llegar al nivel de las placas base de servidores). Las medidas son de 300x330mm. Se suelen utilizar para los chipsets x299 y x399 y disponen de espacio para 8 ranuras DIMM y muchas tarjetas de expansi\u00f3n.</p> Imagen obtenida de: art\u00edculo en Hardzone"},{"location":"hardware/componentes/torre/#otros-factores-de-forma","title":"Otros factores de forma","text":""},{"location":"hardware/componentes/torre/#desktop-y-small-form-factor-sff","title":"Desktop y Small Form Factor (SFF)","text":"<p>Dise\u00f1ados para encajar en un monitor. Se usan con placas micro ATX e ITX (igual que las minitorres) pero no dejan espacio para gr\u00e1fica dedicada. Se colocan debajo del monitor.</p>"},{"location":"hardware/componentes/torre/#ultra-small-form-factor-usff","title":"Ultra Small Form Factor (USFF)","text":"<p>Suelen usar discos duros y memorias de port\u00e1tiles (m\u00e1s peque\u00f1os). Solo tienen dos slots PCI, dejan poco flujo de aire (hay poco espacio) y por tanto suelen calentarse m\u00e1s y es m\u00e1s dif\u00edcil cambiar componentes.</p>"},{"location":"hardware/componentes/torre/#micromini-pcs","title":"Micro/Mini PCs","text":"<p>Son ordenadores que usan alguno de los factores de forma anteriores y se integran en pantallas o televisores.</p> Im\u00e1genes obtenidas de: Stonerefurb. <p></p>"},{"location":"hardware/componentes/torre/#tipos-de-placa-base-antiguos","title":"Tipos de placa base antiguos","text":"<p>Aunque en este punto se est\u00e1n relacionando los tipos de torre con formatos actuales de placas base (seg\u00fan el tama\u00f1o de la placa), en este punto se podr\u00edan nombrar tipos de placa base que se han ido quedando obsoletos:</p> <ul> <li>Tecnolog\u00eda extendida (Extended Technology) o TX: creado por IBM en 1983 para el primer ordenador personal. Las dimensiones eran de 216x279 mm.</li> <li>Tecnolog\u00eda avanzada (Advanced Technology) o AT: formato introducido en IBM en 1984 de 350x305 mm.</li> <li>Baby-AT: ha sido est\u00e1ndar durante muchos a\u00f1os, el tama\u00f1o es de 216x330mm y fueron habituales desde los ordenadores 286 hasta los primeros pentium.</li> </ul> Factor de forma TX Factor de forma Baby AT"},{"location":"hardware/componentes/torre/#eleccion-de-torre-y-placa-base","title":"Elecci\u00f3n de torre y placa base","text":"<p>Para elegir uno u otro tama\u00f1o de torre y placa base debemos considerar diversos aspectos, entre los que se encuentran, de forma b\u00e1sica, el espacio disponible que tenemos para poner el ordenador (o si necesitamos transportarlo habitualmente, con lo que quiz\u00e1s nos interesar\u00eda un factor de forma m\u00e1s peque\u00f1o) donde queramos ponerlo as\u00ed como la refrigeraci\u00f3n que se necesita (cu\u00e1nto m\u00e1s peque\u00f1os y potentes m\u00e1s dif\u00edciles son de refrigerar).</p> <p>Adem\u00e1s de esto debemos considerar lo siguiente:</p>"},{"location":"hardware/componentes/torre/#procesador-que-queremos-comprar","title":"Procesador que queremos comprar","text":"<p>Las placas base tiene un \"socket\" o ranura donde colocar el procesador. Este socket solo es compatible con algunas series de procesadores. Debemos consultar si el socket de la placa base es compatible con el procesador.</p> Imagen obtenida de: art\u00edculo en Makeuseof <p>Incluso aunque los sockets sean compatibles, hay casos en que el procesador y el chipset de la placa base no lo son.</p>"},{"location":"hardware/componentes/torre/#el-soporte-para-memoria-ram","title":"El soporte para memoria RAM","text":"<ul> <li>Tipo de RAM: las \u00faltimas versiones de las memorias van desde DDR (1) hasta DDR5. Si decides comprar una RAM de tipo DDR5 (ser\u00eda lo \u00f3ptimo si est\u00e1s comprando nuevo todo el ordenador) tendr\u00e1s que asegurarte de que la placa base la soporta.</li> <li>N\u00famero de slots: las placas mini-ITX van a tener siempre solamente dos ranuras, mientras que las ATX tienen 4 y las E-ATX suelen tener 8.</li> <li>M\u00e1xima capacidad de RAM soportada: especialmente si se desea ampliar la RAM en un futuro.</li> <li>M\u00e1xima velocidad (en MHz) soportada: las RAMs tienen distintas velocidades de reloj y capacidades. Si compras una RAM con 3200 Mhz de velocidad de reloj, pero las especificaciones de la placa base indican que soporta solo 2666 Mhz, estar\u00e1s comprando una RAM m\u00e1s cara de lo que necesitas para ese equipo.</li> </ul> <p>Hay m\u00e1s cosas a considerar de la RAM que veremos en el apartado de memorias. Respecto a la compatibilidad de la RAM con la placa base, estas ser\u00edan las m\u00e1s importantes.</p>"},{"location":"hardware/componentes/torre/#ranuras-pci-express-sata-y-otras","title":"Ranuras PCI-Express, SATA y otras","text":"<ul> <li>Comprobar que la placa dispone de las ranuras PCI-Express necesarias y qu\u00e9 versi\u00f3n de PCI-Express (4.0 o 5.0).</li> <li>Comprobar si dispone de ranura M.2 y, en caso de existir, si se conecta por SATA o por PCI-Express (NVMe). Esto \u00faltimo ser\u00eda lo m\u00e1s r\u00e1pido.</li> <li>En una placa ITX no hay espacio para m\u00e1s de una tarjeta gr\u00e1fica, pero a partir de micro-ATX ya es posible hacer SLI y Crossfire con dos tarjetas gr\u00e1ficas (si se desea mucha potencia, no es habitual).</li> </ul>"},{"location":"hardware/componentes/torre/#chipset","title":"Chipset","text":"<p>Existen chipsets espec\u00edficos de Intel y AMD para gamas baja, media y alta en distintas generaciones de procesadores. Si quieres un ordenador gaming de \u00faltima generaci\u00f3n, quiz\u00e1 te compense una placa base con un chipset de gama alta. Si solo quieres el ordenador, en cambio, para tareas de ofim\u00e1tica y ver el correo, es suficiente con una placa base con un chipset de gama baja.</p> <p>Nota</p> <p>Puedes identificar (a grandes rasgos) si un chipset es de gama baja, media o alta seg\u00fan su n\u00famero y letra (cu\u00e1nto m\u00e1s altos sean ambos m\u00e1s alta es la gama del chipset).</p> <p>Por ejemplo, en AM4 de 3\u00aa, 4\u00aa y 5\u00aa generaci\u00f3n:</p> <ul> <li>Chipset A520 -&gt; gama baja.</li> <li>Chipset B550 -&gt; gama media.</li> <li>Chipset X570 -&gt; gama alta.</li> </ul> <p>En s\u00e9ptima generaci\u00f3n AM5:</p> <ul> <li>B650 -&gt; gama media.</li> <li>X670 -&gt; gama alta.</li> </ul> <p>Etc.</p>"},{"location":"hardware/componentes/torre/#referencias","title":"Referencias","text":"<ul> <li>Placa base. Wikipedia. Obtenido de: Wikipedia . \u00daltima visita: el 3 de octubre de 2020.</li> <li>PowerCert Animated Videos. V\u00eddeo \u201cMotherboard\u201d. Visualizado en Youtube</li> <li>Castillo, Jos\u00e9 Antonio. Placas base ITX y ATX. Obtenido de: Profesional Review</li> <li>Miguel \u00c1ngel Navas. Componentes de una placa base. Obtenido de: Profesional Review</li> <li>Computer Cases and The Different Types of Form Factors. stonerrefurb. Obtenido de: Stonerrefurb</li> </ul>"},{"location":"sistemas%20operativos/arranque/","title":"Arranque","text":"<p>Al encender un ordenador arranca la BIOS y, despu\u00e9s de esta, arranca el sistema operativo (seg\u00fan el orden de arranque establecido en la BIOS).</p>"},{"location":"sistemas%20operativos/arranque/#arranque-clasico","title":"Arranque cl\u00e1sico","text":""},{"location":"sistemas%20operativos/arranque/#arranque-clasico-legacy-mbr-master-boot-record","title":"Arranque cl\u00e1sico: Legacy + MBR (Master Boot Record)","text":"<p>El nombre del particionamiento es MBR porque hay un sector en este que se denomina as\u00ed (MBR). Este se\u00f1ala exactamente que partici\u00f3n es la que lleva un sistema operativo.</p> <ol> <li>La BIOS indica que se debe arrancar desde X disco.</li> <li>Se mira en el MBR de ese disco, el cu\u00e1l se\u00f1ala la partici\u00f3n que tiene que arrancar (la que lleva el arranque del sistema operativo).</li> <li>Esta partici\u00f3n lleva un trozo denominado sector de arranque (donde se marca como tal la partici\u00f3n y qu\u00e9 tiene que hacer para arrancar el SO).</li> </ol>"},{"location":"sistemas%20operativos/arranque/#limitacion-maximo-de-4-particiones","title":"Limitaci\u00f3n: m\u00e1ximo de 4 particiones","text":"<p>Esto es, solo podemos trocear el disco duro en cuatro partes.</p> <p>Existen dos tipos de particiones: - Primaria: podemos instalar tanto datos como el sector de arranque. - Extendida: solo podemos dividirla en algo llamado \"unidades l\u00f3gicas\". En estas unidades l\u00f3gicas podemos tener datos (pero no el arranque).</p> <p>Una partici\u00f3n extendida es coger una de las cuatro disponibles y convertirla en extendida. En una partici\u00f3n extendida no se pueden grabar ficheros, instalar SOs, hacer particiones de arranque, etc. Lo \u00fanico que se puede hacer en una partici\u00f3n extendida es crear unidades l\u00f3gicas.</p> <p>!!! Nota:     Podemos partir un disco en 3 particiones primarias y una extendida. La extendida tendr\u00e1 a su vez m\u00faltiples unidades l\u00f3gicas.</p> <pre><code>**En las unidades l\u00f3gicas solo se pueden guardar datos y en la primaria datos y arranque**. En una partici\u00f3n primaria podemos instalar sistemas operativos.\n</code></pre> <p>Si necesitas m\u00e1s de \"4 trozos\" podemos hacer 3 primarias y una extendida. Dentro de esta \u00faltima creamos las unidades l\u00f3gicas que necesitemos.</p> <p>Es posible instalar m\u00faltiples sistemas operativos en particiones extendidas, pero tendr\u00edamos que instalar el arranque en una partici\u00f3n primaria (si borramos esa partici\u00f3n sin querer no podr\u00edamos arrancarlo).</p>"},{"location":"sistemas%20operativos/arranque/#limitacion-maxima-capacidad-de-2tb","title":"Limitaci\u00f3n: m\u00e1xima capacidad de 2TB","text":"<p>El m\u00e1ximo tama\u00f1o de partici\u00f3n es de 2TB.</p>"},{"location":"sistemas%20operativos/arranque/#uefi-gpt","title":"UEFI + GPT","text":"<p>GPT es un formato para particionar discos duros y, a diferencia de MBR, tiene 120 particiones primarias por disco con un m\u00e1ximo de 8 ZB.</p> <p>!!! Nota:     Los discos NVMe no pueden particionarse en MBR, solamente en GPT. Por tanto, necesitas el modo UEFI.</p> <p>En UEFI es necesario tener una partici\u00f3n inicial con todos los m\u00f3dulos de arranque de todos los sistemas operativos del resto de particiones (gracias a esto es posible listar todos los sistemas operativos que hay en todos los discos duros).</p> <p>Tambi\u00e9n, en UEFI disponemos del Fast Boot y el Secure Boot: - Secure boot: no se puede arrancar un sistema operativo en que se han hecho modificaciones. El secure boot firma digitalmente la partici\u00f3n. - Fast boot: se salta todo el arranque de la BIOS y va directamente al sistema operativo.</p>"},{"location":"sistemas%20operativos/arranque/#legacy-vs-uefi","title":"Legacy vs UEFI","text":"<p>No es posible arrancar particiones GPT si tienes la BIOS en modo Legacy. En el modo UEFI ahora se puede arrancar desde discos duros particionados en GPT.</p>"},{"location":"sistemas%20operativos/intro/","title":"Intro","text":"<p>Tres puntos: - El sistema operativo NO es imprescindible. Las consolas de cartuchos antiguas no tienen sistema operativo, se les mete un cartucho y lo \u00fanico que hacen es ejecutar lo que hay metido dentro. Se apagan directamente en el bot\u00f3n. - Proporcionar interfaz (IU o GUI). - Gestionar almacenamiento. - Un SO proporciona multitarea.</p> <p>El sistema operativo, sobre un proceso, decide cu\u00e1les se ejecutan, cuando, qu\u00e9 acceso tienen al hardware, qu\u00e9 pueden hacer estos procesos con el hardware y, por tanto, el SO tiene que proporcionar seguridad.</p> <p>Adem\u00e1s, nos tiene que dar interfaz al usuario: gr\u00e1fica (GUI) o texto.</p> <p>Gestionar el almacenamiento: los procesos usan el almacenamiento, pero es un poco diferente. Los sistemas operativos son compatibles con algunos sistemas de almacenamiento y no con otros. Algunos sistemas de almacenamiento son: - EXT4: incompatible con Windows (salvo app externa). No podemos arrancar con esto. - NTFS - exFAT</p>"},{"location":"sistemas%20operativos/intro/#gestion-de-almacenamiento","title":"Gesti\u00f3n de almacenamiento","text":"<p>Windows: - FAT32 - NTFS - exFAT</p> <p>Linux - ext4: buen sistema de ficheros sin ninguna limitaci\u00f3n notable.</p>"},{"location":"sistemas%20operativos/intro/#ntfs","title":"NTFS","text":"<p>Microsoft sac\u00f3 NTFS con licencia propietaria. Para tenerla debes pagar y tener autorizaci\u00f3n de Microsoft.</p> <p>A d\u00eda de hoy cualquier cosa es practicamente siempre compatible con NTFS sin tener por qu\u00e9 pagarle royalities a Microsoft. A\u00fan as\u00ed, a d\u00eda de hoy a\u00fan te puedes encontrar cosas no compatibles</p>"},{"location":"sistemas%20operativos/intro/#alternativa-a-ntfs-exfat","title":"Alternativa a NTFS: exFAT","text":"<p>Sin ninguna limitaci\u00f3n pr\u00e1ctica, el \u00fanico problema y por qu\u00e9 no est\u00e1 m\u00e1s implementado es porque est\u00e1 registrado por Microsoft para sacar algo compatible con exFAT. A pesar de ser un sistema de ficheros m\u00e1s sencillo que NTFS y deber\u00eda llevarse mejor con sistemas de bajos recursos es m\u00e1s dif\u00edcil encontrar dispositivos compatibles con exFAT que con NTFS.</p>"},{"location":"sistemas%20operativos/intro/#fat32","title":"FAT32","text":"<p>Completamente obsoleto, viene de Windows 95.</p> <p>Nota</p> <p>Para hacernos una idea, una de las grandes novedades de FAT32 es que permite escribir nombres de m\u00e1s de 8 caracteres y sin espacios. Se sigue usando porque es el \u00fanico de Windows no registrado por ellos y por tanto lo puede implementar cualquiera.</p> <p>FAT32 est\u00e1 en absoluto retroceso, ya que no reconoce discos de m\u00e1s de 2TiBs y no se pueden grabar ficheros de m\u00e1s de 4GiB.</p>"},{"location":"sistemas%20operativos/intro/#resumen","title":"Resumen","text":"<p>En general, primero puedes usar NTFS, sino exFAT y sino FAT32 (si no hay m\u00e1s remedio).</p> <ul> <li>Windows: NTFS</li> <li>Linux: EXT4</li> <li>Partici\u00f3n en Windows y Linux: NTFS (Linux entiende bien hoy en d\u00eda una NTFS pero Windows es un poco m\u00e1s complicado).</li> <li>Pendrive: NTFS o exFAT. En exFAT va a funcionar algo m\u00e1s r\u00e1pido (funciona mejor con cosas m\u00e1s sencillas, pero puede tener algo de incompatibilidad con alguna distro de Linux).</li> <li>Tarjeta SD m\u00f3vil/consola: en general suele ser bueno ponerle exFAT y solo si no hay m\u00e1s remedio FAT32.</li> <li>TV enchufada a disco duro: moderna (NTFS bien), muy vieja (FAT32).</li> </ul>"},{"location":"virtualizacion-devops/ansible/","title":"TODO","text":""},{"location":"virtualizacion-devops/docker/","title":"TODO","text":""},{"location":"virtualizacion-devops/intro/","title":"Introducci\u00f3n","text":""},{"location":"virtualizacion-devops/intro/#virtualizacion-y-contenedores","title":"Virtualizaci\u00f3n y contenedores","text":"<p>Existen herramientas que permiten, dentro de tu sistema Windows o Linux, virtualizar otro ordenador. Esto es, dentro de tu ordenador tener \"varios ordenadores\" en entornos totalmente aislados.  Estos ordenadores aislados se denominan m\u00e1quinas virtuales y el proceso se denomina virtualizaci\u00f3n. Algunas herramientas de virtualizaci\u00f3n son las siguientes:</p> <ul> <li>VirtualBox (C\u00f3digo abierto)</li> <li>VMWare</li> <li>Hyper-V (viene con las versiones profesionales de Windows). </li> </ul>"},{"location":"virtualizacion-devops/vagrant/","title":"TODO","text":""},{"location":"virtualizacion-devops/virtualbox/","title":"Virtualbox","text":""},{"location":"virtualizacion-devops/virtualbox/#donde-se-almacenan-las-maquinas-cambiando-la-ruta","title":"\u00bfD\u00f3nde se almacenan las m\u00e1quinas? Cambiando la ruta","text":"<p>El primer paso despu\u00e9s de instalar Virtualbox es elegir donde quieres que se almacenen las m\u00e1quinas virtuales.</p> <p>Note</p> <p>La ruta por defecto donde se almacenan las m\u00e1quinas es en: CARPETA_USUARIO/Virtualbox VMs.</p> <ul> <li>Windows: C:/Usuarios/mnceleiro/Virtualbox VMs (para mi usuario mnceleiro)</li> <li>GNU/Linux: /home/mnceleiro/Virtualbox VMs (para mi usuario mnceleiro)</li> </ul> <p>En mi caso, tengo un segundo disco duro de 2 TB, por lo que elijo este como sitio para almacenar todas las m\u00e1quinas.</p> Paso I: archivo \u2192 preferencias Paso II: seleccionamos la carpeta que queramos <p>Si no dispones de un disco principal (C: en Windows) enorme, es mejor que o pongas en un disco o partici\u00f3n secundaria. Eso s\u00ed, ten en cuenta que en un SSD las m\u00e1quinas ir\u00e1n mejor que si est\u00e1n en un HDD. Otra cosa que se puede hacer es poner la ruta de las m\u00e1quinas en el HDD (m\u00e1s grande) y luego, individualmente al crear las m\u00e1quinas, poner en el SSD alguna que uses con mucha frecuencia.</p>"},{"location":"virtualizacion-devops/virtualbox/#creando-mi-primera-maquina-virtual","title":"Creando mi primera m\u00e1quina virtual","text":""},{"location":"virtualizacion-devops/virtualbox/#descarga-de-isos","title":"Descarga de ISOs","text":"<p>Vamos a usar como ejemplo los sistemas operativos Windows 11 y Ubuntu 22.04.</p>"},{"location":"virtualizacion-devops/virtualbox/#windows-11","title":"Windows 11","text":"<p>Puedes descargar la ISO de W11 en la p\u00e1gina oficial de Microsoft. </p> <p>Note</p> <p>Recuerda elegir el idioma</p>"},{"location":"virtualizacion-devops/virtualbox/#ubuntu-2204","title":"Ubuntu 22.04","text":"<p>Descarga Ubuntu 22.04 (hay versiones m\u00e1s modernas, pero esta es la \u00faltima que ha salido de soporte de larga duraci\u00f3n a d\u00eda de hoy). Para descargar la ISO lo hacemos desde su p\u00e1gina oficial (pulsa aqu\u00ed).</p>"},{"location":"virtualizacion-devops/virtualbox/#creacion-de-maquinas","title":"Creaci\u00f3n de m\u00e1quinas","text":"1. Pulsamos en el bot\u00f3n \"Nueva\" (o m\u00e1quina \u2192 Nueva) 2. Elegimos sistema operativo y nombre de la m\u00e1quina (para m\u00e1quina con Windows 11) Ejemplo para Windows 11 2. Elegimos sistema operativo y nombre de la m\u00e1quina (para m\u00e1quina Ubuntu) Ejemplo para Ubuntu 22.04 <p>En este caso, he elegido en el desplegable Windows 11 como sistema y en el nombre he puesto Windows 11 - Plantilla. Puedes elegir una imagen .ISO de Windows 11 en este mismo paso o hacerlo despu\u00e9s manualmente.</p> <p>Instalaci\u00f3n desatendida (unattended installation)</p> <p>Marca la casilla de \"saltarse la instalaci\u00f3n desatendida\". La instalaci\u00f3n desatendida de Virtualbox es bastante nueva y en la mayor\u00eda de sistemas no funciona a\u00fan como debe.</p> 3. Asignamos recursos a la m\u00e1quina (RAM y procesadores) Asigna seg\u00fan los recursos de los que dispongas <p>Ten en cuenta que Windows 11 tiene como requisitos m\u00ednimos 4 GB de RAM. Ubuntu 22.04 tiene 4 GB de RAM como requisitos \"recomendados\".</p> <ul> <li>Si tienes un ordenador con m\u00e1s de 8 GB de RAM y m\u00e1s de 2 procesadores no tendr\u00e1s problema.</li> <li>En caso de tener un ordenador con solo 2 procesadores (dual-core) as\u00edgnale a la m\u00e1quina solo 1. Si tienes m\u00e1s puedes ponerle 2 (no te preocupes, esto puede cambiarse m\u00e1s adelante sin ning\u00fan tipo de problema)</li> <li>Mi consejo si dispones de 8GB de RAM o menos es que lo hagas con una ISO de W10 en lugar de Windows 11 y le pongas solo 2 GB.</li> </ul> 4. Asignamos tama\u00f1o del disco duro No asignes menos de 64 GB si conectas W11 a internet <p>El disco duro no es m\u00e1s que un archivo normal con extensi\u00f3n .vdi. Cualquier cosa que hagas en Virtualbox solo usar\u00e1 ese archivo. Hagas lo que hagas ah\u00ed, tu sistema operativo base no corre peligro!</p> <p>A nivel de disco, puedes encontrar diversas recomendaciones diferentes. Si tienes espacio suficiente, mi consejo es que uses unos 40 GB en Ubuntu y unos 70-80 en Windows. Si en Windows te aseguras de desactivar las actualizaciones inmediatamente o no conectas la m\u00e1quina a internet seguramente puedas reducir este tama\u00f1o consierablemente (quiz\u00e1s hasta unos 35-40 GB si lo necesitas).</p> <p>Note</p> <p>El checkbox de \"Pre-allocate Full Size\" (si se marca) hace que el espacio que indicamos se ocupe inmediatamente.</p> <p>Si, en cambio, no marcamos esta casilla, el espacio se va ocupando seg\u00fan va creciendo el tama\u00f1o de la propia m\u00e1quina. Es decir, el tama\u00f1o que ponemos es el m\u00e1ximo que la m\u00e1quina puede alcanzar.</p> <p>Por ejemplo: si tenemos un Windows 11 al que le hemos puesto 80 GB y la casilla no est\u00e1 marcada, si este sistema solo tiene ocupados 40 GB de los 80 que asignamos, en nuestro disco solo ocupar\u00e1 esos 40.</p> 5. Revisamos y finalizamos <p>Para arrancar la m\u00e1quina podemos hacerlo pulsando bot\u00f3n derecho en ella, pulsando \"iniciar\" en el men\u00fa superior o simplemente haciendo doble click sobre ella.</p> 6. Arrancar la m\u00e1quina Para arrancar la m\u00e1quina podemos hacerlo pulsando bot\u00f3n derecho en ella, pulsando \"iniciar\" en el men\u00fa superior o simplemente haciendo doble click sobre ella."},{"location":"virtualizacion-devops/virtualbox/#configuracion-de-las-maquinas","title":"Configuraci\u00f3n de las m\u00e1quinas","text":"<p>La mayor parte de las configuraciones de m\u00e1quinas solo puede cambiarse si estas est\u00e1n apagadas (tenlo en cuenta). Esto es, no puedes ampliarle la RAM a la VM si est\u00e1 encendida.</p> <p>Para acceder a la configuraci\u00f3n:</p> Accediendo a la configuraci\u00f3n Se puede acceder con bot\u00f3n derecho sobre la m\u00e1quina y \"configuraci\u00f3n\" o bien pulsando sobre la m\u00e1quina con click izquierdo y \"configuraci\u00f3n\" en la parte superior."},{"location":"virtualizacion-devops/virtualbox/#modificar-la-cantidad-de-procesadores-y-ram-de-la-maquina","title":"Modificar la cantidad de procesadores y RAM de la m\u00e1quina","text":"<p>Accedemos a la configuraci\u00f3n \u2192 Sistema. Podemos modificar las cantidades en las pesta\u00f1as \"Placa base\" y \"Procesador\".</p> Cambiando n\u00famero de procesadores Cambiando RAM (pesta\u00f1a placa base)"},{"location":"virtualizacion-devops/virtualbox/#copiar-y-arrastrar-archivos-entre-host-y-maquina-virtual","title":"Copiar y arrastrar archivos entre host y m\u00e1quina virtual","text":"<p>Puede habilitarse el arrastrar y soltar y el copy/paste entre el host y la VM (si no se hace ser\u00edan m\u00e1quinas independientes y no podr\u00edas copiar textos entre una y otra).</p> 6. Compartici\u00f3n entre las m\u00e1quinas de copiar/pegar y arrastrar ficheros Hay que cambiar ambas opciones de \"inhabilitado\" a \"bidireccional\""},{"location":"virtualizacion-devops/virtualbox/#configuracion-de-red","title":"Configuraci\u00f3n de red","text":"<p>Por defecto viene una configuraci\u00f3n NAT. Con NAT, la m\u00e1quina host (nuestro ordenador) no puede hacer ping a la m\u00e1quina virtual (no hay comunicaci\u00f3n entre ellas). A veces nos interesa tener distintas alternativas a esto como, por ejemplo, tener dos m\u00e1quinas en la misma red (adaptador puente) o poner m\u00faltiples m\u00e1quinas sin acceso a internet en la misma red interna (red interna).</p> 6. Configuraciones de RED <p>Esta parte es importante. Consulta este enlace para entender bien como funcionan las configuraciones de red en Virtualbox.</p>"},{"location":"virtualizacion-devops/virtualbox/#practica","title":"Pr\u00e1ctica","text":"<p>En grupos de dos personas realizar una presentaci\u00f3n (de la manera que quieras, con diapositivas, solo im\u00e1genes, puro texto o incluso sin nada). Lo \u00fanico obligatorio es hacer demostraciones pr\u00e1cticas de lo que se indica (ense\u00f1ar carpeta compartida en virtualbox, cambiar procesadores/ram en directo y verlas con comandos, etc.).</p>"},{"location":"virtualizacion-devops/virtualbox/#sistemas-operativos","title":"Sistemas operativos","text":"<ol> <li>Repaso r\u00e1pido de la evaluaci\u00f3n hist\u00f3rica de los sistemas operativos (consultar apuntes: procesamiento por lotes, monousuario, multiusuario, multipgoramaci\u00f3n...)</li> </ol>"},{"location":"virtualizacion-devops/virtualbox/#instalacion-de-sistemas-operativos-y-virtualizacion","title":"Instalaci\u00f3n de sistemas operativos y virtualizaci\u00f3n","text":"<ol> <li>Instala un sistema operativo Windows 11.</li> <li>Instala un sistema operativo Ubuntu 22.04 LTS en una m\u00e1quina virtual. Particiona a mano y explica para que sirven las particiones que creas.</li> <li>Instala un Windows Server 2022.</li> <li>Explica solo 1 de las siguientes:</li> <li>Configuraci\u00f3n de que el portapapeles se comparta entre host y vm.</li> <li>Configuraciones de red, para qu\u00e9 sirven y configurar 2 m\u00e1quinas para que tengan red entre ellas.</li> <li>Carpeta compartida entre una m\u00e1quina virtual y la m\u00e1quina host, de manera que si copias algo en tu m\u00e1quina aparezca en la VM.</li> <li>Como exportar una m\u00e1quina virtual (.ova) y c\u00f3mo cambiar de directorio una m\u00e1quina virtual y que virtualbox la reconozca.</li> <li>Tipos de hipervisores, diferencias.</li> </ol>"},{"location":"virtualizacion-devops/virtualbox/#algoritmos-de-planificacion","title":"Algoritmos de planificaci\u00f3n","text":"<ol> <li>Explica con un ejemplo pr\u00e1ctico como se hace un algoritmo de planificaci\u00f3n (escoge 2):</li> <li>FIFO</li> <li>SJF</li> <li>SRTF</li> <li>Round Robin</li> </ol>"},{"location":"virtualizacion-devops/virtualbox/#sistemas-de-ficheros","title":"Sistemas de ficheros","text":"<ol> <li>Explica los sistemas de archivos m\u00e1s comunes y alg\u00fan peque\u00f1o detalle que consideres interesante de cada uno de ellos (m\u00ednimo 3).</li> <li>\u00bfConoces alg\u00fan sistema de ficheros orientado a compartici\u00f3n de datos a trav\u00e9s de la red?</li> </ol>"},{"location":"virtualizacion-devops/virtualbox/#opcionales-para-nota","title":"OPCIONALES (para nota)","text":"<ol> <li>Instala Proxmox y, dentro de este, instala una VM Almalinux o CentOS (OPCIONAL, PARA NOTA)</li> </ol>"},{"location":"web/intro/","title":"Frontend Roadmap","text":"<p>A continuaci\u00f3n muestro un orden de aprendizaje que se podr\u00eda seguir para el aprendizaje en el cliente (front).</p>"},{"location":"web/intro/#html-css-vscode","title":"HTML, CSS, VSCode","text":"<p>Plugins y configuraci\u00f3n de VSCode. HTML y CSS.</p>"},{"location":"web/intro/#flexbox","title":"Flexbox","text":"<p>Puedes introducirte en Flexbox con peque\u00f1os juegos web:</p> <ul> <li>Flexbox Froggy</li> <li>Flexbox Defense</li> <li>Flexbox Adventure</li> </ul>"},{"location":"web/intro/#css-grid","title":"CSS Grid","text":"<p>Una vez utilizado Flexbox de forma habitual estar\u00eda bien aprender tambi\u00e9n CSS Grid. Juegos online para introducirse:</p> <ul> <li>Grid Attack</li> <li>Grid Garden</li> </ul>"},{"location":"web/intro/#control-de-versiones-git","title":"Control de versiones (Git)","text":"<p>Subir/descargar con Git y Github.</p>"},{"location":"web/intro/#bases-de-javascript","title":"Bases de JavaScript","text":"<ul> <li>Tipos de datos, condicionales, bucles y funciones.</li> <li>Programaci\u00f3n funcional: foreach, map, filter y reduce.</li> <li>Clases y objetos.</li> </ul>"},{"location":"web/intro/#manejo-de-eventos-y-otros","title":"Manejo de eventos y otros","text":"<p>Captura de diversos tipos de eventos, storages, cookies</p>"},{"location":"web/intro/#manipulacion-del-dom","title":"Manipulaci\u00f3n del DOM","text":"<ul> <li>Aprende a crear HTML desde JS.</li> </ul>"},{"location":"web/intro/#conexion-a-servicios-externos","title":"Conexi\u00f3n a servicios externos","text":"<p>Conexi\u00f3n a APIs REST, cabeceras HTTP (request/response).</p> <ol> <li>Fetch y Promises.</li> <li>Async/await.</li> </ol>"},{"location":"web/intro/#utilidades-y-bibliotecas","title":"Utilidades y bibliotecas","text":"<ul> <li>NPM</li> <li>React</li> <li>Vite/Webpack</li> <li>SASS</li> <li>Tailwind/Bootstrap ...</li> </ul>"},{"location":"web/intro/#developer-roadmap","title":"Developer Roadmap","text":"<p>Aqu\u00ed puedes consultar un enorme listado de tecnolog\u00edas y recomendaciones a seguir.</p>"},{"location":"web/js-basics/","title":"Iniciaci\u00f3n a JavaScript","text":""},{"location":"web/js-basics/#conceptos-basicos-de-javascript","title":"Conceptos b\u00e1sicos de JavaScript","text":""},{"location":"web/js-basics/#tipos-de-datos-basicos","title":"Tipos de datos b\u00e1sicos","text":"<ul> <li>Num\u00e9ricos: 2, 4, 7.5, 12387321212, etc.</li> <li>Textos: \"Hola\", 'Hola', 'Buenos d\u00edas'.</li> <li>No definidos: cuando no se establece ning\u00fan valor se marca como undefined.</li> <li>Nulo: existen valores nulos (null)</li> </ul>"},{"location":"web/js-basics/#variables-y-constantes","title":"Variables y constantes","text":""},{"location":"web/js-basics/#declaracion-creacion-de-una-variable","title":"Declaraci\u00f3n (creaci\u00f3n) de una variable","text":"<p>Puedes guardar textos o n\u00fameros en variables. La sintaxis para declarar variables es la siguiente:</p> <pre><code>// Creaci\u00f3n de una variable\nlet nombreVariable\n\n// Declaraci\u00f3n de una constante\nconst nombreConstante\n</code></pre> <p>Comentarios</p> <p>El texto que aparece con // al inicio se llama comentario. No ejecuta ni crea nada nuevo, solo aporta informaci\u00f3n sobre el c\u00f3digo. Puedes escribir comentarios de c\u00f3digo en cualquier sitio empezando con \"//\"</p>"},{"location":"web/js-basics/#asignacion-de-valores-a-una-variable","title":"Asignaci\u00f3n de valores a una variable","text":"<p>Si luego quiero guardar algo en ella solo tengo que usar el operador =: <code>nombreVariable = \"valor\"</code></p> <pre><code>// Asignaci\u00f3n de un valor a una variable (usando el operador '=')\nnombreVariable = 17\n</code></pre> <p>El valor se pone entre comillas si es un texto, sin comillas si es un n\u00famero. Por ejemplo, para un n\u00famero ser\u00eda:</p> <ul> <li>Asignaci\u00f3n de valor num\u00e9rico con: <code>nombreVariable = 17</code></li> <li>Asignaci\u00f3n de un texto: <code>nombreVariable = \"Hola, \u00bfqu\u00e9 tal?</code></li> </ul>"},{"location":"web/js-basics/#ejemplos-de-creacion-de-variables-y-asignacion-de-datos","title":"Ejemplos de creaci\u00f3n de variables y asignaci\u00f3n de datos","text":"<p>Por ejemplo, si en un programa vasa usar mucho el n\u00famero PI puedes guardarlo en una variable que se llame pi:</p> Ejemplo I =&gt; Creaci\u00f3n y asignaci\u00f3n por separado (Number)<pre><code>// Declaraci\u00f3n de una variable de nombre \"pi\"\nlet pi\n\n// Asigno un dato num\u00e9rico a la variable pi usando el operador '='\npi = 3.1415926535897\n</code></pre> Ejemplo II =&gt; Creaci\u00f3n y asignaci\u00f3n por separado (String)<pre><code>// Declaraci\u00f3n de una variable llamada asignatura\nlet asignatura\n\n// Asignaci\u00f3n de un texto a la variable\nasignatura = \"Filosof\u00eda\"\n</code></pre> Ejemplo III =&gt; Cambiando datos a las variables<pre><code>// Declaraci\u00f3n de una variable llamada asignatura\nlet asignatura\n\n// Asignaci\u00f3n de un texto a la variable\nasignatura = \"Filosof\u00eda\"\n\n// Puedo cambiar el valor de la variable asignatura cuando quiera\nasignatura = \"Matem\u00e1ticas\"\n\n// Y vuelvo a cambiarlo nuevamente\nasignatura = \"Historia\"\n\n/*\n\n Lo \u00fanico que NO PUEDO HACER es lo siguiente:\n - No puedo poner \"let\" otra vez porque\n - la variable ya se declar\u00f3 al principio\n - del programa y NO PUEDE VOLVER A DECLARARSE\n\n */\nlet asignatura = \"Ciencias Naturales\" // MAL\n</code></pre> <p>Comentarios</p> <p>El texto que aparece en las \u00faltimas l\u00edneas entre / y / es un comentario multil\u00ednea. No ejecuta ni crea nada nuevo, solo aporta informaci\u00f3n sobre el c\u00f3digo.</p>"},{"location":"web/js-basics/#declaracion-y-asignacion-al-mismo-tiempo","title":"Declaraci\u00f3n y asignaci\u00f3n al mismo tiempo","text":"<p>Si lo pensamos un poco, cuando creamos una variable es porque queremos que almacene algo en su interior. Por ello, la declaraci\u00f3n de variables (<code>let variable</code>) y la asignaci\u00f3n (<code>variable = \"algo\"</code>) se pueden hacer juntas en la misma l\u00ednea:</p> Creaci\u00f3n y asignaci\u00f3n separadasCreaci\u00f3n y asignaci\u00f3n en la misma l\u00edneaCreaci\u00f3n y asignaci\u00f3n de constante Creaci\u00f3n de variable y asignaci\u00f3n en la misma l\u00ednea<pre><code>// Declaraci\u00f3n de una variable llamada asignatura\nlet asignatura\n\n// Asignaci\u00f3n de un valor a la variable\nasignatura = \"Matem\u00e1ticas\"\n</code></pre> Creaci\u00f3n de variable y asignaci\u00f3n en la misma l\u00ednea<pre><code>// Declaraci\u00f3n de una constante llamada asignatura y asignaci\u00f3n de un valor\nlet asignatura = \"Matem\u00e1ticas\"\n</code></pre> Creaci\u00f3n y asignaci\u00f3n de una constante<pre><code>const asignatura = \"Matem\u00e1ticas\" // (1)!\n</code></pre> <ol> <li>Las constantes no pueden crearse y luego asignarse (debe hacerse todo a la vez). Las constantes no pueden cambiar nunca desde el momento de su creaci\u00f3n, por lo que deben tener asignado un valor desde el principio.</li> </ol>"},{"location":"web/js-basics/#operaciones-aritmeticas","title":"Operaciones aritm\u00e9ticas","text":"<p>En programaci\u00f3n podemos hacer tambi\u00e9n operaciones aritm\u00e9ticas, por ejemplo:</p> <ul> <li>SUMA: 4 + 5</li> <li>RESTA: 4 - 5</li> <li>MULTIPLICACI\u00d3N: 4 * 5</li> <li>DIVISI\u00d3N: 4 / 5</li> <li>EXPONENTE: 4**5 (4 elevado a 5).</li> </ul> <p>Vamos a ver un ejemplo de c\u00f3digo (por pasos):</p> Operaciones matem\u00e1ticas con n\u00fameros (I)<pre><code>// Declaraci\u00f3n de variables\nlet suma\nlet resta\nlet multi\nlet division\nlet potencia\n\n// Asignaci\u00f3n de un valor a una variable\nsuma = 4 + 5\nresta = 4 - 5\nmulti = 4 * 5\ndivision = 4 / 5\npotencia = 4**5\n</code></pre>"},{"location":"web/js-basics/#operacion-suma-con-textos","title":"Operaci\u00f3n suma con textos","text":"<p>Los n\u00fameros no es lo \u00fanico que se puede \"sumar\" en programaci\u00f3n. El operador '+' tambi\u00e9n es posible usarlo en textos. Vamos a jugar un poco con variables, texto y n\u00fameros para ver como se pueden unir entre ellos.</p> Operador suma con n\u00fameros y con textos<pre><code>let saludo = \"Hola, buenos d\u00edas.\"\nlet edad = 18\nlet despedida = \"Me despido por hoy, gracias por vuestra atenci\u00f3n.\"\n\n// Vamos a unir (con el operador +) varios textos y n\u00fameros\nlet mensajeFinal = saludo + \" Tengo \" + 18 + \" a\u00f1os.\" + despedida.\n\n// A\u00fan no lo hemos explicado, alert es una funci\u00f3n de sistema\n// que muestra una ventana flotante con un mensaje\nalert(mensajeFinal)\n</code></pre> <p>Prueba el c\u00f3digo y comprueba si funciona. Intenta entenderlo.</p>"},{"location":"web/js-basics/#funciones","title":"Funciones","text":"<p>Cuando tenemos muchas l\u00edneas de c\u00f3digo es bueno agrupar estas l\u00edneas en funciones con un nombre para mantenerlas organizadas.</p> <p>Vamos a ver con un ejemplo como se crea una funci\u00f3n: </p>Declaraci\u00f3n de una funci\u00f3n<pre><code>function nombreFuncion() { // (1)!\n\n}\n</code></pre> <ol> <li>Las funciones siempre tienen la misma estructura:<ol> <li>Empiezan con la palabra clave \"function\"</li> <li>Van seguidas por el nombre de la funci\u00f3n.</li> <li>Luego llevan los par\u00e1metros entre par\u00e9ntesis. En este caso no hay ninguno as\u00ed que solo se abren y cierran =&gt; ().</li> <li>Finalmente, se abren y cierran llaves y ah\u00ed se puede escribir c\u00f3digo.</li> </ol> </li> </ol> <p>Bien, esta funci\u00f3n se puede ejecutar cuando se desee. Si queremos ejecutarla solo tenemos que escribir lo siguiente: </p>Llamada a (o ejecuci\u00f3n de) una funci\u00f3n<pre><code>nombreFuncion()\n</code></pre> <p>Bien, esta explicaci\u00f3n est\u00e1 muy curiosa pero el programa no hace nada. Vamos a ver si hacemos una funci\u00f3n \u00fatil.</p> <p>Vamos a ver con un ejemplo como se crea una funci\u00f3n:</p> Programa que muestra dos mensajes: saludo y despedida.<pre><code>function nombreFuncion() { // (1)!\n    let saludo = \"Hola, buenos d\u00edas.\"\n    let despedida = \"Hasta luego!\"\n\n    alert(saludo)\n    alert(despedida)\n}\n</code></pre> <p>Aqu\u00ed se indicar\u00e1n funciones que se usar\u00e1n para la introducci\u00f3n a JavaScript. Las funciones tienen un nombre que indica lo que hacen por nosotros. Por ejemplo:</p> <ul> <li>funci\u00f3n mostrarEnPantalla: mostrar\u00eda en pantalla algo.</li> <li>funci\u00f3n escribirTexto: escribir\u00e1 algo en la pantalla.</li> <li>funci\u00f3n mostrarImagen: mostrar\u00e1 una imagen en la pantalla.</li> </ul> <p>Pero esto tiene un peque\u00f1o problema, \u00bfc\u00f3mo indico que es lo que muestro? \u00bfqu\u00e9 imagen ense\u00f1o? \u00bfcon qu\u00e9 tama\u00f1o?</p> <p>Bien, pues esto se indica entre par\u00e9ntesis:</p> <ul> <li>funci\u00f3n mostrarEnPantalla(\"Hola :D!\"): mostrar\u00eda en pantalla el texto entre comillas.</li> <li>funci\u00f3n mostrarImagen(\"https://google.com/gatos/gato1\"): mostrar\u00e1 en pantalla la imagen que hay en esa URL.</li> <li>funci\u00f3n mostrarImagen(\"https://google.com/gatos/gato1\", 600, 600): muestra la imagen de la URL con 600 p\u00edxeles de ancho y 600 de alto\").</li> </ul> <p>Puedes crear funciones de la manera que prefieras.</p>"},{"location":"web/js-basics/#funciones-que-ya-vienen-con-javascript","title":"Funciones que ya vienen con Javascript","text":"<p>En Javascript existen ya funciones que hacen cosas por nosotros:</p> <ul> <li>console.log(\"Texto\"): muestra en la consola de Javascript el texto que le indiques.</li> <li>alert(\"Texto\"): muestra una alerta, esto es, un popup el texto que le indiques. Recuerda, si es un texto es entre comillas.</li> <li>prompt(\"Pregunta\"): Puedes introducir un texto y pedir que el usuario haga algo.</li> </ul>"},{"location":"web/js-basics/#ejercicio-sobre-variables-y-constantes","title":"Ejercicio sobre variables y constantes","text":"<p>Intenta lo siguiente:</p> Declaraci\u00f3n de una constante sin asignaci\u00f3n<pre><code>const persona\npersona = \"Luis\"\n\nconsole.log(\"La persona es: \" + persona)\n</code></pre> <ol> <li>\u00bfFunciona? Razona la raz\u00f3n por la que funciona o no funciona el programa anterior y donde falla.</li> </ol>"},{"location":"web/js-basics/#ejercicios-basicos-sobre-variables","title":"Ejercicios b\u00e1sicos sobre variables","text":"<ul> <li>Declara una variable nombre y as\u00edgnale tu nombre. Usa la funci\u00f3n console.log(...) para mostrarlo en consola.</li> <li>Declara una variable apellidos y as\u00edgnale tus apellidos. Usa la funci\u00f3n console.log(...) para mostrarlo en consola.</li> <li>Declara una variable edad y as\u00edgnale tu edad. Usa la funci\u00f3n console.log(...) para mostrarlo en consola.</li> <li>Modifica la variable edad declarada antes para que ahora almacene un 99 y muestralo con console.log.</li> </ul>"},{"location":"web/js-basics/#ejercicios-variados","title":"Ejercicios variados","text":"<p>Crea una carpeta \"ejercicios-basicos-\". Crea dentro un fichero index.html. Desde ese index.html vas a ir cambiando la referencia al fichero .js de cada ejercicio.</p> <ol> <li>Crea un fichero b\u00e1sico index.html que enlace a un fichero javascript de nombre \u201cejercicio1-variables.js\u201d. En ese fichero debes declarar una variable \u201cnum1\u201d y una variable \u201cnum2\u201d, as\u00edgnales valores y luego guarda la suma en una variable resultado que lo muestre por consola.</li> <li>Haz lo mismo que en el anterior ahora en ejercicio2-variables.js, pero ahora que los reste y muestre el resultado por pantalla.</li> <li>Copia el fichero ejercicio1-variables.js y ll\u00e1male ejercicio3-sumastrings.js. Ahora, en lugar de darle los n\u00fameros escritos a mano t\u00fa mismo, vas a pedir al usuario que los introduzca el. Para pedir al usuario que introduzca un n\u00famero puedes llamar a la funci\u00f3n prompt(\"Texto de la pregunta\").<ul> <li>\u00bfEl resultado es el esperado? \u00bfQu\u00e9 est\u00e1 haciendo el programa? No te preocupes si no ocurre lo que esperabas, en los siguientes ejercicios veremos c\u00f3mo arreglar este problema.</li> </ul> </li> <li>Copia el fichero ejercicio3-sumastrings.js a ejercicio4-suma-numeros.js.<ul> <li>En ese ejercicio deber\u00edas tener tres variables (una con el primer n\u00famero, otra con el segundo y otra con el resultado). Muestra un mensaje con el tipo de cada una. Para ello se usa la funci\u00f3n typeof(valor). El mensaje que deber\u00eda aparecer en consola es: \u201cEl tipo de la variable es: Number\u201c (si es que de verdad es un n\u00famero \u2026 \ud83e\udd14</li> <li>Si todo ha ido correcto te pondr\u00e1 que es un \u201cString\u201d, es decir, un texto. Prueba ahora a declarar una variable de nombre \u201cprueba\u201d y asignarle como valor un n\u00famero. Haz lo mismo que en el apartado a) para ver de que tipo es (deber\u00eda decirte que es un n\u00famero).</li> </ul> </li> <li>Copia el fichero ejercicio3-sumastrings.js a ejercicio5-suma-numeros.js. Corrige el ejercicio anterior para que sume correctamente. La raz\u00f3n por la que no suma bien es porque cada n\u00famero realmente es una texto o cadena de caracteres (string). Es decir, es un texto no un n\u00famero de verdad. Para convertir un valor en num\u00e9rico se usa la funci\u00f3n Number(texto). Arregla el ejercicio para que sume bien ayud\u00e1ndote de la funci\u00f3n Number(...).</li> <li>En javascript existen varios tipos de datos (num\u00e9ricos, texto, datos no definidos, valores nulos, etc.). En este ejercicio vamos a probarlos. Crea un fichero de nombre ejercicio6-tipos-de-datos.js.<ul> <li>Crea una variable variable1 y no le asignes ning\u00fan valor. Indica de qu\u00e9 tipo es con un mensaje de consola como el siguiente: \u201cEl tipo de la variable \u201cvariable1\u201d es: \u2026\u201d.</li> <li>As\u00edgnale ahora (sin borrar nada de lo anterior) a variable1 el valor null (sin comillas. Mira de nuevo de que tipo es.</li> <li>A las variables se le pueden asignar listas de cosas tambi\u00e9n (se hace usando corchetes []). As\u00edgnale a variable1 lo siguiente tal cu\u00e1l: [1, 2, 3, 17].</li> <li>Muestra los datos del segundo elemento y del cuarto. Recuerda, los arrays empiezan en el elemento 0.</li> <li>Crea un array de nombre alumnosTic que tenga los nombres del alumnado de clase:<ul> <li>Muestra el n\u00famero de alumnos de clase.</li> <li>Convierte el segundo elemento a may\u00fasculas.</li> <li>Convierte el 5\u00ba elemento a min\u00fasculas.</li> <li>Haz que, aunque el array cambie de tama\u00f1o, siempre se muestre el pen\u00faltimo alumno.</li> </ul> </li> </ul> </li> <li>Crea un script de nombre ejercicio-7-funciones.js. Crea una funci\u00f3n que muestre por consola el mensaje \u201cHola mundo\u201d. La funci\u00f3n debe llamarse \u201csaludar\u201d. Crear una funci\u00f3n no implica que esta se ejecute, as\u00ed que no olvides hacerlo para probarla!<ul> <li>Indica, como en el ejercicio anterior usando typeof, de qu\u00e9 tipo es la funci\u00f3n saludar.</li> </ul> </li> <li>Copia el script ejercicio-7-funciones.js con el nombre ejercicio-8-funciones-parametros.js.<ul> <li>Crea una funci\u00f3n mostrarMensajeAlegre que muestre por pantalla un mensaje que le pases como par\u00e1metro y termine el mensaje con un emoticono contento. Pru\u00e9bala.</li> <li>Crea una funci\u00f3n que reste dos n\u00fameros y muestre el resultado en el documento HTML (usando la funci\u00f3n <code>document.write(\"texto\")</code> para mostrarlo).</li> <li>Crea una funci\u00f3n que multiplique (operador ) 5 n\u00fameros pasados como par\u00e1metro a la funci\u00f3n y devuelva (retorne) el total*. Prueba esa funci\u00f3n y muestra el resultado por consola.</li> <li>Crea una funci\u00f3n de nombre saludarPersona que devuelva un mensaje de saludo a una persona con unos nombres y apellidos dados. La funci\u00f3n debe recibir como par\u00e1metros:<ul> <li>Nombre de la persona.</li> <li>Primer apellido.</li> <li>Segundo apellido.</li> </ul> </li> <li>El resultado para \"Juan\", \"P\u00e9rez\", \"L\u00f3pez\" deber\u00eda ser algo as\u00ed: Hola Juan P\u00e9rez L\u00f3pez. Bienvenido a casa \ud83d\ude4b \ud83d\udc95 !. Puedes consultar como poner emoticonos en este enlace.</li> </ul> </li> <li>Crea un fichero js ejercicio-9-grados.js que pida al usuario una cantidad en grados Celsius y la pase a grados Kelvin. El mensaje de respuesta deber\u00e1 ser el siguiente: X grados Celsius son Y grados Kelvin y deber\u00e1 mostrarse en el HTML de la p\u00e1gina en letras grandes.</li> <li>Crea un fichero js ejercicio-10-grados.js que haga lo mismo que el ejercicio anterior, pero ahora usando una funci\u00f3n convertirAKelvin. Esa funci\u00f3n debe encargarse \u00fanica y exclusivamente de la transformaci\u00f3n de celsius a Kelvin. Es decir, la funci\u00f3n recibir\u00e1 como par\u00e1metro unos grados Celsius y devolver\u00e1 los Kelvin. La propia funci\u00f3n no debe escribir en pantalla.</li> <li>Crea un programa ejercicio-11-ejercicios-funciones-variados.js.<ol> <li>Crea un programa que calcule el volumen de una esfera y lo muestre en la p\u00e1gina web. El programa deber\u00e1 pedir al usuario que introduzca un radio y calcular el volumen. La f\u00f3rmula del volumen es V = 4/3 * PI * R^3. Para hacerlo lo mejor posible crea una funci\u00f3n que se ocupe de calcular el volumen a partir del radio pasado como par\u00e1metro.</li> <li>Crea una funci\u00f3n que, pasado como par\u00e1metro un precio y un IVA, calcule el precio con IVA.</li> <li>Crea una funci\u00f3n que, pasado un precio y un descuento como par\u00e1metros, devuelva el precio con descuento.</li> </ol> </li> </ol>"},{"location":"windows/powershell/","title":"Powershell","text":"<p>Powershell es un int\u00e9rprete de comandos que trata de sustituir al terminal de comandos antiguo (CMD.exe).</p> <p>PowerShell tiene los siguientes elementos: - Commandlets (o cmdlets): son los comandos de Powershell y se componen de: Verbo-Nombre. Por ejemplo:   - Get-Alias  - Alias: permite llamar a los comandos con nombres diferentes. Algunos ejemplos de alias creados por defecto en PowerShell son: </p> Comando PS Alias Get-ChildItem ls Set-Location cd Get-Location pwd Write-Output echo <ul> <li>Funciones: se utilizan para </li> </ul>"},{"location":"windows/windows-setup/","title":"Introducci\u00f3n","text":""},{"location":"windows/windows-setup/#windows-server","title":"Windows Server","text":""},{"location":"windows/windows-setup/#descarga","title":"Descarga","text":"<p>Para descargar cualquier sistema operativo de Microsoft en versi\u00f3n de prueba se puede acceder al centro de evaluaci\u00f3n de microsoft y posteriormente seleccionar el sistema operativo deseado.  </p>"},{"location":"windows/windows-setup/#versiones","title":"Versiones","text":"<p>En WS 2019 tenemos lo siguiente, de m\u00e1s barato a m\u00e1s caro:</p> <ul> <li>Windows Server 2019 Essential. Destinado a peque\u00f1os negocios y con un m\u00e1ximo de 25 usuarios pueden conectarse a el y 50 dispositivos. Actualmente Microsoft recomienda no usar esta versi\u00f3n y utilizar, en su lugar, su soluci\u00f3n de servidores en la nube Microsoft 365.</li> <li>Windows Server 2019 Standard: bueno para entornos f\u00edsicos (que no usan m\u00e1quinas o casi no usan m\u00e1quinas virtuales). Viene solamente con dos licencias virtuales (es decir, podemos instalar WS2019 Standard con dos VMs en HyperV pero no incrementar a una tercera a no ser que la compremos). Adem\u00e1s, si usamos el servidor f\u00edsico para cualquier otra cosa que no sea esas dos m\u00e1quinas virtuales entonces consumir\u00e1 una de esas licencias.</li> <li>Windows Server 2019 Datacenter: viene con licencias ilimitadas para ejecutar m\u00e1quinas virtuales (esto es, puedes crear tantas VMs como quieras).</li> <li>Hyper-V server 2019: servidor dedicado de m\u00e1quinas virtuales con Hyper-V. Se puede descargar de la web de Microsoft con infinitas m\u00e1quinas virtuales. Viene sin GUI y no podemos hacer otra cosa que albergar en el m\u00e1quinas virtuales.</li> </ul> <p>Las diferencias m\u00e1s grandes que hay entre las versiones Standard y Datacenter es el n\u00famero de licencias para virtualizaci\u00f3n.</p>"},{"location":"windows/windows-setup/#instalaciones-desatendidas","title":"Instalaciones desatendidas","text":""},{"location":"windows/windows-setup/#configuraciones-basicas-en-ws-2019","title":"Configuraciones b\u00e1sicas en WS 2019","text":""},{"location":"windows/windows-setup/#referencias","title":"Referencias","text":"<ul> <li>Kevin Brown. Windows Server 2019 Administration. Udemy. Curso disponible en: https://www.udemy.com/course/windows-server-2019-administration-h/</li> </ul>"}]}